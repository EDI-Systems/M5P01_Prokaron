; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\ltdc.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\ltdc.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Core -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Inc -I.\Source -I.\Drivers -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F767IGT6-ALIENTEK\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\ltdc.crf Drivers\ltdc.c]
                          THUMB

                          AREA ||i.HAL_LTDC_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_LTDC_MspInit PROC
;;;328    
;;;329    void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
000000  4835              LDR      r0,|L1.216|
;;;330    {
000002  b510              PUSH     {r4,lr}
000004  b086              SUB      sp,sp,#0x18
;;;331        GPIO_InitTypeDef GPIO_Initure;
;;;332        
;;;333        __HAL_RCC_LTDC_CLK_ENABLE();
000006  6801              LDR      r1,[r0,#0]
000008  f0416180          ORR      r1,r1,#0x4000000
00000c  6001              STR      r1,[r0,#0]
00000e  6800              LDR      r0,[r0,#0]
000010  f0006080          AND      r0,r0,#0x4000000
;;;334        __HAL_RCC_DMA2D_CLK_ENABLE();
000014  9005              STR      r0,[sp,#0x14]
000016  4830              LDR      r0,|L1.216|
000018  3814              SUBS     r0,r0,#0x14
00001a  6801              LDR      r1,[r0,#0]
00001c  f4410100          ORR      r1,r1,#0x800000
000020  6001              STR      r1,[r0,#0]
000022  6801              LDR      r1,[r0,#0]
000024  f4010100          AND      r1,r1,#0x800000
;;;335        __HAL_RCC_GPIOB_CLK_ENABLE();
000028  9105              STR      r1,[sp,#0x14]
00002a  6801              LDR      r1,[r0,#0]
00002c  f0410102          ORR      r1,r1,#2
000030  6001              STR      r1,[r0,#0]
000032  6801              LDR      r1,[r0,#0]
000034  f0010102          AND      r1,r1,#2
;;;336        __HAL_RCC_GPIOF_CLK_ENABLE();
000038  9105              STR      r1,[sp,#0x14]
00003a  6801              LDR      r1,[r0,#0]
00003c  f0410120          ORR      r1,r1,#0x20
000040  6001              STR      r1,[r0,#0]
000042  6801              LDR      r1,[r0,#0]
000044  f0010120          AND      r1,r1,#0x20
;;;337        __HAL_RCC_GPIOG_CLK_ENABLE();
000048  9105              STR      r1,[sp,#0x14]
00004a  6801              LDR      r1,[r0,#0]
00004c  f0410140          ORR      r1,r1,#0x40
000050  6001              STR      r1,[r0,#0]
000052  6801              LDR      r1,[r0,#0]
000054  f0010140          AND      r1,r1,#0x40
;;;338        __HAL_RCC_GPIOH_CLK_ENABLE();
000058  9105              STR      r1,[sp,#0x14]
00005a  6801              LDR      r1,[r0,#0]
00005c  f0410180          ORR      r1,r1,#0x80
000060  6001              STR      r1,[r0,#0]
000062  6801              LDR      r1,[r0,#0]
000064  f0010180          AND      r1,r1,#0x80
;;;339        __HAL_RCC_GPIOI_CLK_ENABLE();
000068  9105              STR      r1,[sp,#0x14]
00006a  6801              LDR      r1,[r0,#0]
00006c  f4417180          ORR      r1,r1,#0x100
000070  6001              STR      r1,[r0,#0]
000072  6800              LDR      r0,[r0,#0]
;;;340        
;;;341        GPIO_Initure.Pin=GPIO_PIN_5;
;;;342        GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;
;;;343        GPIO_Initure.Pull=GPIO_PULLUP;
;;;344        GPIO_Initure.Speed=GPIO_SPEED_HIGH;
000074  2403              MOVS     r4,#3
000076  2120              MOVS     r1,#0x20              ;341
000078  f4007080          AND      r0,r0,#0x100          ;339
00007c  9005              STR      r0,[sp,#0x14]         ;342
00007e  2001              MOVS     r0,#1                 ;342
;;;345        HAL_GPIO_Init(GPIOB,&GPIO_Initure);
000080  e9cd0402          STRD     r0,r4,[sp,#8]
000084  e9cd1000          STRD     r1,r0,[sp,#0]         ;341
000088  4814              LDR      r0,|L1.220|
00008a  4669              MOV      r1,sp
00008c  f7fffffe          BL       HAL_GPIO_Init
;;;346    
;;;347        GPIO_Initure.Pin=GPIO_PIN_10; 
;;;348        GPIO_Initure.Mode=GPIO_MODE_AF_PP;
000090  2102              MOVS     r1,#2
;;;349        GPIO_Initure.Pull=GPIO_NOPULL;              
000092  2200              MOVS     r2,#0
;;;350        GPIO_Initure.Speed=GPIO_SPEED_HIGH;
;;;351        GPIO_Initure.Alternate=GPIO_AF14_LTDC;
000094  230e              MOVS     r3,#0xe
000096  9304              STR      r3,[sp,#0x10]
000098  f44f6080          MOV      r0,#0x400             ;347
00009c  e88d0017          STM      sp,{r0-r2,r4}
;;;352        HAL_GPIO_Init(GPIOF,&GPIO_Initure);
0000a0  480f              LDR      r0,|L1.224|
0000a2  4669              MOV      r1,sp
0000a4  f7fffffe          BL       HAL_GPIO_Init
;;;353        
;;;354        GPIO_Initure.Pin=GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
0000a8  f44f600c          MOV      r0,#0x8c0
;;;355        HAL_GPIO_Init(GPIOG,&GPIO_Initure);
0000ac  9000              STR      r0,[sp,#0]
0000ae  480d              LDR      r0,|L1.228|
0000b0  4669              MOV      r1,sp
0000b2  f7fffffe          BL       HAL_GPIO_Init
;;;356        
;;;357        GPIO_Initure.Pin=GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|\
0000b6  f44f407e          MOV      r0,#0xfe00
;;;358                         GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
;;;359        HAL_GPIO_Init(GPIOH,&GPIO_Initure);
0000ba  9000              STR      r0,[sp,#0]
0000bc  480a              LDR      r0,|L1.232|
0000be  4669              MOV      r1,sp
0000c0  f7fffffe          BL       HAL_GPIO_Init
;;;360        
;;;361        GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5|\
0000c4  f24060f7          MOV      r0,#0x6f7
;;;362                         GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9|GPIO_PIN_10;
;;;363        HAL_GPIO_Init(GPIOI,&GPIO_Initure); 
0000c8  9000              STR      r0,[sp,#0]
0000ca  4808              LDR      r0,|L1.236|
0000cc  4669              MOV      r1,sp
0000ce  f7fffffe          BL       HAL_GPIO_Init
;;;364    }
0000d2  b006              ADD      sp,sp,#0x18
0000d4  bd10              POP      {r4,pc}
;;;365    
                          ENDP

0000d6  0000              DCW      0x0000
                  |L1.216|
                          DCD      0x40023844
                  |L1.220|
                          DCD      0x40020400
                  |L1.224|
                          DCD      0x40021400
                  |L1.228|
                          DCD      0x40021800
                  |L1.232|
                          DCD      0x40021c00
                  |L1.236|
                          DCD      0x40022000

                          AREA ||i.LTDC_Clear||, CODE, READONLY, ALIGN=2

                  LTDC_Clear PROC
;;;160    
;;;161    void LTDC_Clear(u32 color)
000000  b508              PUSH     {r3,lr}
;;;162    {
;;;163        LTDC_Fill(0,0,lcdltdc.width-1,lcdltdc.height-1,color);
000002  9000              STR      r0,[sp,#0]
000004  4805              LDR      r0,|L2.28|
000006  8b01              LDRH     r1,[r0,#0x18]  ; lcdltdc
000008  8ac0              LDRH     r0,[r0,#0x16]  ; lcdltdc
00000a  1e49              SUBS     r1,r1,#1
00000c  b28b              UXTH     r3,r1
00000e  1e40              SUBS     r0,r0,#1
000010  b282              UXTH     r2,r0
000012  2100              MOVS     r1,#0
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       LTDC_Fill
;;;164    }
00001a  bd08              POP      {r3,pc}
;;;165    
                          ENDP

                  |L2.28|
                          DCD      ||.bss||+0xac

                          AREA ||i.LTDC_Clk_Set||, CODE, READONLY, ALIGN=1

                  LTDC_Clk_Set PROC
;;;165    
;;;166    u8 LTDC_Clk_Set(u32 pllsain,u32 pllsair,u32 pllsaidivr)
000000  b500              PUSH     {lr}
;;;167    {
000002  b0a5              SUB      sp,sp,#0x94
;;;168        RCC_PeriphCLKInitTypeDef PeriphClkIniture;
;;;169    
;;;170        PeriphClkIniture.PeriphClockSelection=RCC_PERIPHCLK_LTDC;
000004  2308              MOVS     r3,#8
;;;171        PeriphClkIniture.PLLSAI.PLLSAIN=pllsain;    
;;;172        PeriphClkIniture.PLLSAI.PLLSAIR=pllsair;  
;;;173        PeriphClkIniture.PLLSAIDivR=pllsaidivr;
;;;174        if(HAL_RCCEx_PeriphCLKConfig(&PeriphClkIniture)==HAL_OK)
000006  9300              STR      r3,[sp,#0]
000008  920b              STR      r2,[sp,#0x2c]
00000a  9107              STR      r1,[sp,#0x1c]
00000c  9005              STR      r0,[sp,#0x14]
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       HAL_RCCEx_PeriphCLKConfig
000014  2800              CMP      r0,#0
000016  d000              BEQ      |L3.26|
;;;175            return 0;
;;;176        else 
;;;177            return 1;
000018  2001              MOVS     r0,#1
                  |L3.26|
;;;178    }
00001a  b025              ADD      sp,sp,#0x94
00001c  bd00              POP      {pc}
;;;179    
                          ENDP


                          AREA ||i.LTDC_Color_Fill||, CODE, READONLY, ALIGN=2

                  LTDC_Color_Fill PROC
;;;124    
;;;125    void LTDC_Color_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 *color)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;126    {
;;;127        u32 psx,psy,pex,pey;
;;;128        u32 timeout=0; 
;;;129        u16 offline;
;;;130        u32 addr; 
;;;131    
;;;132        if(lcdltdc.dir)
000004  4e27              LDR      r6,|L4.164|
000006  2500              MOVS     r5,#0                 ;128
000008  f8dda020          LDR      r10,[sp,#0x20]        ;126
00000c  7d74              LDRB     r4,[r6,#0x15]  ; lcdltdc
00000e  b114              CBZ      r4,|L4.22|
;;;133        {
;;;134            psx=sx;psy=sy;
000010  4604              MOV      r4,r0
;;;135            pex=ex;pey=ey;
000012  4617              MOV      r7,r2
000014  e006              B        |L4.36|
                  |L4.22|
;;;136        }else
;;;137        {
;;;138            psx=sy;psy=lcdltdc.pheight-ex-1;
;;;139            pex=ey;pey=lcdltdc.pheight-sx-1;
000016  461f              MOV      r7,r3
000018  6873              LDR      r3,[r6,#4]            ;138  ; lcdltdc
00001a  460c              MOV      r4,r1                 ;138
00001c  1a99              SUBS     r1,r3,r2              ;138
00001e  1a1b              SUBS     r3,r3,r0
000020  1e49              SUBS     r1,r1,#1
000022  1e5b              SUBS     r3,r3,#1
                  |L4.36|
;;;140        }
;;;141        offline=lcdltdc.pwidth-(pex-psx+1);
000024  6830              LDR      r0,[r6,#0]  ; lcdltdc
;;;142        addr=((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*psy+psx));
;;;143        RCC->AHB1ENR|=1<<23;
000026  f8df9080          LDR      r9,|L4.168|
00002a  1b3a              SUBS     r2,r7,r4              ;141
00002c  1a87              SUBS     r7,r0,r2              ;141
00002e  f896c014          LDRB     r12,[r6,#0x14]        ;142  ; lcdltdc
000032  fb004401          MLA      r4,r0,r1,r4           ;142
;;;144        DMA2D->CR=0<<16;
;;;145        DMA2D->FGPFCCR=LCD_PIXFORMAT;
;;;146        DMA2D->FGOR=0;
;;;147        DMA2D->OOR=offline;
;;;148        DMA2D->CR&=~(1<<0);
;;;149        DMA2D->FGMAR=(u32)color;
;;;150        DMA2D->OMAR=addr;
;;;151        DMA2D->NLR=(pey-psy+1)|((pex-psx+1)<<16);
000036  1a59              SUBS     r1,r3,r1
000038  f8d93000          LDR      r3,[r9,#0]            ;143
00003c  f8df8070          LDR      r8,|L4.176|
000040  1e7f              SUBS     r7,r7,#1              ;143
000042  69f6              LDR      r6,[r6,#0x1c]         ;142  ; lcdltdc
000044  4819              LDR      r0,|L4.172|
000046  f858802c          LDR      r8,[r8,r12,LSL #2]    ;142
00004a  f4430c00          ORR      r12,r3,#0x800000      ;143
00004e  fb068404          MLA      r4,r6,r4,r8           ;142
000052  b2bb              UXTH     r3,r7                 ;141
000054  f8c9c000          STR      r12,[r9,#0]           ;143
000058  2600              MOVS     r6,#0                 ;144
00005a  6006              STR      r6,[r0,#0]            ;144
00005c  2702              MOVS     r7,#2                 ;145
00005e  61c7              STR      r7,[r0,#0x1c]         ;145
000060  6106              STR      r6,[r0,#0x10]         ;146
000062  03fe              LSLS     r6,r7,#15
000064  6403              STR      r3,[r0,#0x40]         ;147
000066  6803              LDR      r3,[r0,#0]            ;148
000068  1c49              ADDS     r1,r1,#1
00006a  eb064202          ADD      r2,r6,r2,LSL #16
00006e  4311              ORRS     r1,r1,r2
000070  f0230201          BIC      r2,r3,#1              ;148
000074  6002              STR      r2,[r0,#0]            ;148
000076  f8c0a00c          STR      r10,[r0,#0xc]         ;149
00007a  63c4              STR      r4,[r0,#0x3c]         ;150
00007c  6441              STR      r1,[r0,#0x44]
;;;152        DMA2D->CR|=1<<0;
00007e  6802              LDR      r2,[r0,#0]
;;;153        while((DMA2D->ISR&(1<<1))==0)
;;;154        {
;;;155            timeout++;
;;;156            if(timeout>0X1FFFFF)break;
000080  0171              LSLS     r1,r6,#5
000082  f0420201          ORR      r2,r2,#1              ;152
000086  6002              STR      r2,[r0,#0]            ;152
000088  e002              B        |L4.144|
                  |L4.138|
00008a  1c6d              ADDS     r5,r5,#1              ;153
00008c  428d              CMP      r5,r1
00008e  d202              BCS      |L4.150|
                  |L4.144|
000090  6842              LDR      r2,[r0,#4]            ;153
000092  0792              LSLS     r2,r2,#30             ;153
000094  d5f9              BPL      |L4.138|
                  |L4.150|
;;;157        } 
;;;158        DMA2D->IFCR|=1<<1;
000096  6881              LDR      r1,[r0,#8]
000098  f0410102          ORR      r1,r1,#2
00009c  6081              STR      r1,[r0,#8]
;;;159    }
00009e  e8bd87f0          POP      {r4-r10,pc}
;;;160    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L4.164|
                          DCD      ||.bss||+0xac
                  |L4.168|
                          DCD      0x40023830
                  |L4.172|
                          DCD      0x4002b000
                  |L4.176|
                          DCD      ||.data||

                          AREA ||i.LTDC_Display_Dir||, CODE, READONLY, ALIGN=2

                  LTDC_Display_Dir PROC
;;;33     
;;;34     void LTDC_Display_Dir(u8 dir)
000000  4907              LDR      r1,|L5.32|
;;;35     {
;;;36         lcdltdc.dir=dir;
000002  460a              MOV      r2,r1
000004  7548              STRB     r0,[r1,#0x15]
;;;37         if(dir==0)
;;;38         {
;;;39             lcdltdc.width=lcdltdc.pheight;
000006  8893              LDRH     r3,[r2,#4]
;;;40             lcdltdc.height=lcdltdc.pwidth;    
000008  8812              LDRH     r2,[r2,#0]
00000a  b29b              UXTH     r3,r3                 ;39
00000c  b292              UXTH     r2,r2
00000e  b120              CBZ      r0,|L5.26|
;;;41         }else if(dir==1)
000010  2801              CMP      r0,#1
000012  d101              BNE      |L5.24|
;;;42         {
;;;43             lcdltdc.width=lcdltdc.pwidth;
000014  82ca              STRH     r2,[r1,#0x16]
;;;44             lcdltdc.height=lcdltdc.pheight;
000016  830b              STRH     r3,[r1,#0x18]
                  |L5.24|
;;;45         }
;;;46     }
000018  4770              BX       lr
                  |L5.26|
00001a  82cb              STRH     r3,[r1,#0x16]         ;39
00001c  830a              STRH     r2,[r1,#0x18]         ;40
00001e  4770              BX       lr
;;;47     
                          ENDP

                  |L5.32|
                          DCD      ||.bss||+0xac

                          AREA ||i.LTDC_Draw_Point||, CODE, READONLY, ALIGN=2

                  LTDC_Draw_Point PROC
;;;47     
;;;48     void LTDC_Draw_Point(u16 x,u16 y,u32 color)
000000  b5f0              PUSH     {r4-r7,lr}
;;;49     { 
;;;50     #if LCD_PIXFORMAT==LCD_PIXFORMAT_ARGB8888||LCD_PIXFORMAT==LCD_PIXFORMAT_RGB888
;;;51         if(lcdltdc.dir)
;;;52         {
;;;53             *(u32*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*y+x))=color;
;;;54         }else
;;;55         {
;;;56             *(u32*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*(lcdltdc.pheight-x-1)+y))=color; 
;;;57         }
;;;58     #else
;;;59         if(lcdltdc.dir)
000002  4c0c              LDR      r4,|L6.52|
;;;60         {
;;;61             *(u16*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*y+x))=color;
000004  b295              UXTH     r5,r2
000006  f8dfc030          LDR      r12,|L6.56|
00000a  4623              MOV      r3,r4                 ;59
00000c  7d67              LDRB     r7,[r4,#0x15]         ;59  ; lcdltdc
00000e  7d1e              LDRB     r6,[r3,#0x14]
000010  69da              LDR      r2,[r3,#0x1c]
000012  681b              LDR      r3,[r3,#0]
000014  f85c6026          LDR      r6,[r12,r6,LSL #2]
000018  b127              CBZ      r7,|L6.36|
00001a  fb030001          MLA      r0,r3,r1,r0
00001e  4342              MULS     r2,r0,r2
000020  52b5              STRH     r5,[r6,r2]
;;;62         }else
;;;63         {
;;;64             *(u16*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*(lcdltdc.pheight-x-1)+y))=color; 
;;;65         }
;;;66     #endif
;;;67     }
000022  bdf0              POP      {r4-r7,pc}
                  |L6.36|
000024  6864              LDR      r4,[r4,#4]            ;64  ; lcdltdc
000026  1a20              SUBS     r0,r4,r0              ;64
000028  1e40              SUBS     r0,r0,#1              ;64
00002a  fb031000          MLA      r0,r3,r0,r1           ;64
00002e  4350              MULS     r0,r2,r0              ;64
000030  5235              STRH     r5,[r6,r0]            ;64
000032  bdf0              POP      {r4-r7,pc}
;;;68     
                          ENDP

                  |L6.52|
                          DCD      ||.bss||+0xac
                  |L6.56|
                          DCD      ||.data||

                          AREA ||i.LTDC_Fill||, CODE, READONLY, ALIGN=2

                  LTDC_Fill PROC
;;;89     
;;;90     void LTDC_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u32 color)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;91     { 
;;;92         u32 psx,psy,pex,pey;
;;;93         u32 timeout=0; 
;;;94         u16 offline;
;;;95         u32 addr; 
;;;96     
;;;97         if(lcdltdc.dir)
000004  4d27              LDR      r5,|L7.164|
000006  2700              MOVS     r7,#0                 ;93
000008  f8dda020          LDR      r10,[sp,#0x20]        ;91
00000c  7d6c              LDRB     r4,[r5,#0x15]  ; lcdltdc
00000e  b114              CBZ      r4,|L7.22|
;;;98         {
;;;99             psx=sx;psy=sy;
000010  4604              MOV      r4,r0
;;;100            pex=ex;pey=ey;
000012  4616              MOV      r6,r2
000014  e006              B        |L7.36|
                  |L7.22|
;;;101        }else
;;;102        {
;;;103            psx=sy;psy=lcdltdc.pheight-ex-1;
;;;104            pex=ey;pey=lcdltdc.pheight-sx-1;
000016  461e              MOV      r6,r3
000018  686b              LDR      r3,[r5,#4]            ;103  ; lcdltdc
00001a  460c              MOV      r4,r1                 ;103
00001c  1a99              SUBS     r1,r3,r2              ;103
00001e  1a1b              SUBS     r3,r3,r0
000020  1e49              SUBS     r1,r1,#1
000022  1e5b              SUBS     r3,r3,#1
                  |L7.36|
;;;105        } 
;;;106        offline=lcdltdc.pwidth-(pex-psx+1);
000024  6828              LDR      r0,[r5,#0]  ; lcdltdc
;;;107        addr=((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*psy+psx));
;;;108        RCC->AHB1ENR|=1<<23;
000026  f8df9080          LDR      r9,|L7.168|
00002a  1b32              SUBS     r2,r6,r4              ;106
00002c  1a86              SUBS     r6,r0,r2              ;106
00002e  f895c014          LDRB     r12,[r5,#0x14]        ;107  ; lcdltdc
000032  fb004401          MLA      r4,r0,r1,r4           ;107
;;;109        DMA2D->CR=3<<16;
;;;110        DMA2D->OPFCCR=LCD_PIXFORMAT;
;;;111        DMA2D->OOR=offline;
;;;112        DMA2D->CR&=~(1<<0);
;;;113        DMA2D->OMAR=addr;
;;;114        DMA2D->NLR=(pey-psy+1)|((pex-psx+1)<<16);
000036  1a59              SUBS     r1,r3,r1
000038  f8d93000          LDR      r3,[r9,#0]            ;108
00003c  f8df8070          LDR      r8,|L7.176|
000040  1e76              SUBS     r6,r6,#1              ;108
000042  69ed              LDR      r5,[r5,#0x1c]         ;107  ; lcdltdc
000044  4819              LDR      r0,|L7.172|
000046  f858802c          LDR      r8,[r8,r12,LSL #2]    ;107
00004a  f4430c00          ORR      r12,r3,#0x800000      ;108
00004e  fb058404          MLA      r4,r5,r4,r8           ;107
000052  b2b3              UXTH     r3,r6                 ;106
000054  f8c9c000          STR      r12,[r9,#0]           ;108
000058  f44f3640          MOV      r6,#0x30000           ;109
00005c  6006              STR      r6,[r0,#0]            ;109
00005e  2502              MOVS     r5,#2                 ;110
000060  6345              STR      r5,[r0,#0x34]         ;110
000062  6403              STR      r3,[r0,#0x40]         ;111
000064  03ed              LSLS     r5,r5,#15
000066  6803              LDR      r3,[r0,#0]            ;112
000068  1c49              ADDS     r1,r1,#1
00006a  eb054202          ADD      r2,r5,r2,LSL #16
00006e  4311              ORRS     r1,r1,r2
000070  f0230201          BIC      r2,r3,#1              ;112
000074  6002              STR      r2,[r0,#0]            ;112
000076  63c4              STR      r4,[r0,#0x3c]         ;113
000078  6441              STR      r1,[r0,#0x44]
;;;115        DMA2D->OCOLR=color;
00007a  f8c0a038          STR      r10,[r0,#0x38]
;;;116        DMA2D->CR|=1<<0;
00007e  6802              LDR      r2,[r0,#0]
;;;117        while((DMA2D->ISR&(1<<1))==0)
;;;118        {
;;;119            timeout++;
;;;120            if(timeout>0X1FFFFF)break;
000080  0169              LSLS     r1,r5,#5
000082  f0420201          ORR      r2,r2,#1              ;116
000086  6002              STR      r2,[r0,#0]            ;116
000088  e002              B        |L7.144|
                  |L7.138|
00008a  1c7f              ADDS     r7,r7,#1              ;117
00008c  428f              CMP      r7,r1
00008e  d202              BCS      |L7.150|
                  |L7.144|
000090  6842              LDR      r2,[r0,#4]            ;117
000092  0792              LSLS     r2,r2,#30             ;117
000094  d5f9              BPL      |L7.138|
                  |L7.150|
;;;121        }  
;;;122        DMA2D->IFCR|=1<<1;
000096  6881              LDR      r1,[r0,#8]
000098  f0410102          ORR      r1,r1,#2
00009c  6081              STR      r1,[r0,#8]
;;;123    }
00009e  e8bd87f0          POP      {r4-r10,pc}
;;;124    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L7.164|
                          DCD      ||.bss||+0xac
                  |L7.168|
                          DCD      0x40023830
                  |L7.172|
                          DCD      0x4002b000
                  |L7.176|
                          DCD      ||.data||

                          AREA ||i.LTDC_Init||, CODE, READONLY, ALIGN=2

                  LTDC_Init PROC
;;;241    
;;;242    void LTDC_Init(void)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;243    {   
;;;244        u16 lcdid=0;
;;;245        
;;;246        lcdid=LTDC_PanelID_Read();
000004  f7fffffe          BL       LTDC_PanelID_Read
;;;247        if(lcdid==0X4342)
000008  f5a04186          SUB      r1,r0,#0x4300
;;;248        {
;;;249            lcdltdc.pwidth=480;
00000c  4c5f              LDR      r4,|L8.396|
00000e  3942              SUBS     r1,r1,#0x42           ;247
;;;250            lcdltdc.pheight=272;
;;;251            lcdltdc.hsw=1;
000010  f04f0101          MOV      r1,#1
000014  f44f73f0          MOV      r3,#0x1e0             ;249
000018  d013              BEQ      |L8.66|
;;;252            lcdltdc.vsw=1;
;;;253            lcdltdc.hbp=40;
;;;254            lcdltdc.vbp=8;
;;;255            lcdltdc.hfp=5;
;;;256            lcdltdc.vfp=8;
;;;257            LTDC_Clk_Set(288,4,RCC_PLLSAIDIVR_8);
;;;258    
;;;259        }else if(lcdid==0X7084)
00001a  f5a042e0          SUB      r2,r0,#0x7000
00001e  3a84              SUBS     r2,r2,#0x84
;;;260        {
;;;261            lcdltdc.pwidth=800;
000020  f44f7548          MOV      r5,#0x320
;;;262            lcdltdc.pheight=480;
;;;263            lcdltdc.hsw=1;
;;;264            lcdltdc.vsw=1;
;;;265            lcdltdc.hbp=46;
;;;266            lcdltdc.vbp=23;
;;;267            lcdltdc.hfp=210;
;;;268            lcdltdc.vfp=22;
;;;269            LTDC_Clk_Set(396,3,RCC_PLLSAIDIVR_4);
000024  f44f3280          MOV      r2,#0x10000
000028  d01d              BEQ      |L8.102|
;;;270        }else if(lcdid==0X7016)        
;;;271        {
;;;272            lcdltdc.pwidth=1024;
00002a  0289              LSLS     r1,r1,#10
00002c  f5a043e0          SUB      r3,r0,#0x7000         ;270
000030  3b16              SUBS     r3,r3,#0x16           ;270
000032  d02a              BEQ      |L8.138|
;;;273            lcdltdc.pheight=600;
;;;274            lcdltdc.hsw=20;
;;;275            lcdltdc.vsw=3;
;;;276            lcdltdc.hbp=140;
;;;277            lcdltdc.vbp=20;
;;;278            lcdltdc.hfp=160;
;;;279            lcdltdc.vfp=12;
;;;280            LTDC_Clk_Set(360,2,RCC_PLLSAIDIVR_4);
;;;281        }else if(lcdid==0X7018)        
000034  1e9a              SUBS     r2,r3,#2
000036  d03f              BEQ      |L8.184|
;;;282        {
;;;283            lcdltdc.pwidth=1280;
;;;284            lcdltdc.pheight=800;
;;;285        }else if(lcdid==0X8017)        
000038  f5a04200          SUB      r2,r0,#0x8000
00003c  3a17              SUBS     r2,r2,#0x17
00003e  d040              BEQ      |L8.194|
000040  e043              B        |L8.202|
                  |L8.66|
000042  f44f7288          MOV      r2,#0x110             ;250
000046  2008              MOVS     r0,#8                 ;254
000048  2528              MOVS     r5,#0x28              ;253
00004a  e9c43200          STRD     r3,r2,[r4,#0]         ;255
00004e  8121              STRH     r1,[r4,#8]            ;251
000050  2605              MOVS     r6,#5                 ;255
000052  8161              STRH     r1,[r4,#0xa]          ;252
000054  0382              LSLS     r2,r0,#14             ;257
000056  81a5              STRH     r5,[r4,#0xc]          ;253
000058  2104              MOVS     r1,#4                 ;257
00005a  81e0              STRH     r0,[r4,#0xe]          ;254
00005c  8226              STRH     r6,[r4,#0x10]         ;255
00005e  8260              STRH     r0,[r4,#0x12]         ;256
000060  f44f7090          MOV      r0,#0x120             ;257
000064  e025              B        |L8.178|
                  |L8.102|
000066  e9c45300          STRD     r5,r3,[r4,#0]         ;268
00006a  8121              STRH     r1,[r4,#8]            ;263
00006c  202e              MOVS     r0,#0x2e              ;265
00006e  8161              STRH     r1,[r4,#0xa]          ;264
000070  2617              MOVS     r6,#0x17              ;266
000072  81a0              STRH     r0,[r4,#0xc]          ;265
000074  27d2              MOVS     r7,#0xd2              ;267
000076  81e6              STRH     r6,[r4,#0xe]          ;266
000078  2103              MOVS     r1,#3                 ;269
00007a  8227              STRH     r7,[r4,#0x10]         ;267
00007c  f44f70c6          MOV      r0,#0x18c             ;269
000080  f04f0c16          MOV      r12,#0x16             ;268
000084  f8a4c012          STRH     r12,[r4,#0x12]        ;268
000088  e013              B        |L8.178|
                  |L8.138|
00008a  f44f7316          MOV      r3,#0x258             ;273
00008e  f04f0c0c          MOV      r12,#0xc              ;279
000092  2014              MOVS     r0,#0x14              ;274
000094  2503              MOVS     r5,#3                 ;275
000096  e9c41300          STRD     r1,r3,[r4,#0]         ;279
00009a  8120              STRH     r0,[r4,#8]            ;274
00009c  268c              MOVS     r6,#0x8c              ;276
00009e  8165              STRH     r5,[r4,#0xa]          ;275
0000a0  27a0              MOVS     r7,#0xa0              ;278
0000a2  81a6              STRH     r6,[r4,#0xc]          ;276
0000a4  2102              MOVS     r1,#2                 ;280
0000a6  81e0              STRH     r0,[r4,#0xe]          ;277
0000a8  f44f70b4          MOV      r0,#0x168             ;280
0000ac  8227              STRH     r7,[r4,#0x10]         ;278
0000ae  f8a4c012          STRH     r12,[r4,#0x12]        ;279
                  |L8.178|
0000b2  f7fffffe          BL       LTDC_Clk_Set
0000b6  e008              B        |L8.202|
                  |L8.184|
0000b8  f44f60a0          MOV      r0,#0x500             ;283
0000bc  e9c40500          STRD     r0,r5,[r4,#0]         ;283
0000c0  e003              B        |L8.202|
                  |L8.194|
;;;286        {
;;;287            lcdltdc.pwidth=1024;
;;;288            lcdltdc.pheight=768;
0000c2  f44f7040          MOV      r0,#0x300
0000c6  e9c41000          STRD     r1,r0,[r4,#0]
                  |L8.202|
;;;289        }
;;;290    
;;;291        lcddev.width=lcdltdc.pwidth;
0000ca  4b31              LDR      r3,|L8.400|
;;;292        lcddev.height=lcdltdc.pheight;
;;;293        
;;;294    #if LCD_PIXFORMAT==LCD_PIXFORMAT_ARGB8888||LCD_PIXFORMAT==LCD_PIXFORMAT_RGB888 
;;;295        ltdc_framebuf[0]=(u32*)&ltdc_lcd_framebuf;
;;;296        lcdltdc.pixsize=4;
;;;297    #else 
;;;298        lcdltdc.pixsize=2;
0000cc  2602              MOVS     r6,#2
0000ce  6821              LDR      r1,[r4,#0]            ;291  ; lcdltdc
;;;299        ltdc_framebuf[0]=(u32*)&ltdc_lcd_framebuf;
;;;300    #endif     
;;;301        
;;;302        LTDC_Handler.Instance=LTDC;
;;;303        LTDC_Handler.Init.HSPolarity=LTDC_HSPOLARITY_AL;
0000d0  2500              MOVS     r5,#0
0000d2  f8df80c0          LDR      r8,|L8.404|
0000d6  482d              LDR      r0,|L8.396|
0000d8  8019              STRH     r1,[r3,#0]            ;291
0000da  6862              LDR      r2,[r4,#4]            ;292  ; lcdltdc
0000dc  38ac              SUBS     r0,r0,#0xac           ;302
0000de  805a              STRH     r2,[r3,#2]            ;292
0000e0  61e6              STR      r6,[r4,#0x1c]         ;299  ; lcdltdc
0000e2  4e2e              LDR      r6,|L8.412|
0000e4  4f2c              LDR      r7,|L8.408|
0000e6  f8c86000          STR      r6,[r8,#0]            ;299  ; ltdc_framebuf
0000ea  e9c07500          STRD     r7,r5,[r0,#0]         ;299
;;;304        LTDC_Handler.Init.VSPolarity=LTDC_VSPOLARITY_AL;
;;;305        LTDC_Handler.Init.DEPolarity=LTDC_DEPOLARITY_AL;
0000ee  6085              STR      r5,[r0,#8]  ; LTDC_Handler
;;;306        LTDC_Handler.Init.PCPolarity=LTDC_PCPOLARITY_IPC;
0000f0  60c5              STR      r5,[r0,#0xc]  ; LTDC_Handler
;;;307        LTDC_Handler.Init.HorizontalSync=lcdltdc.hsw-1;
0000f2  6105              STR      r5,[r0,#0x10]  ; LTDC_Handler
0000f4  8923              LDRH     r3,[r4,#8]  ; lcdltdc
0000f6  1e5e              SUBS     r6,r3,#1
;;;308        LTDC_Handler.Init.VerticalSync=lcdltdc.vsw-1;
0000f8  6146              STR      r6,[r0,#0x14]  ; LTDC_Handler
0000fa  8966              LDRH     r6,[r4,#0xa]  ; lcdltdc
0000fc  1e77              SUBS     r7,r6,#1
;;;309        LTDC_Handler.Init.AccumulatedHBP=lcdltdc.hsw+lcdltdc.hbp-1;
0000fe  6187              STR      r7,[r0,#0x18]  ; LTDC_Handler
000100  89a7              LDRH     r7,[r4,#0xc]  ; lcdltdc
000102  443b              ADD      r3,r3,r7
000104  1e5f              SUBS     r7,r3,#1
;;;310        LTDC_Handler.Init.AccumulatedVBP=lcdltdc.vsw+lcdltdc.vbp-1;
000106  61c7              STR      r7,[r0,#0x1c]  ; LTDC_Handler
000108  89e7              LDRH     r7,[r4,#0xe]  ; lcdltdc
00010a  443e              ADD      r6,r6,r7
00010c  1e77              SUBS     r7,r6,#1
;;;311        LTDC_Handler.Init.AccumulatedActiveW=lcdltdc.hsw+lcdltdc.hbp+lcdltdc.pwidth-1;
00010e  6207              STR      r7,[r0,#0x20]  ; LTDC_Handler
000110  1e4f              SUBS     r7,r1,#1
000112  441f              ADD      r7,r7,r3
;;;312        LTDC_Handler.Init.AccumulatedActiveH=lcdltdc.vsw+lcdltdc.vbp+lcdltdc.pheight-1;
000114  6247              STR      r7,[r0,#0x24]  ; LTDC_Handler
000116  1e57              SUBS     r7,r2,#1
000118  4437              ADD      r7,r7,r6
;;;313        LTDC_Handler.Init.TotalWidth=lcdltdc.hsw+lcdltdc.hbp+lcdltdc.pwidth+lcdltdc.hfp-1;
00011a  6287              STR      r7,[r0,#0x28]  ; LTDC_Handler
00011c  8a27              LDRH     r7,[r4,#0x10]  ; lcdltdc
00011e  4439              ADD      r1,r1,r7
000120  4419              ADD      r1,r1,r3
000122  1e49              SUBS     r1,r1,#1
;;;314        LTDC_Handler.Init.TotalHeigh=lcdltdc.vsw+lcdltdc.vbp+lcdltdc.pheight+lcdltdc.vfp-1;
000124  62c1              STR      r1,[r0,#0x2c]  ; LTDC_Handler
000126  8a61              LDRH     r1,[r4,#0x12]  ; lcdltdc
000128  4411              ADD      r1,r1,r2
00012a  4431              ADD      r1,r1,r6
00012c  1e49              SUBS     r1,r1,#1
;;;315        LTDC_Handler.Init.Backcolor.Red=0;
00012e  6301              STR      r1,[r0,#0x30]  ; LTDC_Handler
000130  f8805036          STRB     r5,[r0,#0x36]
;;;316        LTDC_Handler.Init.Backcolor.Green=0;
000134  f8805035          STRB     r5,[r0,#0x35]
;;;317        LTDC_Handler.Init.Backcolor.Blue=0;
000138  f8805034          STRB     r5,[r0,#0x34]
;;;318        HAL_LTDC_Init(&LTDC_Handler);
00013c  f7fffffe          BL       HAL_LTDC_Init
;;;319    
;;;320        LTDC_Layer_Parameter_Config(0,(u32)ltdc_framebuf[0],LCD_PIXFORMAT,255,0,6,7,0X000000);
000140  2106              MOVS     r1,#6
000142  2007              MOVS     r0,#7
000144  e9cd0502          STRD     r0,r5,[sp,#8]
000148  e9cd5100          STRD     r5,r1,[sp,#0]
00014c  f8d81000          LDR      r1,[r8,#0]  ; ltdc_framebuf
000150  23ff              MOVS     r3,#0xff
000152  2202              MOVS     r2,#2
000154  2000              MOVS     r0,#0
000156  f7fffffe          BL       LTDC_Layer_Parameter_Config
;;;321        LTDC_Layer_Window_Config(0,0,0,lcdltdc.pwidth,lcdltdc.pheight);
00015a  88a0              LDRH     r0,[r4,#4]  ; lcdltdc
00015c  2200              MOVS     r2,#0
00015e  4611              MOV      r1,r2
000160  b280              UXTH     r0,r0
000162  9000              STR      r0,[sp,#0]
000164  8820              LDRH     r0,[r4,#0]  ; lcdltdc
000166  b283              UXTH     r3,r0
000168  4610              MOV      r0,r2
00016a  f7fffffe          BL       LTDC_Layer_Window_Config
;;;322             
;;;323         LTDC_Display_Dir(0);
00016e  2000              MOVS     r0,#0
000170  f7fffffe          BL       LTDC_Display_Dir
;;;324        LTDC_Select_Layer(0);
;;;325        LCD_LED(1);
000174  480a              LDR      r0,|L8.416|
000176  2201              MOVS     r2,#1
000178  2120              MOVS     r1,#0x20
00017a  7525              STRB     r5,[r4,#0x14]
00017c  f7fffffe          BL       HAL_GPIO_WritePin
;;;326        LTDC_Clear(0XFFFFFFFF);
000180  b004              ADD      sp,sp,#0x10
000182  1e68              SUBS     r0,r5,#1
000184  e8bd41f0          POP      {r4-r8,lr}
000188  f7ffbffe          B.W      LTDC_Clear
;;;327    }
;;;328    
                          ENDP

                  |L8.396|
                          DCD      ||.bss||+0xac
                  |L8.400|
                          DCD      lcddev
                  |L8.404|
                          DCD      ||.data||
                  |L8.408|
                          DCD      0x40016800
                  |L8.412|
                          DCD      ||.ARM.__AT_0xC0000000||
                  |L8.416|
                          DCD      0x40020400

                          AREA ||i.LTDC_Layer_Parameter_Config||, CODE, READONLY, ALIGN=2

                  LTDC_Layer_Parameter_Config PROC
;;;185    
;;;186    void LTDC_Layer_Parameter_Config(u8 layerx,u32 bufaddr,u8 pixformat,u8 alpha,u8 alpha0,u8 bfac1,u8 bfac2,u32 bkcolor)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;187    {
000004  b08d              SUB      sp,sp,#0x34
;;;188        LTDC_LayerCfgTypeDef pLayerCfg;
;;;189        
;;;190        pLayerCfg.WindowX0=0;
;;;191        pLayerCfg.WindowY0=0;
;;;192        pLayerCfg.WindowX1=lcdltdc.pwidth;
000006  4d14              LDR      r5,|L9.88|
000008  4614              MOV      r4,r2                 ;187
00000a  2200              MOVS     r2,#0                 ;190
00000c  e9ddc716          LDRD     r12,r7,[sp,#0x58]     ;187
000010  e9dd9814          LDRD     r9,r8,[sp,#0x50]      ;187
000014  9200              STR      r2,[sp,#0]            ;191
000016  9202              STR      r2,[sp,#8]
;;;193        pLayerCfg.WindowY1=lcdltdc.pheight;
;;;194        pLayerCfg.PixelFormat=pixformat;
;;;195        pLayerCfg.Alpha=alpha;
;;;196        pLayerCfg.Alpha0=alpha0;
;;;197        pLayerCfg.BlendingFactor1=(u32)bfac1<<8;
;;;198        pLayerCfg.BlendingFactor2=(u32)bfac2<<8;
000018  ea4f2c0c          LSL      r12,r12,#8
00001c  682e              LDR      r6,[r5,#0]            ;192  ; lcdltdc
00001e  9601              STR      r6,[sp,#4]            ;193
000020  ea4f2808          LSL      r8,r8,#8              ;197
000024  686d              LDR      r5,[r5,#4]            ;193  ; lcdltdc
000026  e9cd4304          STRD     r4,r3,[sp,#0x10]      ;193
00002a  9503              STR      r5,[sp,#0xc]          ;193
00002c  464b              MOV      r3,r9                 ;196
;;;199        pLayerCfg.FBStartAdress=bufaddr;
;;;200        pLayerCfg.ImageWidth=lcdltdc.pwidth;
;;;201        pLayerCfg.ImageHeight=lcdltdc.pheight;
00002e  950b              STR      r5,[sp,#0x2c]
000030  e9cd1609          STRD     r1,r6,[sp,#0x24]
000034  ae06              ADD      r6,sp,#0x18
;;;202        pLayerCfg.Backcolor.Red=(u8)(bkcolor&0X00FF0000)>>16;
;;;203        pLayerCfg.Backcolor.Green=(u8)(bkcolor&0X0000FF00)>>8;
;;;204        pLayerCfg.Backcolor.Blue=(u8)bkcolor&0X000000FF;
;;;205        HAL_LTDC_ConfigLayer(&LTDC_Handler,&pLayerCfg,layerx);
000036  4669              MOV      r1,sp
000038  e8861108          STM      r6,{r3,r8,r12}        ;201
00003c  f88d2032          STRB     r2,[sp,#0x32]         ;202
000040  f88d2031          STRB     r2,[sp,#0x31]         ;203
000044  4602              MOV      r2,r0
000046  4804              LDR      r0,|L9.88|
000048  f88d7030          STRB     r7,[sp,#0x30]         ;204
00004c  38ac              SUBS     r0,r0,#0xac
00004e  f7fffffe          BL       HAL_LTDC_ConfigLayer
;;;206    }  
000052  b00d              ADD      sp,sp,#0x34
000054  e8bd83f0          POP      {r4-r9,pc}
;;;207    
                          ENDP

                  |L9.88|
                          DCD      ||.bss||+0xac

                          AREA ||i.LTDC_Layer_Switch||, CODE, READONLY, ALIGN=2

                  LTDC_Layer_Switch PROC
;;;21     
;;;22     void LTDC_Layer_Switch(u8 layerx,u8 sw)
000000  4b0b              LDR      r3,|L10.48|
;;;23     {
000002  b510              PUSH     {r4,lr}
;;;24         if(sw==1) __HAL_LTDC_LAYER_ENABLE(&LTDC_Handler,layerx);
000004  2484              MOVS     r4,#0x84
000006  2901              CMP      r1,#1
000008  681a              LDR      r2,[r3,#0]            ;23
00000a  eb0410c0          ADD      r0,r4,r0,LSL #7
00000e  d001              BEQ      |L10.20|
;;;25         else if(sw==0) __HAL_LTDC_LAYER_DISABLE(&LTDC_Handler,layerx);
000010  b121              CBZ      r1,|L10.28|
000012  e007              B        |L10.36|
                  |L10.20|
000014  5811              LDR      r1,[r2,r0]            ;24
000016  f0410101          ORR      r1,r1,#1              ;24
00001a  e002              B        |L10.34|
                  |L10.28|
00001c  5811              LDR      r1,[r2,r0]
00001e  f0210101          BIC      r1,r1,#1
                  |L10.34|
000022  5011              STR      r1,[r2,r0]
                  |L10.36|
;;;26         __HAL_LTDC_RELOAD_CONFIG(&LTDC_Handler);
000024  6818              LDR      r0,[r3,#0]  ; LTDC_Handler
000026  6a41              LDR      r1,[r0,#0x24]
000028  f0410101          ORR      r1,r1,#1
00002c  6241              STR      r1,[r0,#0x24]
;;;27     }
00002e  bd10              POP      {r4,pc}
;;;28     
                          ENDP

                  |L10.48|
                          DCD      ||.bss||

                          AREA ||i.LTDC_Layer_Window_Config||, CODE, READONLY, ALIGN=2

                  LTDC_Layer_Window_Config PROC
;;;179    
;;;180    void LTDC_Layer_Window_Config(u8 layerx,u16 sx,u16 sy,u16 width,u16 height)
000000  b570              PUSH     {r4-r6,lr}
;;;181    {
000002  461e              MOV      r6,r3
000004  4604              MOV      r4,r0
;;;182        HAL_LTDC_SetWindowPosition(&LTDC_Handler,sx,sy,layerx);
000006  4603              MOV      r3,r0
000008  4805              LDR      r0,|L11.32|
00000a  9d04              LDR      r5,[sp,#0x10]
00000c  f7fffffe          BL       HAL_LTDC_SetWindowPosition
;;;183        HAL_LTDC_SetWindowSize(&LTDC_Handler,width,height,layerx);
000010  4623              MOV      r3,r4
000012  462a              MOV      r2,r5
000014  4631              MOV      r1,r6
000016  4802              LDR      r0,|L11.32|
000018  e8bd4070          POP      {r4-r6,lr}
00001c  f7ffbffe          B.W      HAL_LTDC_SetWindowSize
;;;184    }
;;;185    
                          ENDP

                  |L11.32|
                          DCD      ||.bss||

                          AREA ||i.LTDC_PanelID_Read||, CODE, READONLY, ALIGN=2

                  LTDC_PanelID_Read PROC
;;;207    
;;;208    u16 LTDC_PanelID_Read(void)
000000  4829              LDR      r0,|L12.168|
;;;209    {
000002  b530              PUSH     {r4,r5,lr}
000004  b087              SUB      sp,sp,#0x1c
;;;210        u8 idx=0;
;;;211        GPIO_InitTypeDef GPIO_Initure;
;;;212        __HAL_RCC_GPIOG_CLK_ENABLE();
000006  6801              LDR      r1,[r0,#0]
000008  f0410140          ORR      r1,r1,#0x40
00000c  6001              STR      r1,[r0,#0]
00000e  6801              LDR      r1,[r0,#0]
000010  f0010140          AND      r1,r1,#0x40
;;;213        __HAL_RCC_GPIOI_CLK_ENABLE();
000014  9105              STR      r1,[sp,#0x14]
000016  6801              LDR      r1,[r0,#0]
000018  f4417180          ORR      r1,r1,#0x100
00001c  6001              STR      r1,[r0,#0]
00001e  6800              LDR      r0,[r0,#0]
;;;214        
;;;215        GPIO_Initure.Pin=GPIO_PIN_6;
;;;216        GPIO_Initure.Mode=GPIO_MODE_INPUT;
000020  2100              MOVS     r1,#0
;;;217        GPIO_Initure.Pull=GPIO_PULLUP;
000022  2201              MOVS     r2,#1
;;;218        GPIO_Initure.Speed=GPIO_SPEED_HIGH;
;;;219        HAL_GPIO_Init(GPIOG,&GPIO_Initure);
000024  4c21              LDR      r4,|L12.172|
000026  f4007080          AND      r0,r0,#0x100          ;213
00002a  9005              STR      r0,[sp,#0x14]         ;215
00002c  2040              MOVS     r0,#0x40              ;215
00002e  2303              MOVS     r3,#3                 ;218
000030  e88d000f          STM      sp,{r0-r3}            ;218
000034  4669              MOV      r1,sp
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       HAL_GPIO_Init
;;;220        
;;;221        GPIO_Initure.Pin=GPIO_PIN_2|GPIO_PIN_7;
;;;222        HAL_GPIO_Init(GPIOI,&GPIO_Initure);
00003c  4d1c              LDR      r5,|L12.176|
00003e  2084              MOVS     r0,#0x84              ;221
000040  4669              MOV      r1,sp
000042  9000              STR      r0,[sp,#0]
000044  4628              MOV      r0,r5
000046  f7fffffe          BL       HAL_GPIO_Init
;;;223        
;;;224        idx=(u8)HAL_GPIO_ReadPin(GPIOG,GPIO_PIN_6);
00004a  2140              MOVS     r1,#0x40
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       HAL_GPIO_ReadPin
;;;225        idx|=(u8)HAL_GPIO_ReadPin(GPIOI,GPIO_PIN_2)<<1;
000052  2104              MOVS     r1,#4
000054  4604              MOV      r4,r0                 ;224
000056  4628              MOV      r0,r5
000058  f7fffffe          BL       HAL_GPIO_ReadPin
00005c  ea440440          ORR      r4,r4,r0,LSL #1
;;;226        idx|=(u8)HAL_GPIO_ReadPin(GPIOI,GPIO_PIN_7)<<2;
000060  4628              MOV      r0,r5
000062  2180              MOVS     r1,#0x80
000064  f7fffffe          BL       HAL_GPIO_ReadPin
000068  ea440080          ORR      r0,r4,r0,LSL #2
00006c  f01000ff          ANDS     r0,r0,#0xff
;;;227    
;;;228        if(idx==0)
000070  d00a              BEQ      |L12.136|
;;;229            return 0X4342;
;;;230        else if(idx==1)
000072  2801              CMP      r0,#1
000074  d00b              BEQ      |L12.142|
;;;231            return 0X7084;
;;;232        else if(idx==2)
000076  2802              CMP      r0,#2
000078  d00c              BEQ      |L12.148|
;;;233            return 0X7016;
;;;234        else if(idx==3)
00007a  2803              CMP      r0,#3
00007c  d00d              BEQ      |L12.154|
;;;235            return 0X7018;
;;;236        else if(idx==4)
00007e  2804              CMP      r0,#4
000080  d00e              BEQ      |L12.160|
;;;237            return 0X8017;
;;;238        else 
;;;239            return 0;
000082  2000              MOVS     r0,#0
                  |L12.132|
;;;240    }
000084  b007              ADD      sp,sp,#0x1c
000086  bd30              POP      {r4,r5,pc}
                  |L12.136|
000088  f2443042          MOV      r0,#0x4342            ;229
00008c  e7fa              B        |L12.132|
                  |L12.142|
00008e  f2470084          MOV      r0,#0x7084            ;231
000092  e7f7              B        |L12.132|
                  |L12.148|
000094  f2470016          MOV      r0,#0x7016            ;233
000098  e7f4              B        |L12.132|
                  |L12.154|
00009a  f2470018          MOV      r0,#0x7018            ;235
00009e  e7f1              B        |L12.132|
                  |L12.160|
0000a0  f2480017          MOV      r0,#0x8017            ;237
0000a4  e7ee              B        |L12.132|
;;;241    
                          ENDP

0000a6  0000              DCW      0x0000
                  |L12.168|
                          DCD      0x40023830
                  |L12.172|
                          DCD      0x40021800
                  |L12.176|
                          DCD      0x40022000

                          AREA ||i.LTDC_Read_Point||, CODE, READONLY, ALIGN=2

                  LTDC_Read_Point PROC
;;;68     
;;;69     u32 LTDC_Read_Point(u16 x,u16 y)
000000  b5f0              PUSH     {r4-r7,lr}
;;;70     { 
;;;71     #if LCD_PIXFORMAT==LCD_PIXFORMAT_ARGB8888||LCD_PIXFORMAT==LCD_PIXFORMAT_RGB888
;;;72         if(lcdltdc.dir)
;;;73         {
;;;74             return *(u32*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*y+x));
;;;75         }else
;;;76         {
;;;77             return *(u32*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*(lcdltdc.pheight-x-1)+y)); 
;;;78         }
;;;79     #else
;;;80         if(lcdltdc.dir)
000002  4b0c              LDR      r3,|L13.52|
;;;81         {
;;;82             return *(u16*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*y+x));
000004  f8dfc030          LDR      r12,|L13.56|
000008  461c              MOV      r4,r3                 ;80
00000a  7d5f              LDRB     r7,[r3,#0x15]         ;80  ; lcdltdc
00000c  7d26              LDRB     r6,[r4,#0x14]
00000e  6825              LDR      r5,[r4,#0]
000010  69e2              LDR      r2,[r4,#0x1c]
000012  f85c4026          LDR      r4,[r12,r6,LSL #2]
000016  b127              CBZ      r7,|L13.34|
000018  fb050001          MLA      r0,r5,r1,r0
00001c  4342              MULS     r2,r0,r2
00001e  5aa0              LDRH     r0,[r4,r2]
;;;83         }else
;;;84         {
;;;85             return *(u16*)((u32)ltdc_framebuf[lcdltdc.activelayer]+lcdltdc.pixsize*(lcdltdc.pwidth*(lcdltdc.pheight-x-1)+y)); 
;;;86         }
;;;87     #endif 
;;;88     }
000020  bdf0              POP      {r4-r7,pc}
                  |L13.34|
000022  685b              LDR      r3,[r3,#4]            ;85  ; lcdltdc
000024  1a18              SUBS     r0,r3,r0              ;85
000026  1e40              SUBS     r0,r0,#1              ;85
000028  fb051000          MLA      r0,r5,r0,r1           ;85
00002c  4350              MULS     r0,r2,r0              ;85
00002e  5a20              LDRH     r0,[r4,r0]            ;85
000030  bdf0              POP      {r4-r7,pc}
;;;89     
                          ENDP

000032  0000              DCW      0x0000
                  |L13.52|
                          DCD      ||.bss||+0xac
                  |L13.56|
                          DCD      ||.data||

                          AREA ||i.LTDC_Select_Layer||, CODE, READONLY, ALIGN=2

                  LTDC_Select_Layer PROC
;;;28     
;;;29     void LTDC_Select_Layer(u8 layerx)
000000  4901              LDR      r1,|L14.8|
;;;30     {
;;;31         lcdltdc.activelayer=layerx;
000002  7508              STRB     r0,[r1,#0x14]
;;;32     }
000004  4770              BX       lr
;;;33     
                          ENDP

000006  0000              DCW      0x0000
                  |L14.8|
                          DCD      ||.bss||+0xac

                          AREA ||i.LTDC_Switch||, CODE, READONLY, ALIGN=2

                  LTDC_Switch PROC
;;;15     
;;;16     void LTDC_Switch(u8 sw)
000000  4907              LDR      r1,|L15.32|
;;;17     {
;;;18         if(sw==1) __HAL_LTDC_ENABLE(&LTDC_Handler);
000002  2801              CMP      r0,#1
000004  6809              LDR      r1,[r1,#0]
000006  d006              BEQ      |L15.22|
;;;19         else if(sw==0)__HAL_LTDC_DISABLE(&LTDC_Handler);
000008  2800              CMP      r0,#0
00000a  d103              BNE      |L15.20|
00000c  6988              LDR      r0,[r1,#0x18]
00000e  f0200001          BIC      r0,r0,#1
                  |L15.18|
000012  6188              STR      r0,[r1,#0x18]         ;18
                  |L15.20|
;;;20     }
000014  4770              BX       lr
                  |L15.22|
000016  6988              LDR      r0,[r1,#0x18]         ;18
000018  f0400001          ORR      r0,r0,#1              ;18
00001c  e7f9              B        |L15.18|
;;;21     
                          ENDP

00001e  0000              DCW      0x0000
                  |L15.32|
                          DCD      ||.bss||

                          AREA ||.ARM.__AT_0xC0000000||, DATA, NOINIT, ALIGN=1

                  ltdc_lcd_framebuf
                          %        2048000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  LTDC_Handler
                          %        172
                  lcdltdc
                          %        32

                          AREA ||area_number.19||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.bss||
                  DMA2D_Handler
                          %        92

                          AREA ||.data||, DATA, ALIGN=2

                  ltdc_framebuf
                          %        8

;*** Start embedded assembler ***

#line 1 "Drivers\\ltdc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_ltdc_c_2f5cfd20____REV16|
#line 468 "D:\\Program_Files_x86\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.3.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_ltdc_c_2f5cfd20____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_ltdc_c_2f5cfd20____REVSH|
#line 483
|__asm___6_ltdc_c_2f5cfd20____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_ltdc_c_2f5cfd20____RRX|
#line 670
|__asm___6_ltdc_c_2f5cfd20____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
