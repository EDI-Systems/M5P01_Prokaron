; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\sdram.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\sdram.d --cpu=Cortex-M7 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Inc -I.\Source -I.\Drivers -I..\..\..\M6P1(L)_Lua\lua -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F767IGT6-ALIENTEK-LUA\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER -Dlua_writestring=RMP_lua_writestring -Dlua_writeline=RMP_lua_writeline --enum_is_int --signed_chars --omf_browse=.\debug\output\sdram.crf Drivers\sdram.c]
                          THUMB

                          AREA ||i.FMC_SDRAM_ReadBuffer||, CODE, READONLY, ALIGN=1

                  FMC_SDRAM_ReadBuffer PROC
;;;108    
;;;109    void FMC_SDRAM_ReadBuffer(u8 *pBuffer,u32 ReadAddr,u32 n)
000000  e006              B        |L1.16|
                  |L1.2|
;;;110    {
;;;111        for(;n!=0;n--)
;;;112        {
;;;113            *pBuffer++=*(vu8*)(Bank5_SDRAM_ADDR+ReadAddr);
000002  f1a14380          SUB      r3,r1,#0x40000000
000006  781b              LDRB     r3,[r3,#0]
000008  f8003b01          STRB     r3,[r0],#1
;;;114            ReadAddr++;
00000c  1c49              ADDS     r1,r1,#1
00000e  1e52              SUBS     r2,r2,#1              ;111
                  |L1.16|
000010  2a00              CMP      r2,#0                 ;111
000012  d1f6              BNE      |L1.2|
;;;115        }
;;;116    }
000014  4770              BX       lr
                          ENDP


                          AREA ||i.FMC_SDRAM_WriteBuffer||, CODE, READONLY, ALIGN=1

                  FMC_SDRAM_WriteBuffer PROC
;;;98     
;;;99     void FMC_SDRAM_WriteBuffer(u8 *pBuffer,u32 WriteAddr,u32 n)
000000  b510              PUSH     {r4,lr}
;;;100    {
;;;101        for(;n!=0;n--)
000002  e006              B        |L2.18|
                  |L2.4|
;;;102        {
;;;103            *(vu8*)(Bank5_SDRAM_ADDR+WriteAddr)=*pBuffer;
000004  7804              LDRB     r4,[r0,#0]
000006  f1a14380          SUB      r3,r1,#0x40000000
00000a  701c              STRB     r4,[r3,#0]
;;;104            WriteAddr++;
00000c  1c49              ADDS     r1,r1,#1
;;;105            pBuffer++;
00000e  1c40              ADDS     r0,r0,#1
000010  1e52              SUBS     r2,r2,#1              ;101
                  |L2.18|
000012  2a00              CMP      r2,#0                 ;101
000014  d1f6              BNE      |L2.4|
;;;106        }
;;;107    }
000016  bd10              POP      {r4,pc}
;;;108    
                          ENDP


                          AREA ||i.HAL_SDRAM_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_SDRAM_MspInit PROC
;;;49     
;;;50     void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef *hsdram)
000000  b510              PUSH     {r4,lr}
;;;51     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;52         GPIO_InitTypeDef GPIO_Initure;
;;;53         
;;;54         __HAL_RCC_FMC_CLK_ENABLE();
000006  bf00              NOP      
000008  483e              LDR      r0,|L3.260|
00000a  6800              LDR      r0,[r0,#0]
00000c  f0400001          ORR      r0,r0,#1
000010  493c              LDR      r1,|L3.260|
000012  6008              STR      r0,[r1,#0]
000014  4608              MOV      r0,r1
000016  6800              LDR      r0,[r0,#0]
000018  f0000001          AND      r0,r0,#1
00001c  9000              STR      r0,[sp,#0]
00001e  bf00              NOP      
000020  bf00              NOP      
;;;55         __HAL_RCC_GPIOC_CLK_ENABLE();
000022  bf00              NOP      
000024  4837              LDR      r0,|L3.260|
000026  3808              SUBS     r0,r0,#8
000028  6800              LDR      r0,[r0,#0]
00002a  f0400004          ORR      r0,r0,#4
00002e  4935              LDR      r1,|L3.260|
000030  3908              SUBS     r1,r1,#8
000032  6008              STR      r0,[r1,#0]
000034  4608              MOV      r0,r1
000036  6800              LDR      r0,[r0,#0]
000038  f0000004          AND      r0,r0,#4
00003c  9000              STR      r0,[sp,#0]
00003e  bf00              NOP      
000040  bf00              NOP      
;;;56         __HAL_RCC_GPIOD_CLK_ENABLE();
000042  bf00              NOP      
000044  4608              MOV      r0,r1
000046  6800              LDR      r0,[r0,#0]
000048  f0400008          ORR      r0,r0,#8
00004c  6008              STR      r0,[r1,#0]
00004e  4608              MOV      r0,r1
000050  6800              LDR      r0,[r0,#0]
000052  f0000008          AND      r0,r0,#8
000056  9000              STR      r0,[sp,#0]
000058  bf00              NOP      
00005a  bf00              NOP      
;;;57         __HAL_RCC_GPIOE_CLK_ENABLE();
00005c  bf00              NOP      
00005e  4608              MOV      r0,r1
000060  6800              LDR      r0,[r0,#0]
000062  f0400010          ORR      r0,r0,#0x10
000066  6008              STR      r0,[r1,#0]
000068  4608              MOV      r0,r1
00006a  6800              LDR      r0,[r0,#0]
00006c  f0000010          AND      r0,r0,#0x10
000070  9000              STR      r0,[sp,#0]
000072  bf00              NOP      
000074  bf00              NOP      
;;;58         __HAL_RCC_GPIOF_CLK_ENABLE();
000076  bf00              NOP      
000078  4608              MOV      r0,r1
00007a  6800              LDR      r0,[r0,#0]
00007c  f0400020          ORR      r0,r0,#0x20
000080  6008              STR      r0,[r1,#0]
000082  4608              MOV      r0,r1
000084  6800              LDR      r0,[r0,#0]
000086  f0000020          AND      r0,r0,#0x20
00008a  9000              STR      r0,[sp,#0]
00008c  bf00              NOP      
00008e  bf00              NOP      
;;;59         __HAL_RCC_GPIOG_CLK_ENABLE();
000090  bf00              NOP      
000092  4608              MOV      r0,r1
000094  6800              LDR      r0,[r0,#0]
000096  f0400040          ORR      r0,r0,#0x40
00009a  6008              STR      r0,[r1,#0]
00009c  4608              MOV      r0,r1
00009e  6800              LDR      r0,[r0,#0]
0000a0  f0000040          AND      r0,r0,#0x40
0000a4  9000              STR      r0,[sp,#0]
0000a6  bf00              NOP      
0000a8  bf00              NOP      
;;;60         
;;;61         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;  
0000aa  200d              MOVS     r0,#0xd
0000ac  9001              STR      r0,[sp,#4]
;;;62         GPIO_Initure.Mode=GPIO_MODE_AF_PP;
0000ae  2002              MOVS     r0,#2
0000b0  9002              STR      r0,[sp,#8]
;;;63         GPIO_Initure.Pull=GPIO_PULLUP;
0000b2  2001              MOVS     r0,#1
0000b4  9003              STR      r0,[sp,#0xc]
;;;64         GPIO_Initure.Speed=GPIO_SPEED_HIGH;
0000b6  2003              MOVS     r0,#3
0000b8  9004              STR      r0,[sp,#0x10]
;;;65         GPIO_Initure.Alternate=GPIO_AF12_FMC;
0000ba  200c              MOVS     r0,#0xc
0000bc  9005              STR      r0,[sp,#0x14]
;;;66         HAL_GPIO_Init(GPIOC,&GPIO_Initure);
0000be  a901              ADD      r1,sp,#4
0000c0  4811              LDR      r0,|L3.264|
0000c2  f7fffffe          BL       HAL_GPIO_Init
;;;67         
;;;68         
;;;69         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14|GPIO_PIN_15;              
0000c6  f24c7003          MOV      r0,#0xc703
0000ca  9001              STR      r0,[sp,#4]
;;;70         HAL_GPIO_Init(GPIOD,&GPIO_Initure);
0000cc  a901              ADD      r1,sp,#4
0000ce  480f              LDR      r0,|L3.268|
0000d0  f7fffffe          BL       HAL_GPIO_Init
;;;71         
;;;72         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;              
0000d4  f64f7083          MOV      r0,#0xff83
0000d8  9001              STR      r0,[sp,#4]
;;;73         HAL_GPIO_Init(GPIOE,&GPIO_Initure);
0000da  a901              ADD      r1,sp,#4
0000dc  480c              LDR      r0,|L3.272|
0000de  f7fffffe          BL       HAL_GPIO_Init
;;;74         
;;;75         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;              
0000e2  f64f003f          MOV      r0,#0xf83f
0000e6  9001              STR      r0,[sp,#4]
;;;76         HAL_GPIO_Init(GPIOF,&GPIO_Initure);
0000e8  a901              ADD      r1,sp,#4
0000ea  480a              LDR      r0,|L3.276|
0000ec  f7fffffe          BL       HAL_GPIO_Init
;;;77         
;;;78         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_15;              
0000f0  f2481037          MOV      r0,#0x8137
0000f4  9001              STR      r0,[sp,#4]
;;;79         HAL_GPIO_Init(GPIOG,&GPIO_Initure);
0000f6  a901              ADD      r1,sp,#4
0000f8  4807              LDR      r0,|L3.280|
0000fa  f7fffffe          BL       HAL_GPIO_Init
;;;80     }
0000fe  b006              ADD      sp,sp,#0x18
000100  bd10              POP      {r4,pc}
;;;81     
                          ENDP

000102  0000              DCW      0x0000
                  |L3.260|
                          DCD      0x40023838
                  |L3.264|
                          DCD      0x40020800
                  |L3.268|
                          DCD      0x40020c00
                  |L3.272|
                          DCD      0x40021000
                  |L3.276|
                          DCD      0x40021400
                  |L3.280|
                          DCD      0x40021800

                          AREA ||i.SDRAM_Init||, CODE, READONLY, ALIGN=2

                  SDRAM_Init PROC
;;;4      SDRAM_HandleTypeDef SDRAM_Handler;
;;;5      void SDRAM_Init(void)
000000  b500              PUSH     {lr}
;;;6      {
000002  b087              SUB      sp,sp,#0x1c
;;;7          FMC_SDRAM_TimingTypeDef SDRAM_Timing;
;;;8                                                           
;;;9          SDRAM_Handler.Instance=FMC_SDRAM_DEVICE;
000004  4816              LDR      r0,|L4.96|
000006  4917              LDR      r1,|L4.100|
000008  6008              STR      r0,[r1,#0]  ; SDRAM_Handler
;;;10         SDRAM_Handler.Init.SDBank=FMC_SDRAM_BANK1;
00000a  2000              MOVS     r0,#0
00000c  6048              STR      r0,[r1,#4]  ; SDRAM_Handler
;;;11         SDRAM_Handler.Init.ColumnBitsNumber=FMC_SDRAM_COLUMN_BITS_NUM_9;
00000e  2101              MOVS     r1,#1
000010  4814              LDR      r0,|L4.100|
000012  6081              STR      r1,[r0,#8]
;;;12         SDRAM_Handler.Init.RowBitsNumber=FMC_SDRAM_ROW_BITS_NUM_13;
000014  2108              MOVS     r1,#8
000016  60c1              STR      r1,[r0,#0xc]
;;;13         SDRAM_Handler.Init.MemoryDataWidth=FMC_SDRAM_MEM_BUS_WIDTH_16;
000018  2110              MOVS     r1,#0x10
00001a  6101              STR      r1,[r0,#0x10]
;;;14         SDRAM_Handler.Init.InternalBankNumber=FMC_SDRAM_INTERN_BANKS_NUM_4;
00001c  2140              MOVS     r1,#0x40
00001e  6141              STR      r1,[r0,#0x14]
;;;15         SDRAM_Handler.Init.CASLatency=FMC_SDRAM_CAS_LATENCY_3;
000020  f44f71c0          MOV      r1,#0x180
000024  6181              STR      r1,[r0,#0x18]
;;;16         SDRAM_Handler.Init.WriteProtection=FMC_SDRAM_WRITE_PROTECTION_DISABLE;
000026  2100              MOVS     r1,#0
000028  61c1              STR      r1,[r0,#0x1c]
;;;17         SDRAM_Handler.Init.SDClockPeriod=FMC_SDRAM_CLOCK_PERIOD_2;
00002a  f44f6100          MOV      r1,#0x800
00002e  6201              STR      r1,[r0,#0x20]
;;;18         SDRAM_Handler.Init.ReadBurst=FMC_SDRAM_RBURST_ENABLE;
000030  0049              LSLS     r1,r1,#1
000032  6241              STR      r1,[r0,#0x24]
;;;19         SDRAM_Handler.Init.ReadPipeDelay=FMC_SDRAM_RPIPE_DELAY_1;
000034  0049              LSLS     r1,r1,#1
000036  6281              STR      r1,[r0,#0x28]
;;;20         
;;;21         SDRAM_Timing.LoadToActiveDelay=2;
000038  2002              MOVS     r0,#2
00003a  9000              STR      r0,[sp,#0]
;;;22         SDRAM_Timing.ExitSelfRefreshDelay=8;
00003c  2008              MOVS     r0,#8
00003e  9001              STR      r0,[sp,#4]
;;;23         SDRAM_Timing.SelfRefreshTime=6;
000040  2006              MOVS     r0,#6
000042  9002              STR      r0,[sp,#8]
;;;24         SDRAM_Timing.RowCycleDelay=6;
000044  9003              STR      r0,[sp,#0xc]
;;;25         SDRAM_Timing.WriteRecoveryTime=2;
000046  2002              MOVS     r0,#2
000048  9004              STR      r0,[sp,#0x10]
;;;26         SDRAM_Timing.RPDelay=2;
00004a  9005              STR      r0,[sp,#0x14]
;;;27         SDRAM_Timing.RCDDelay=2;
00004c  9006              STR      r0,[sp,#0x18]
;;;28         HAL_SDRAM_Init(&SDRAM_Handler,&SDRAM_Timing);
00004e  4669              MOV      r1,sp
000050  4804              LDR      r0,|L4.100|
000052  f7fffffe          BL       HAL_SDRAM_Init
;;;29         SDRAM_Initialization_Sequence(&SDRAM_Handler);
000056  4803              LDR      r0,|L4.100|
000058  f7fffffe          BL       SDRAM_Initialization_Sequence
;;;30     }
00005c  b007              ADD      sp,sp,#0x1c
00005e  bd00              POP      {pc}
;;;31     
                          ENDP

                  |L4.96|
                          DCD      0xa0000140
                  |L4.100|
                          DCD      SDRAM_Handler

                          AREA ||i.SDRAM_Initialization_Sequence||, CODE, READONLY, ALIGN=2

                  SDRAM_Initialization_Sequence PROC
;;;31     
;;;32     void SDRAM_Initialization_Sequence(SDRAM_HandleTypeDef *hsdram)
000000  b570              PUSH     {r4-r6,lr}
;;;33     {
000002  4605              MOV      r5,r0
;;;34         u32 temp=0;
000004  2400              MOVS     r4,#0
;;;35         SDRAM_Send_Cmd(0,FMC_SDRAM_CMD_CLK_ENABLE,1,0);
000006  2300              MOVS     r3,#0
000008  2201              MOVS     r2,#1
00000a  4611              MOV      r1,r2
00000c  4618              MOV      r0,r3
00000e  f7fffffe          BL       SDRAM_Send_Cmd
;;;36         RMP_Thd_Delay(500);
000012  f44f70fa          MOV      r0,#0x1f4
000016  f7fffffe          BL       RMP_Thd_Delay
;;;37         SDRAM_Send_Cmd(0,FMC_SDRAM_CMD_PALL,1,0);
00001a  2300              MOVS     r3,#0
00001c  2201              MOVS     r2,#1
00001e  2102              MOVS     r1,#2
000020  4618              MOV      r0,r3
000022  f7fffffe          BL       SDRAM_Send_Cmd
;;;38         SDRAM_Send_Cmd(0,FMC_SDRAM_CMD_AUTOREFRESH_MODE,8,0);
000026  2300              MOVS     r3,#0
000028  2208              MOVS     r2,#8
00002a  2103              MOVS     r1,#3
00002c  4618              MOV      r0,r3
00002e  f7fffffe          BL       SDRAM_Send_Cmd
;;;39     
;;;40         temp=(u32)SDRAM_MODEREG_BURST_LENGTH_1          |
000032  f44f740c          MOV      r4,#0x230
;;;41                   SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |
;;;42                   SDRAM_MODEREG_CAS_LATENCY_3           |
;;;43                   SDRAM_MODEREG_OPERATING_MODE_STANDARD |
;;;44                   SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;
;;;45         SDRAM_Send_Cmd(0,FMC_SDRAM_CMD_LOAD_MODE,1,temp);
000036  4623              MOV      r3,r4
000038  2201              MOVS     r2,#1
00003a  2104              MOVS     r1,#4
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       SDRAM_Send_Cmd
;;;46         HAL_SDRAM_ProgramRefreshRate(&SDRAM_Handler,823);    
000042  f2403137          MOV      r1,#0x337
000046  4802              LDR      r0,|L5.80|
000048  f7fffffe          BL       HAL_SDRAM_ProgramRefreshRate
;;;47     
;;;48     }
00004c  bd70              POP      {r4-r6,pc}
;;;49     
                          ENDP

00004e  0000              DCW      0x0000
                  |L5.80|
                          DCD      SDRAM_Handler

                          AREA ||i.SDRAM_Send_Cmd||, CODE, READONLY, ALIGN=2

                  SDRAM_Send_Cmd PROC
;;;81     
;;;82     u8 SDRAM_Send_Cmd(u8 bankx,u8 cmd,u8 refresh,u16 regval)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;83     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;84         u32 target_bank=0;
00000c  f04f0800          MOV      r8,#0
;;;85         FMC_SDRAM_CommandTypeDef Command;
;;;86         
;;;87         if(bankx==0) target_bank=FMC_SDRAM_CMD_TARGET_BANK1;       
000010  b914              CBNZ     r4,|L6.24|
000012  f04f0810          MOV      r8,#0x10
000016  e003              B        |L6.32|
                  |L6.24|
;;;88         else if(bankx==1) target_bank=FMC_SDRAM_CMD_TARGET_BANK2;   
000018  2c01              CMP      r4,#1
00001a  d101              BNE      |L6.32|
00001c  f04f0808          MOV      r8,#8
                  |L6.32|
;;;89         Command.CommandMode=cmd;
000020  9500              STR      r5,[sp,#0]
;;;90         Command.CommandTarget=target_bank;
000022  f8cd8004          STR      r8,[sp,#4]
;;;91         Command.AutoRefreshNumber=refresh;
000026  9602              STR      r6,[sp,#8]
;;;92         Command.ModeRegisterDefinition=regval;
000028  9703              STR      r7,[sp,#0xc]
;;;93         if(HAL_SDRAM_SendCommand(&SDRAM_Handler,&Command,0X1000)==HAL_OK)
00002a  f44f5280          MOV      r2,#0x1000
00002e  4669              MOV      r1,sp
000030  4804              LDR      r0,|L6.68|
000032  f7fffffe          BL       HAL_SDRAM_SendCommand
000036  b918              CBNZ     r0,|L6.64|
;;;94             return 0;
000038  2000              MOVS     r0,#0
                  |L6.58|
;;;95         else 
;;;96             return 1;    
;;;97     }
00003a  b004              ADD      sp,sp,#0x10
00003c  e8bd81f0          POP      {r4-r8,pc}
                  |L6.64|
000040  2001              MOVS     r0,#1                 ;96
000042  e7fa              B        |L6.58|
;;;98     
                          ENDP

                  |L6.68|
                          DCD      SDRAM_Handler

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  SDRAM_Handler
                          %        56

;*** Start embedded assembler ***

#line 1 "Drivers\\sdram.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_sdram_c_892f58be____REV16|
#line 464 "D:\\Program_Files_x86\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.1.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___7_sdram_c_892f58be____REV16| PROC
#line 465

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_sdram_c_892f58be____REVSH|
#line 479
|__asm___7_sdram_c_892f58be____REVSH| PROC
#line 480

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_sdram_c_892f58be____RRX|
#line 666
|__asm___7_sdram_c_892f58be____RRX| PROC
#line 667

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
