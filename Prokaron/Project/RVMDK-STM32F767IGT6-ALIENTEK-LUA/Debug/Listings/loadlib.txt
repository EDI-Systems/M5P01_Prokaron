; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\loadlib.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\loadlib.d --cpu=Cortex-M7 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Inc -I.\Source -I.\Drivers -I..\..\..\M6P1(L)_Lua\lua -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F767IGT6-ALIENTEK-LUA\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER -Dlua_writestring=RMP_lua_writestring -Dlua_writeline=RMP_lua_writeline --enum_is_int --signed_chars --omf_browse=.\debug\output\loadlib.crf ..\..\..\M6P1(L)_Lua\lua\loadlib.c]
                          THUMB

                          AREA ||i.addtoclib||, CODE, READONLY, ALIGN=2

                  addtoclib PROC
;;;330    */
;;;331    static void addtoclib (lua_State *L, const char *path, void *plib) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;332      lua_rawgetp(L, LUA_REGISTRYINDEX, &CLIBS);
00000a  4a14              LDR      r2,|L1.92|
00000c  4914              LDR      r1,|L1.96|
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       lua_rawgetp
;;;333      lua_pushlightuserdata(L, plib);
000014  4629              MOV      r1,r5
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       lua_pushlightuserdata
;;;334      lua_pushvalue(L, -1);
00001c  f04f31ff          MOV      r1,#0xffffffff
000020  4630              MOV      r0,r6
000022  f7fffffe          BL       lua_pushvalue
;;;335      lua_setfield(L, -3, path);  /* CLIBS[path] = plib */
000026  4622              MOV      r2,r4
000028  f06f0102          MVN      r1,#2
00002c  4630              MOV      r0,r6
00002e  f7fffffe          BL       lua_setfield
;;;336      lua_rawseti(L, -2, luaL_len(L, -2) + 1);  /* CLIBS[#CLIBS + 1] = plib */
000032  f06f0101          MVN      r1,#1
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       luaL_len
00003c  1c47              ADDS     r7,r0,#1
00003e  f1410300          ADC      r3,r1,#0
000042  463a              MOV      r2,r7
000044  f06f0101          MVN      r1,#1
000048  4630              MOV      r0,r6
00004a  f7fffffe          BL       lua_rawseti
;;;337      lua_pop(L, 1);  /* pop CLIBS table */
00004e  f06f0101          MVN      r1,#1
000052  4630              MOV      r0,r6
000054  f7fffffe          BL       lua_settop
;;;338    }
000058  e8bd81f0          POP      {r4-r8,pc}
;;;339    
                          ENDP

                  |L1.92|
                          DCD      CLIBS
                  |L1.96|
                          DCD      0xfff0b9d8

                          AREA ||i.checkclib||, CODE, READONLY, ALIGN=2

                  checkclib PROC
;;;316    */
;;;317    static void *checkclib (lua_State *L, const char *path) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;318      void *plib;
;;;319      lua_rawgetp(L, LUA_REGISTRYINDEX, &CLIBS);
000006  4a0c              LDR      r2,|L2.56|
000008  490c              LDR      r1,|L2.60|
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       lua_rawgetp
;;;320      lua_getfield(L, -1, path);
000010  4622              MOV      r2,r4
000012  f04f31ff          MOV      r1,#0xffffffff
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       lua_getfield
;;;321      plib = lua_touserdata(L, -1);  /* plib = CLIBS[path] */
00001c  f04f31ff          MOV      r1,#0xffffffff
000020  4628              MOV      r0,r5
000022  f7fffffe          BL       lua_touserdata
000026  4606              MOV      r6,r0
;;;322      lua_pop(L, 2);  /* pop CLIBS table and 'plib' */
000028  f06f0102          MVN      r1,#2
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       lua_settop
;;;323      return plib;
000032  4630              MOV      r0,r6
;;;324    }
000034  bd70              POP      {r4-r6,pc}
;;;325    
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      CLIBS
                  |L2.60|
                          DCD      0xfff0b9d8

                          AREA ||i.checkload||, CODE, READONLY, ALIGN=2

                  checkload PROC
;;;483    
;;;484    static int checkload (lua_State *L, int stat, const char *filename) {
000000  e92d43f8          PUSH     {r3-r9,lr}
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
000008  4614              MOV      r4,r2
;;;485      if (stat) {  /* module loaded successfully? */
00000a  b135              CBZ      r5,|L3.26|
;;;486        lua_pushstring(L, filename);  /* will be 2nd argument to module */
00000c  4621              MOV      r1,r4
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       lua_pushstring
;;;487        return 2;  /* return open function and file name */
000014  2002              MOVS     r0,#2
                  |L3.22|
;;;488      }
;;;489      else
;;;490        return luaL_error(L, "error loading module '%s' from file '%s':\n\t%s",
;;;491                              lua_tostring(L, 1), filename, lua_tostring(L, -1));
;;;492    }
000016  e8bd83f8          POP      {r3-r9,pc}
                  |L3.26|
00001a  2200              MOVS     r2,#0                 ;490
00001c  1e51              SUBS     r1,r2,#1              ;490
00001e  4630              MOV      r0,r6                 ;490
000020  f7fffffe          BL       lua_tolstring
000024  4607              MOV      r7,r0                 ;490
000026  2200              MOVS     r2,#0                 ;490
000028  2101              MOVS     r1,#1                 ;490
00002a  4630              MOV      r0,r6                 ;490
00002c  f7fffffe          BL       lua_tolstring
000030  4680              MOV      r8,r0                 ;490
000032  4623              MOV      r3,r4                 ;490
000034  4642              MOV      r2,r8                 ;490
000036  a103              ADR      r1,|L3.68|
000038  4630              MOV      r0,r6                 ;490
00003a  9700              STR      r7,[sp,#0]            ;490
00003c  f7fffffe          BL       luaL_error
000040  e7e9              B        |L3.22|
;;;493    
                          ENDP

000042  0000              DCW      0x0000
                  |L3.68|
000044  6572726f          DCB      "error loading module '%s' from file '%s':\n\t%s",0
000048  72206c6f
00004c  6164696e
000050  67206d6f
000054  64756c65
000058  20272573
00005c  27206672
000060  6f6d2066
000064  696c6520
000068  27257327
00006c  3a0a0925
000070  7300    
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||i.createclibstable||, CODE, READONLY, ALIGN=2

                  createclibstable PROC
;;;663    */
;;;664    static void createclibstable (lua_State *L) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;665      lua_newtable(L);  /* create CLIBS table */
000004  2200              MOVS     r2,#0
000006  4611              MOV      r1,r2
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       lua_createtable
;;;666      lua_createtable(L, 0, 1);  /* create metatable for CLIBS */
00000e  2201              MOVS     r2,#1
000010  2100              MOVS     r1,#0
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       lua_createtable
;;;667      lua_pushcfunction(L, gctm);
000018  2200              MOVS     r2,#0
00001a  490a              LDR      r1,|L4.68|
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       lua_pushcclosure
;;;668      lua_setfield(L, -2, "__gc");  /* set finalizer for CLIBS table */
000022  a209              ADR      r2,|L4.72|
000024  f06f0101          MVN      r1,#1
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       lua_setfield
;;;669      lua_setmetatable(L, -2);
00002e  f06f0101          MVN      r1,#1
000032  4620              MOV      r0,r4
000034  f7fffffe          BL       lua_setmetatable
;;;670      lua_rawsetp(L, LUA_REGISTRYINDEX, &CLIBS);  /* set CLIBS table in registry */
000038  4a05              LDR      r2,|L4.80|
00003a  4906              LDR      r1,|L4.84|
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       lua_rawsetp
;;;671    }
000042  bd10              POP      {r4,pc}
;;;672    
                          ENDP

                  |L4.68|
                          DCD      gctm
                  |L4.72|
000048  5f5f6763          DCB      "__gc",0
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0
                  |L4.80|
                          DCD      CLIBS
                  |L4.84|
                          DCD      0xfff0b9d8

                          AREA ||i.createsearcherstable||, CODE, READONLY, ALIGN=2

                  createsearcherstable PROC
;;;643    
;;;644    static void createsearcherstable (lua_State *L) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;645      static const lua_CFunction searchers[] =
;;;646        {searcher_preload, searcher_Lua, searcher_C, searcher_Croot, NULL};
;;;647      int i;
;;;648      /* create 'searchers' table */
;;;649      lua_createtable(L, sizeof(searchers)/sizeof(searchers[0]) - 1, 0);
000004  2200              MOVS     r2,#0
000006  2104              MOVS     r1,#4
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       lua_createtable
;;;650      /* fill it with predefined searchers */
;;;651      for (i=0; searchers[i] != NULL; i++) {
00000e  2400              MOVS     r4,#0
000010  e014              B        |L5.60|
                  |L5.18|
;;;652        lua_pushvalue(L, -2);  /* set 'package' as upvalue for all searchers */
000012  f06f0101          MVN      r1,#1
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       lua_pushvalue
;;;653        lua_pushcclosure(L, searchers[i], 1);
00001c  480d              LDR      r0,|L5.84|
00001e  f8501024          LDR      r1,[r0,r4,LSL #2]
000022  2201              MOVS     r2,#1
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       lua_pushcclosure
;;;654        lua_rawseti(L, -2, i+1);
00002a  1c60              ADDS     r0,r4,#1
00002c  17c3              ASRS     r3,r0,#31
00002e  4602              MOV      r2,r0
000030  f06f0101          MVN      r1,#1
000034  4628              MOV      r0,r5
000036  f7fffffe          BL       lua_rawseti
00003a  1c64              ADDS     r4,r4,#1              ;651
                  |L5.60|
00003c  4805              LDR      r0,|L5.84|
00003e  f8500024          LDR      r0,[r0,r4,LSL #2]     ;651
000042  2800              CMP      r0,#0                 ;651
000044  d1e5              BNE      |L5.18|
;;;655      }
;;;656      lua_setfield(L, -2, "searchers");  /* put it in field 'searchers' */
000046  a204              ADR      r2,|L5.88|
000048  1e81              SUBS     r1,r0,#2
00004a  4628              MOV      r0,r5
00004c  f7fffffe          BL       lua_setfield
;;;657    }
000050  bd70              POP      {r4-r6,pc}
;;;658    
                          ENDP

000052  0000              DCW      0x0000
                  |L5.84|
                          DCD      searchers
                  |L5.88|
000058  73656172          DCB      "searchers",0
00005c  63686572
000060  7300    
000062  00                DCB      0
000063  00                DCB      0

                          AREA ||i.findfile||, CODE, READONLY, ALIGN=2

                  findfile PROC
;;;471    
;;;472    static const char *findfile (lua_State *L, const char *name,
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;473                                               const char *pname,
;;;474                                               const char *dirsep) {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
00000a  461c              MOV      r4,r3
;;;475      const char *path;
;;;476      lua_getfield(L, lua_upvalueindex(1), pname);
00000c  4642              MOV      r2,r8
00000e  490c              LDR      r1,|L6.64|
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       lua_getfield
;;;477      path = lua_tostring(L, -1);
000016  2200              MOVS     r2,#0
000018  1e51              SUBS     r1,r2,#1
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       lua_tolstring
000020  4605              MOV      r5,r0
;;;478      if (path == NULL)
000022  b925              CBNZ     r5,|L6.46|
;;;479        luaL_error(L, "'package.%s' must be a string", pname);
000024  4642              MOV      r2,r8
000026  a107              ADR      r1,|L6.68|
000028  4630              MOV      r0,r6
00002a  f7fffffe          BL       luaL_error
                  |L6.46|
;;;480      return searchpath(L, name, path, ".", dirsep);
00002e  a30d              ADR      r3,|L6.100|
000030  462a              MOV      r2,r5
000032  4639              MOV      r1,r7
000034  4630              MOV      r0,r6
000036  9400              STR      r4,[sp,#0]
000038  f7fffffe          BL       searchpath
;;;481    }
00003c  e8bd83f8          POP      {r3-r9,pc}
;;;482    
                          ENDP

                  |L6.64|
                          DCD      0xfff0b9d7
                  |L6.68|
000044  27706163          DCB      "'package.%s' must be a string",0
000048  6b616765
00004c  2e257327
000050  206d7573
000054  74206265
000058  20612073
00005c  7472696e
000060  6700    
000062  00                DCB      0
000063  00                DCB      0
                  |L6.100|
000064  2e00              DCB      ".",0
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||i.findloader||, CODE, READONLY, ALIGN=2

                  findloader PROC
;;;568    
;;;569    static void findloader (lua_State *L, const char *name) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  f5ad5d82          SUB      sp,sp,#0x1040
000008  4606              MOV      r6,r0
00000a  460d              MOV      r5,r1
;;;570      int i;
;;;571      luaL_Buffer msg;  /* to build error message */
;;;572      /* push 'package.searchers' to index 3 in the stack */
;;;573      if (lua_getfield(L, lua_upvalueindex(1), "searchers") != LUA_TTABLE)
00000c  a22c              ADR      r2,|L7.192|
00000e  492f              LDR      r1,|L7.204|
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       lua_getfield
000016  2805              CMP      r0,#5
000018  d003              BEQ      |L7.34|
;;;574        luaL_error(L, "'package.searchers' must be a table");
00001a  a12d              ADR      r1,|L7.208|
00001c  4630              MOV      r0,r6
00001e  f7fffffe          BL       luaL_error
                  |L7.34|
;;;575      luaL_buffinit(L, &msg);
000022  a90c              ADD      r1,sp,#0x30
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       luaL_buffinit
;;;576      /*  iterate over available searchers to find a loader */
;;;577      for (i = 1; ; i++) {
00002a  2401              MOVS     r4,#1
00002c  bf00              NOP      
                  |L7.46|
;;;578        if (lua_rawgeti(L, 3, i) == LUA_TNIL) {  /* no more searchers? */
00002e  4622              MOV      r2,r4
000030  17e3              ASRS     r3,r4,#31
000032  2103              MOVS     r1,#3
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       lua_rawgeti
00003a  b998              CBNZ     r0,|L7.100|
;;;579          lua_pop(L, 1);  /* remove nil */
00003c  f06f0101          MVN      r1,#1
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       lua_settop
;;;580          luaL_pushresult(&msg);  /* create error message */
000046  a80c              ADD      r0,sp,#0x30
000048  f7fffffe          BL       luaL_pushresult
;;;581          luaL_error(L, "module '%s' not found:%s", name, lua_tostring(L, -1));
00004c  2200              MOVS     r2,#0
00004e  1e51              SUBS     r1,r2,#1
000050  4630              MOV      r0,r6
000052  f7fffffe          BL       lua_tolstring
000056  4607              MOV      r7,r0
000058  463b              MOV      r3,r7
00005a  462a              MOV      r2,r5
00005c  a125              ADR      r1,|L7.244|
00005e  4630              MOV      r0,r6
000060  f7fffffe          BL       luaL_error
                  |L7.100|
;;;582        }
;;;583        lua_pushstring(L, name);
000064  4629              MOV      r1,r5
000066  4630              MOV      r0,r6
000068  f7fffffe          BL       lua_pushstring
;;;584        lua_call(L, 1, 2);  /* call it */
00006c  2000              MOVS     r0,#0
00006e  4603              MOV      r3,r0
000070  2202              MOVS     r2,#2
000072  2101              MOVS     r1,#1
000074  9000              STR      r0,[sp,#0]
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       lua_callk
;;;585        if (lua_isfunction(L, -2))  /* did it find a loader? */
00007c  f06f0101          MVN      r1,#1
000080  4630              MOV      r0,r6
000082  f7fffffe          BL       lua_type
000086  2806              CMP      r0,#6
000088  d103              BNE      |L7.146|
;;;586          return;  /* module loader found */
;;;587        else if (lua_isstring(L, -2)) {  /* searcher returned error message? */
;;;588          lua_pop(L, 1);  /* remove extra return */
;;;589          luaL_addvalue(&msg);  /* concatenate error message */
;;;590        }
;;;591        else
;;;592          lua_pop(L, 2);  /* remove both returns */
;;;593      }
;;;594    }
00008a  f50d5d82          ADD      sp,sp,#0x1040
00008e  e8bd81f0          POP      {r4-r8,pc}
                  |L7.146|
000092  f06f0101          MVN      r1,#1                 ;587
000096  4630              MOV      r0,r6                 ;587
000098  f7fffffe          BL       lua_isstring
00009c  b140              CBZ      r0,|L7.176|
00009e  f06f0101          MVN      r1,#1                 ;588
0000a2  4630              MOV      r0,r6                 ;588
0000a4  f7fffffe          BL       lua_settop
0000a8  a80c              ADD      r0,sp,#0x30           ;589
0000aa  f7fffffe          BL       luaL_addvalue
0000ae  e004              B        |L7.186|
                  |L7.176|
0000b0  f06f0102          MVN      r1,#2                 ;592
0000b4  4630              MOV      r0,r6                 ;592
0000b6  f7fffffe          BL       lua_settop
                  |L7.186|
0000ba  1c64              ADDS     r4,r4,#1              ;577
0000bc  e7b7              B        |L7.46|
;;;595    
                          ENDP

0000be  0000              DCW      0x0000
                  |L7.192|
0000c0  73656172          DCB      "searchers",0
0000c4  63686572
0000c8  7300    
0000ca  00                DCB      0
0000cb  00                DCB      0
                  |L7.204|
                          DCD      0xfff0b9d7
                  |L7.208|
0000d0  27706163          DCB      "'package.searchers' must be a table",0
0000d4  6b616765
0000d8  2e736561
0000dc  72636865
0000e0  72732720
0000e4  6d757374
0000e8  20626520
0000ec  61207461
0000f0  626c6500
                  |L7.244|
0000f4  6d6f6475          DCB      "module '%s' not found:%s",0
0000f8  6c652027
0000fc  25732720
000100  6e6f7420
000104  666f756e
000108  643a2573
00010c  00      
00010d  00                DCB      0
00010e  00                DCB      0
00010f  00                DCB      0

                          AREA ||i.gctm||, CODE, READONLY, ALIGN=1

                  gctm PROC
;;;344    */
;;;345    static int gctm (lua_State *L) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;346      lua_Integer n = luaL_len(L, 1);
000006  2101              MOVS     r1,#1
000008  4630              MOV      r0,r6
00000a  f7fffffe          BL       luaL_len
00000e  4604              MOV      r4,r0
000010  460d              MOV      r5,r1
;;;347      for (; n >= 1; n--) {  /* for each handle, in reverse order */
000012  e015              B        |L8.64|
                  |L8.20|
;;;348        lua_rawgeti(L, 1, n);  /* get handle CLIBS[n] */
000014  4622              MOV      r2,r4
000016  462b              MOV      r3,r5
000018  2101              MOVS     r1,#1
00001a  4630              MOV      r0,r6
00001c  f7fffffe          BL       lua_rawgeti
;;;349        lsys_unloadlib(lua_touserdata(L, -1));
000020  f04f31ff          MOV      r1,#0xffffffff
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       lua_touserdata
00002a  4607              MOV      r7,r0
00002c  f7fffffe          BL       lsys_unloadlib
;;;350        lua_pop(L, 1);  /* pop handle */
000030  f06f0101          MVN      r1,#1
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       lua_settop
00003a  1e64              SUBS     r4,r4,#1              ;347
00003c  f1650500          SBC      r5,r5,#0              ;347
                  |L8.64|
000040  1e61              SUBS     r1,r4,#1              ;347
000042  f1750000          SBCS     r0,r5,#0              ;347
000046  dae5              BGE      |L8.20|
;;;351      }
;;;352      return 0;
000048  2000              MOVS     r0,#0
;;;353    }
00004a  e8bd81f0          POP      {r4-r8,pc}
;;;354    
                          ENDP


                          AREA ||i.ll_loadlib||, CODE, READONLY, ALIGN=2

                  ll_loadlib PROC
;;;392    
;;;393    static int ll_loadlib (lua_State *L) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;394      const char *path = luaL_checkstring(L, 1);
000006  2200              MOVS     r2,#0
000008  2101              MOVS     r1,#1
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       luaL_checklstring
000010  4606              MOV      r6,r0
;;;395      const char *init = luaL_checkstring(L, 2);
000012  2200              MOVS     r2,#0
000014  2102              MOVS     r1,#2
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       luaL_checklstring
00001c  4607              MOV      r7,r0
;;;396      int stat = lookforfunc(L, path, init);
00001e  463a              MOV      r2,r7
000020  4631              MOV      r1,r6
000022  4628              MOV      r0,r5
000024  f7fffffe          BL       lookforfunc
000028  4604              MOV      r4,r0
;;;397      if (stat == 0)  /* no errors? */
00002a  b914              CBNZ     r4,|L9.50|
;;;398        return 1;  /* return the loaded function */
00002c  2001              MOVS     r0,#1
                  |L9.46|
;;;399      else {  /* error; error message is on stack top */
;;;400        lua_pushnil(L);
;;;401        lua_insert(L, -2);
;;;402        lua_pushstring(L, (stat == ERRLIB) ?  LIB_FAIL : "init");
;;;403        return 3;  /* return nil, error message, and where */
;;;404      }
;;;405    }
00002e  e8bd81f0          POP      {r4-r8,pc}
                  |L9.50|
000032  4628              MOV      r0,r5                 ;400
000034  f7fffffe          BL       lua_pushnil
000038  2201              MOVS     r2,#1                 ;401
00003a  1ed1              SUBS     r1,r2,#3              ;401
00003c  4628              MOV      r0,r5                 ;401
00003e  f7fffffe          BL       lua_rotate
000042  2c01              CMP      r4,#1                 ;402
000044  d101              BNE      |L9.74|
000046  a004              ADR      r0,|L9.88|
000048  e000              B        |L9.76|
                  |L9.74|
00004a  a005              ADR      r0,|L9.96|
                  |L9.76|
00004c  4601              MOV      r1,r0                 ;402
00004e  4628              MOV      r0,r5                 ;402
000050  f7fffffe          BL       lua_pushstring
000054  2003              MOVS     r0,#3                 ;403
000056  e7ea              B        |L9.46|
;;;406    
                          ENDP

                  |L9.88|
000058  61627365          DCB      "absent",0
00005c  6e7400  
00005f  00                DCB      0
                  |L9.96|
000060  696e6974          DCB      "init",0
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0

                          AREA ||i.ll_require||, CODE, READONLY, ALIGN=2

                  ll_require PROC
;;;596    
;;;597    static int ll_require (lua_State *L) {
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
;;;598      const char *name = luaL_checkstring(L, 1);
000004  2200              MOVS     r2,#0
000006  2101              MOVS     r1,#1
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       luaL_checklstring
00000e  4605              MOV      r5,r0
;;;599      lua_settop(L, 1);  /* LOADED table will be at index 2 */
000010  2101              MOVS     r1,#1
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       lua_settop
;;;600      lua_getfield(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);
000018  a226              ADR      r2,|L10.180|
00001a  4928              LDR      r1,|L10.188|
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       lua_getfield
;;;601      lua_getfield(L, 2, name);  /* LOADED[name] */
000022  462a              MOV      r2,r5
000024  2102              MOVS     r1,#2
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       lua_getfield
;;;602      if (lua_toboolean(L, -1))  /* is it there? */
00002c  f04f31ff          MOV      r1,#0xffffffff
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       lua_toboolean
000036  b108              CBZ      r0,|L10.60|
;;;603        return 1;  /* package is already loaded */
000038  2001              MOVS     r0,#1
                  |L10.58|
;;;604      /* else must load package */
;;;605      lua_pop(L, 1);  /* remove 'getfield' result */
;;;606      findloader(L, name);
;;;607      lua_pushstring(L, name);  /* pass name as argument to module loader */
;;;608      lua_insert(L, -2);  /* name is 1st argument (before search data) */
;;;609      lua_call(L, 2, 1);  /* run loader to load module */
;;;610      if (!lua_isnil(L, -1))  /* non-nil return? */
;;;611        lua_setfield(L, 2, name);  /* LOADED[name] = returned value */
;;;612      if (lua_getfield(L, 2, name) == LUA_TNIL) {   /* module set no value? */
;;;613        lua_pushboolean(L, 1);  /* use true as result */
;;;614        lua_pushvalue(L, -1);  /* extra copy to be returned */
;;;615        lua_setfield(L, 2, name);  /* LOADED[name] = true */
;;;616      }
;;;617      return 1;
;;;618    }
00003a  bd38              POP      {r3-r5,pc}
                  |L10.60|
00003c  f06f0101          MVN      r1,#1                 ;605
000040  4620              MOV      r0,r4                 ;605
000042  f7fffffe          BL       lua_settop
000046  4629              MOV      r1,r5                 ;606
000048  4620              MOV      r0,r4                 ;606
00004a  f7fffffe          BL       findloader
00004e  4629              MOV      r1,r5                 ;607
000050  4620              MOV      r0,r4                 ;607
000052  f7fffffe          BL       lua_pushstring
000056  2201              MOVS     r2,#1                 ;608
000058  1ed1              SUBS     r1,r2,#3              ;608
00005a  4620              MOV      r0,r4                 ;608
00005c  f7fffffe          BL       lua_rotate
000060  2000              MOVS     r0,#0                 ;609
000062  4603              MOV      r3,r0                 ;609
000064  2201              MOVS     r2,#1                 ;609
000066  2102              MOVS     r1,#2                 ;609
000068  9000              STR      r0,[sp,#0]            ;609
00006a  4620              MOV      r0,r4                 ;609
00006c  f7fffffe          BL       lua_callk
000070  f04f31ff          MOV      r1,#0xffffffff        ;610
000074  4620              MOV      r0,r4                 ;610
000076  f7fffffe          BL       lua_type
00007a  b120              CBZ      r0,|L10.134|
00007c  462a              MOV      r2,r5                 ;611
00007e  2102              MOVS     r1,#2                 ;611
000080  4620              MOV      r0,r4                 ;611
000082  f7fffffe          BL       lua_setfield
                  |L10.134|
000086  462a              MOV      r2,r5                 ;612
000088  2102              MOVS     r1,#2                 ;612
00008a  4620              MOV      r0,r4                 ;612
00008c  f7fffffe          BL       lua_getfield
000090  b968              CBNZ     r0,|L10.174|
000092  2101              MOVS     r1,#1                 ;613
000094  4620              MOV      r0,r4                 ;613
000096  f7fffffe          BL       lua_pushboolean
00009a  f04f31ff          MOV      r1,#0xffffffff        ;614
00009e  4620              MOV      r0,r4                 ;614
0000a0  f7fffffe          BL       lua_pushvalue
0000a4  462a              MOV      r2,r5                 ;615
0000a6  2102              MOVS     r1,#2                 ;615
0000a8  4620              MOV      r0,r4                 ;615
0000aa  f7fffffe          BL       lua_setfield
                  |L10.174|
0000ae  2001              MOVS     r0,#1                 ;617
0000b0  e7c3              B        |L10.58|
;;;619    
                          ENDP

0000b2  0000              DCW      0x0000
                  |L10.180|
0000b4  5f4c4f41          DCB      "_LOADED",0
0000b8  44454400
                  |L10.188|
                          DCD      0xfff0b9d8

                          AREA ||i.ll_searchpath||, CODE, READONLY, ALIGN=2

                  ll_searchpath PROC
;;;457    
;;;458    static int ll_searchpath (lua_State *L) {
000000  e92d43f8          PUSH     {r3-r9,lr}
000004  4604              MOV      r4,r0
;;;459      const char *f = searchpath(L, luaL_checkstring(L, 1),
000006  2300              MOVS     r3,#0
000008  a217              ADR      r2,|L11.104|
00000a  2104              MOVS     r1,#4
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       luaL_optlstring
000012  4606              MOV      r6,r0
000014  2300              MOVS     r3,#0
000016  a215              ADR      r2,|L11.108|
000018  2103              MOVS     r1,#3
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       luaL_optlstring
000020  4607              MOV      r7,r0
000022  2200              MOVS     r2,#0
000024  2102              MOVS     r1,#2
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       luaL_checklstring
00002c  4680              MOV      r8,r0
00002e  2200              MOVS     r2,#0
000030  2101              MOVS     r1,#1
000032  4620              MOV      r0,r4
000034  f7fffffe          BL       luaL_checklstring
000038  4681              MOV      r9,r0
00003a  463b              MOV      r3,r7
00003c  4642              MOV      r2,r8
00003e  4649              MOV      r1,r9
000040  4620              MOV      r0,r4
000042  9600              STR      r6,[sp,#0]
000044  f7fffffe          BL       searchpath
000048  4605              MOV      r5,r0
;;;460                                    luaL_checkstring(L, 2),
;;;461                                    luaL_optstring(L, 3, "."),
;;;462                                    luaL_optstring(L, 4, LUA_DIRSEP));
;;;463      if (f != NULL) return 1;
00004a  b115              CBZ      r5,|L11.82|
00004c  2001              MOVS     r0,#1
                  |L11.78|
;;;464      else {  /* error message is on top of the stack */
;;;465        lua_pushnil(L);
;;;466        lua_insert(L, -2);
;;;467        return 2;  /* return nil + error message */
;;;468      }
;;;469    }
00004e  e8bd83f8          POP      {r3-r9,pc}
                  |L11.82|
000052  4620              MOV      r0,r4                 ;465
000054  f7fffffe          BL       lua_pushnil
000058  2201              MOVS     r2,#1                 ;466
00005a  1ed1              SUBS     r1,r2,#3              ;466
00005c  4620              MOV      r0,r4                 ;466
00005e  f7fffffe          BL       lua_rotate
000062  2002              MOVS     r0,#2                 ;467
000064  e7f3              B        |L11.78|
;;;470    
                          ENDP

000066  0000              DCW      0x0000
                  |L11.104|
000068  2f00              DCB      "/",0
00006a  00                DCB      0
00006b  00                DCB      0
                  |L11.108|
00006c  2e00              DCB      ".",0
00006e  00                DCB      0
00006f  00                DCB      0

                          AREA ||i.loadfunc||, CODE, READONLY, ALIGN=2

                  loadfunc PROC
;;;511    */
;;;512    static int loadfunc (lua_State *L, const char *filename, const char *modname) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4614              MOV      r4,r2
;;;513      const char *openfunc;
;;;514      const char *mark;
;;;515      modname = luaL_gsub(L, modname, ".", LUA_OFSEP);
00000a  a31a              ADR      r3,|L12.116|
00000c  a21a              ADR      r2,|L12.120|
00000e  4621              MOV      r1,r4
000010  4638              MOV      r0,r7
000012  f7fffffe          BL       luaL_gsub
000016  4604              MOV      r4,r0
;;;516      mark = strchr(modname, *LUA_IGMARK);
000018  a018              ADR      r0,|L12.124|
00001a  f9901000          LDRSB    r1,[r0,#0]
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       strchr
000024  4605              MOV      r5,r0
;;;517      if (mark) {
000026  b1c5              CBZ      r5,|L12.90|
;;;518        int stat;
;;;519        openfunc = lua_pushlstring(L, modname, mark - modname);
000028  1b2a              SUBS     r2,r5,r4
00002a  4621              MOV      r1,r4
00002c  4638              MOV      r0,r7
00002e  f7fffffe          BL       lua_pushlstring
000032  4681              MOV      r9,r0
;;;520        openfunc = lua_pushfstring(L, LUA_POF"%s", openfunc);
000034  464a              MOV      r2,r9
000036  a112              ADR      r1,|L12.128|
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       lua_pushfstring
00003e  4681              MOV      r9,r0
;;;521        stat = lookforfunc(L, filename, openfunc);
000040  464a              MOV      r2,r9
000042  4641              MOV      r1,r8
000044  4638              MOV      r0,r7
000046  f7fffffe          BL       lookforfunc
00004a  4606              MOV      r6,r0
;;;522        if (stat != ERRFUNC) return stat;
00004c  2e02              CMP      r6,#2
00004e  d002              BEQ      |L12.86|
000050  4630              MOV      r0,r6
                  |L12.82|
;;;523        modname = mark + 1;  /* else go ahead and try old-style name */
;;;524      }
;;;525      openfunc = lua_pushfstring(L, LUA_POF"%s", modname);
;;;526      return lookforfunc(L, filename, openfunc);
;;;527    }
000052  e8bd87f0          POP      {r4-r10,pc}
                  |L12.86|
000056  1c6c              ADDS     r4,r5,#1              ;523
000058  bf00              NOP                            ;524
                  |L12.90|
00005a  4622              MOV      r2,r4                 ;525
00005c  a108              ADR      r1,|L12.128|
00005e  4638              MOV      r0,r7                 ;525
000060  f7fffffe          BL       lua_pushfstring
000064  4681              MOV      r9,r0                 ;525
000066  464a              MOV      r2,r9                 ;526
000068  4641              MOV      r1,r8                 ;526
00006a  4638              MOV      r0,r7                 ;526
00006c  f7fffffe          BL       lookforfunc
000070  e7ef              B        |L12.82|
;;;528    
                          ENDP

000072  0000              DCW      0x0000
                  |L12.116|
000074  5f00              DCB      "_",0
000076  00                DCB      0
000077  00                DCB      0
                  |L12.120|
000078  2e00              DCB      ".",0
00007a  00                DCB      0
00007b  00                DCB      0
                  |L12.124|
00007c  2d00              DCB      "-",0
00007e  00                DCB      0
00007f  00                DCB      0
                  |L12.128|
000080  6c75616f          DCB      "luaopen_%s",0
000084  70656e5f
000088  257300  
00008b  00                DCB      0

                          AREA ||i.lookforfunc||, CODE, READONLY, ALIGN=1

                  lookforfunc PROC
;;;371    */
;;;372    static int lookforfunc (lua_State *L, const char *path, const char *sym) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
;;;373      void *reg = checkclib(L, path);  /* check loaded C libraries */
00000a  4641              MOV      r1,r8
00000c  4638              MOV      r0,r7
00000e  f7fffffe          BL       checkclib
000012  4604              MOV      r4,r0
;;;374      if (reg == NULL) {  /* must load library? */
000014  b9a4              CBNZ     r4,|L13.64|
;;;375        reg = lsys_load(L, path, *sym == '*');  /* global symbols if 'sym'=='*' */
000016  7828              LDRB     r0,[r5,#0]
000018  282a              CMP      r0,#0x2a
00001a  d101              BNE      |L13.32|
00001c  2001              MOVS     r0,#1
00001e  e000              B        |L13.34|
                  |L13.32|
000020  2000              MOVS     r0,#0
                  |L13.34|
000022  4602              MOV      r2,r0
000024  4641              MOV      r1,r8
000026  4638              MOV      r0,r7
000028  f7fffffe          BL       lsys_load
00002c  4604              MOV      r4,r0
;;;376        if (reg == NULL) return ERRLIB;  /* unable to load library */
00002e  b914              CBNZ     r4,|L13.54|
000030  2001              MOVS     r0,#1
                  |L13.50|
;;;377        addtoclib(L, path, reg);
;;;378      }
;;;379      if (*sym == '*') {  /* loading only library (no function)? */
;;;380        lua_pushboolean(L, 1);  /* return 'true' */
;;;381        return 0;  /* no errors */
;;;382      }
;;;383      else {
;;;384        lua_CFunction f = lsys_sym(L, reg, sym);
;;;385        if (f == NULL)
;;;386          return ERRFUNC;  /* unable to find function */
;;;387        lua_pushcfunction(L, f);  /* else create new function */
;;;388        return 0;  /* no errors */
;;;389      }
;;;390    }
000032  e8bd81f0          POP      {r4-r8,pc}
                  |L13.54|
000036  4622              MOV      r2,r4                 ;377
000038  4641              MOV      r1,r8                 ;377
00003a  4638              MOV      r0,r7                 ;377
00003c  f7fffffe          BL       addtoclib
                  |L13.64|
000040  7828              LDRB     r0,[r5,#0]            ;379
000042  282a              CMP      r0,#0x2a              ;379
000044  d105              BNE      |L13.82|
000046  2101              MOVS     r1,#1                 ;380
000048  4638              MOV      r0,r7                 ;380
00004a  f7fffffe          BL       lua_pushboolean
00004e  2000              MOVS     r0,#0                 ;381
000050  e7ef              B        |L13.50|
                  |L13.82|
000052  462a              MOV      r2,r5                 ;384
000054  4621              MOV      r1,r4                 ;384
000056  4638              MOV      r0,r7                 ;384
000058  f7fffffe          BL       lsys_sym
00005c  4606              MOV      r6,r0                 ;384
00005e  b90e              CBNZ     r6,|L13.100|
000060  2002              MOVS     r0,#2                 ;386
000062  e7e6              B        |L13.50|
                  |L13.100|
000064  2200              MOVS     r2,#0                 ;387
000066  4631              MOV      r1,r6                 ;387
000068  4638              MOV      r0,r7                 ;387
00006a  f7fffffe          BL       lua_pushcclosure
00006e  2000              MOVS     r0,#0                 ;388
000070  e7df              B        |L13.50|
;;;391    
                          ENDP


                          AREA ||i.lsys_load||, CODE, READONLY, ALIGN=2

                  lsys_load PROC
;;;235    
;;;236    static void *lsys_load (lua_State *L, const char *path, int seeglb) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;237      (void)(path); (void)(seeglb);  /* not used */
;;;238      lua_pushliteral(L, DLMSG);
000008  a102              ADR      r1,|L14.20|
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       lua_pushstring
;;;239      return NULL;
000010  2000              MOVS     r0,#0
;;;240    }
000012  bd70              POP      {r4-r6,pc}
;;;241    
                          ENDP

                  |L14.20|
000014  64796e61          DCB      "dynamic libraries not enabled; check your Lua installat"
000018  6d696320
00001c  6c696272
000020  61726965
000024  73206e6f
000028  7420656e
00002c  61626c65
000030  643b2063
000034  6865636b
000038  20796f75
00003c  72204c75
000040  6120696e
000044  7374616c
000048  6c6174  
00004b  696f6e00          DCB      "ion",0
00004f  00                DCB      0

                          AREA ||i.lsys_sym||, CODE, READONLY, ALIGN=2

                  lsys_sym PROC
;;;242    
;;;243    static lua_CFunction lsys_sym (lua_State *L, void *lib, const char *sym) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;244      (void)(lib); (void)(sym);  /* not used */
;;;245      lua_pushliteral(L, DLMSG);
000008  a102              ADR      r1,|L15.20|
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       lua_pushstring
;;;246      return NULL;
000010  2000              MOVS     r0,#0
;;;247    }
000012  bd70              POP      {r4-r6,pc}
;;;248    
                          ENDP

                  |L15.20|
000014  64796e61          DCB      "dynamic libraries not enabled; check your Lua installat"
000018  6d696320
00001c  6c696272
000020  61726965
000024  73206e6f
000028  7420656e
00002c  61626c65
000030  643b2063
000034  6865636b
000038  20796f75
00003c  72204c75
000040  6120696e
000044  7374616c
000048  6c6174  
00004b  696f6e00          DCB      "ion",0
00004f  00                DCB      0

                          AREA ||i.lsys_unloadlib||, CODE, READONLY, ALIGN=1

                  lsys_unloadlib PROC
;;;230    
;;;231    static void lsys_unloadlib (void *lib) {
000000  4770              BX       lr
;;;232      (void)(lib);  /* not used */
;;;233    }
;;;234    
                          ENDP


                          AREA ||i.luaopen_package||, CODE, READONLY, ALIGN=2

                  luaopen_package PROC
;;;673    
;;;674    LUAMOD_API int luaopen_package (lua_State *L) {
000000  b538              PUSH     {r3-r5,lr}
000002  4604              MOV      r4,r0
;;;675      createclibstable(L);
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       createclibstable
;;;676      luaL_newlib(L, pk_funcs);  /* create 'package' table */
00000a  2088              MOVS     r0,#0x88
00000c  2200              MOVS     r2,#0
00000e  4b2a              LDR      r3,|L17.184|
000010  9000              STR      r0,[sp,#0]
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       luaL_checkversion_
000018  2207              MOVS     r2,#7
00001a  2100              MOVS     r1,#0
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       lua_createtable
000022  2200              MOVS     r2,#0
000024  4925              LDR      r1,|L17.188|
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       luaL_setfuncs
;;;677      createsearcherstable(L);
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       createsearcherstable
;;;678      /* set paths */
;;;679      setpath(L, "path", LUA_PATH_VAR, LUA_PATH_DEFAULT);
000032  4b23              LDR      r3,|L17.192|
000034  a223              ADR      r2,|L17.196|
000036  a126              ADR      r1,|L17.208|
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       setpath
;;;680      setpath(L, "cpath", LUA_CPATH_VAR, LUA_CPATH_DEFAULT);
00003e  4b26              LDR      r3,|L17.216|
000040  a226              ADR      r2,|L17.220|
000042  a129              ADR      r1,|L17.232|
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       setpath
;;;681      /* store config information */
;;;682      lua_pushliteral(L, LUA_DIRSEP "\n" LUA_PATH_SEP "\n" LUA_PATH_MARK "\n"
00004a  a129              ADR      r1,|L17.240|
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       lua_pushstring
;;;683                         LUA_EXEC_DIR "\n" LUA_IGMARK "\n");
;;;684      lua_setfield(L, -2, "config");
000052  a22a              ADR      r2,|L17.252|
000054  f06f0101          MVN      r1,#1
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       lua_setfield
;;;685      /* set field 'loaded' */
;;;686      luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_LOADED_TABLE);
00005e  a229              ADR      r2,|L17.260|
000060  492a              LDR      r1,|L17.268|
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       luaL_getsubtable
;;;687      lua_setfield(L, -2, "loaded");
000068  a229              ADR      r2,|L17.272|
00006a  f06f0101          MVN      r1,#1
00006e  4620              MOV      r0,r4
000070  f7fffffe          BL       lua_setfield
;;;688      /* set field 'preload' */
;;;689      luaL_getsubtable(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);
000074  a228              ADR      r2,|L17.280|
000076  4925              LDR      r1,|L17.268|
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       luaL_getsubtable
;;;690      lua_setfield(L, -2, "preload");
00007e  a229              ADR      r2,|L17.292|
000080  f06f0101          MVN      r1,#1
000084  4620              MOV      r0,r4
000086  f7fffffe          BL       lua_setfield
;;;691      lua_pushglobaltable(L);
00008a  2202              MOVS     r2,#2
00008c  2300              MOVS     r3,#0
00008e  491f              LDR      r1,|L17.268|
000090  4620              MOV      r0,r4
000092  f7fffffe          BL       lua_rawgeti
;;;692      lua_pushvalue(L, -2);  /* set 'package' as upvalue for next lib */
000096  f06f0101          MVN      r1,#1
00009a  4620              MOV      r0,r4
00009c  f7fffffe          BL       lua_pushvalue
;;;693      luaL_setfuncs(L, ll_funcs, 1);  /* open lib into global table */
0000a0  2201              MOVS     r2,#1
0000a2  4922              LDR      r1,|L17.300|
0000a4  4620              MOV      r0,r4
0000a6  f7fffffe          BL       luaL_setfuncs
;;;694      lua_pop(L, 1);  /* pop global table */
0000aa  f06f0101          MVN      r1,#1
0000ae  4620              MOV      r0,r4
0000b0  f7fffffe          BL       lua_settop
;;;695      return 1;  /* return 'package' table */
0000b4  2001              MOVS     r0,#1
;;;696    }
0000b6  bd38              POP      {r3-r5,pc}
;;;697    
                          ENDP

                  |L17.184|
                          DCD      0x407f8000
                  |L17.188|
                          DCD      pk_funcs
                  |L17.192|
                          DCD      ||.conststring||+0x48
                  |L17.196|
0000c4  4c55415f          DCB      "LUA_PATH",0
0000c8  50415448
0000cc  00      
0000cd  00                DCB      0
0000ce  00                DCB      0
0000cf  00                DCB      0
                  |L17.208|
0000d0  70617468          DCB      "path",0
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L17.216|
                          DCD      ||.conststring||+0xe0
                  |L17.220|
0000dc  4c55415f          DCB      "LUA_CPATH",0
0000e0  43504154
0000e4  4800    
0000e6  00                DCB      0
0000e7  00                DCB      0
                  |L17.232|
0000e8  63706174          DCB      "cpath",0
0000ec  6800    
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L17.240|
0000f0  2f0a3b0a          DCB      "/\n;\n?\n!\n-\n",0
0000f4  3f0a210a
0000f8  2d0a00  
0000fb  00                DCB      0
                  |L17.252|
0000fc  636f6e66          DCB      "config",0
000100  696700  
000103  00                DCB      0
                  |L17.260|
000104  5f4c4f41          DCB      "_LOADED",0
000108  44454400
                  |L17.268|
                          DCD      0xfff0b9d8
                  |L17.272|
000110  6c6f6164          DCB      "loaded",0
000114  656400  
000117  00                DCB      0
                  |L17.280|
000118  5f505245          DCB      "_PRELOAD",0
00011c  4c4f4144
000120  00      
000121  00                DCB      0
000122  00                DCB      0
000123  00                DCB      0
                  |L17.292|
000124  7072656c          DCB      "preload",0
000128  6f616400
                  |L17.300|
                          DCD      ll_funcs

                          AREA ||i.noenv||, CODE, READONLY, ALIGN=2

                  noenv PROC
;;;277    */
;;;278    static int noenv (lua_State *L) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;279      int b;
;;;280      lua_getfield(L, LUA_REGISTRYINDEX, "LUA_NOENV");
000004  a208              ADR      r2,|L18.40|
000006  490b              LDR      r1,|L18.52|
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       lua_getfield
;;;281      b = lua_toboolean(L, -1);
00000e  f04f31ff          MOV      r1,#0xffffffff
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       lua_toboolean
000018  4605              MOV      r5,r0
;;;282      lua_pop(L, 1);  /* remove value */
00001a  f06f0101          MVN      r1,#1
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       lua_settop
;;;283      return b;
000024  4628              MOV      r0,r5
;;;284    }
000026  bd70              POP      {r4-r6,pc}
;;;285    
                          ENDP

                  |L18.40|
000028  4c55415f          DCB      "LUA_NOENV",0
00002c  4e4f454e
000030  5600    
000032  00                DCB      0
000033  00                DCB      0
                  |L18.52|
                          DCD      0xfff0b9d8

                          AREA ||i.pushnexttemplate||, CODE, READONLY, ALIGN=2

                  pushnexttemplate PROC
;;;423    
;;;424    static const char *pushnexttemplate (lua_State *L, const char *path) {
000000  b570              PUSH     {r4-r6,lr}
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;425      const char *l;
;;;426      while (*path == *LUA_PATH_SEP) path++;  /* skip separators */
000006  e000              B        |L19.10|
                  |L19.8|
000008  1c64              ADDS     r4,r4,#1
                  |L19.10|
00000a  f9940000          LDRSB    r0,[r4,#0]
00000e  a10e              ADR      r1,|L19.72|
000010  f9911000          LDRSB    r1,[r1,#0]
000014  4288              CMP      r0,r1
000016  d0f7              BEQ      |L19.8|
;;;427      if (*path == '\0') return NULL;  /* no more templates */
000018  7820              LDRB     r0,[r4,#0]
00001a  b908              CBNZ     r0,|L19.32|
00001c  2000              MOVS     r0,#0
                  |L19.30|
;;;428      l = strchr(path, *LUA_PATH_SEP);  /* find next separator */
;;;429      if (l == NULL) l = path + strlen(path);
;;;430      lua_pushlstring(L, path, l - path);  /* template */
;;;431      return l;
;;;432    }
00001e  bd70              POP      {r4-r6,pc}
                  |L19.32|
000020  a009              ADR      r0,|L19.72|
000022  f9901000          LDRSB    r1,[r0,#0]            ;428
000026  4620              MOV      r0,r4                 ;428
000028  f7fffffe          BL       strchr
00002c  4605              MOV      r5,r0                 ;428
00002e  b91d              CBNZ     r5,|L19.56|
000030  4620              MOV      r0,r4                 ;429
000032  f7fffffe          BL       strlen
000036  1905              ADDS     r5,r0,r4              ;429
                  |L19.56|
000038  1b2a              SUBS     r2,r5,r4              ;430
00003a  4621              MOV      r1,r4                 ;430
00003c  4630              MOV      r0,r6                 ;430
00003e  f7fffffe          BL       lua_pushlstring
000042  4628              MOV      r0,r5                 ;431
000044  e7eb              B        |L19.30|
;;;433    
                          ENDP

000046  0000              DCW      0x0000
                  |L19.72|
000048  3b00              DCB      ";",0
00004a  00                DCB      0
00004b  00                DCB      0

                          AREA ||i.readable||, CODE, READONLY, ALIGN=2

                  readable PROC
;;;415    
;;;416    static int readable (const char *filename) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;417      FILE *f = fopen(filename, "r");  /* try to open file */
000004  a106              ADR      r1,|L20.32|
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       fopen
00000c  4604              MOV      r4,r0
;;;418      if (f == NULL) return 0;  /* open failed */
00000e  b90c              CBNZ     r4,|L20.20|
000010  2000              MOVS     r0,#0
                  |L20.18|
;;;419      fclose(f);
;;;420      return 1;
;;;421    }
000012  bd70              POP      {r4-r6,pc}
                  |L20.20|
000014  4620              MOV      r0,r4                 ;419
000016  f7fffffe          BL       fclose
00001a  2001              MOVS     r0,#1                 ;420
00001c  e7f9              B        |L20.18|
;;;422    
                          ENDP

00001e  0000              DCW      0x0000
                  |L20.32|
000020  7200              DCB      "r",0
000022  00                DCB      0
000023  00                DCB      0

                          AREA ||i.searcher_C||, CODE, READONLY, ALIGN=2

                  searcher_C PROC
;;;529    
;;;530    static int searcher_C (lua_State *L) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;531      const char *name = luaL_checkstring(L, 1);
000006  2200              MOVS     r2,#0
000008  2101              MOVS     r1,#1
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       luaL_checklstring
000010  4607              MOV      r7,r0
;;;532      const char *filename = findfile(L, name, "cpath", LUA_CSUBSEP);
000012  a30d              ADR      r3,|L21.72|
000014  a20d              ADR      r2,|L21.76|
000016  4639              MOV      r1,r7
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       findfile
00001e  4604              MOV      r4,r0
;;;533      if (filename == NULL) return 1;  /* module not found in this path */
000020  b914              CBNZ     r4,|L21.40|
000022  2001              MOVS     r0,#1
                  |L21.36|
;;;534      return checkload(L, (loadfunc(L, filename, name) == 0), filename);
;;;535    }
000024  e8bd81f0          POP      {r4-r8,pc}
                  |L21.40|
000028  463a              MOV      r2,r7                 ;534
00002a  4621              MOV      r1,r4                 ;534
00002c  4628              MOV      r0,r5                 ;534
00002e  f7fffffe          BL       loadfunc
000032  b908              CBNZ     r0,|L21.56|
000034  2001              MOVS     r0,#1                 ;534
000036  e000              B        |L21.58|
                  |L21.56|
000038  2000              MOVS     r0,#0                 ;534
                  |L21.58|
00003a  4606              MOV      r6,r0                 ;534
00003c  4622              MOV      r2,r4                 ;534
00003e  4631              MOV      r1,r6                 ;534
000040  4628              MOV      r0,r5                 ;534
000042  f7fffffe          BL       checkload
000046  e7ed              B        |L21.36|
;;;536    
                          ENDP

                  |L21.72|
000048  2f00              DCB      "/",0
00004a  00                DCB      0
00004b  00                DCB      0
                  |L21.76|
00004c  63706174          DCB      "cpath",0
000050  6800    
000052  00                DCB      0
000053  00                DCB      0

                          AREA ||i.searcher_Croot||, CODE, READONLY, ALIGN=2

                  searcher_Croot PROC
;;;537    
;;;538    static int searcher_Croot (lua_State *L) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4680              MOV      r8,r0
;;;539      const char *filename;
;;;540      const char *name = luaL_checkstring(L, 1);
000006  2200              MOVS     r2,#0
000008  2101              MOVS     r1,#1
00000a  4640              MOV      r0,r8
00000c  f7fffffe          BL       luaL_checklstring
000010  4605              MOV      r5,r0
;;;541      const char *p = strchr(name, '.');
000012  212e              MOVS     r1,#0x2e
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       strchr
00001a  4607              MOV      r7,r0
;;;542      int stat;
;;;543      if (p == NULL) return 0;  /* is root */
00001c  b917              CBNZ     r7,|L22.36|
00001e  2000              MOVS     r0,#0
                  |L22.32|
;;;544      lua_pushlstring(L, name, p - name);
;;;545      filename = findfile(L, lua_tostring(L, -1), "cpath", LUA_CSUBSEP);
;;;546      if (filename == NULL) return 1;  /* root not found */
;;;547      if ((stat = loadfunc(L, filename, name)) != 0) {
;;;548        if (stat != ERRFUNC)
;;;549          return checkload(L, 0, filename);  /* real error */
;;;550        else {  /* open function not found */
;;;551          lua_pushfstring(L, "\n\tno module '%s' in file '%s'", name, filename);
;;;552          return 1;
;;;553        }
;;;554      }
;;;555      lua_pushstring(L, filename);  /* will be 2nd argument to module */
;;;556      return 2;
;;;557    }
000020  e8bd87f0          POP      {r4-r10,pc}
                  |L22.36|
000024  1b7a              SUBS     r2,r7,r5              ;544
000026  4629              MOV      r1,r5                 ;544
000028  4640              MOV      r0,r8                 ;544
00002a  f7fffffe          BL       lua_pushlstring
00002e  2200              MOVS     r2,#0                 ;545
000030  1e51              SUBS     r1,r2,#1              ;545
000032  4640              MOV      r0,r8                 ;545
000034  f7fffffe          BL       lua_tolstring
000038  4681              MOV      r9,r0                 ;545
00003a  a313              ADR      r3,|L22.136|
00003c  a213              ADR      r2,|L22.140|
00003e  4649              MOV      r1,r9                 ;545
000040  4640              MOV      r0,r8                 ;545
000042  f7fffffe          BL       findfile
000046  4604              MOV      r4,r0                 ;545
000048  b90c              CBNZ     r4,|L22.78|
00004a  2001              MOVS     r0,#1                 ;546
00004c  e7e8              B        |L22.32|
                  |L22.78|
00004e  462a              MOV      r2,r5                 ;547
000050  4621              MOV      r1,r4                 ;547
000052  4640              MOV      r0,r8                 ;547
000054  f7fffffe          BL       loadfunc
000058  1e06              SUBS     r6,r0,#0              ;547
00005a  d00f              BEQ      |L22.124|
00005c  2e02              CMP      r6,#2                 ;548
00005e  d005              BEQ      |L22.108|
000060  4622              MOV      r2,r4                 ;549
000062  2100              MOVS     r1,#0                 ;549
000064  4640              MOV      r0,r8                 ;549
000066  f7fffffe          BL       checkload
00006a  e7d9              B        |L22.32|
                  |L22.108|
00006c  4623              MOV      r3,r4                 ;551
00006e  462a              MOV      r2,r5                 ;551
000070  a108              ADR      r1,|L22.148|
000072  4640              MOV      r0,r8                 ;551
000074  f7fffffe          BL       lua_pushfstring
000078  2001              MOVS     r0,#1                 ;552
00007a  e7d1              B        |L22.32|
                  |L22.124|
00007c  4621              MOV      r1,r4                 ;555
00007e  4640              MOV      r0,r8                 ;555
000080  f7fffffe          BL       lua_pushstring
000084  2002              MOVS     r0,#2                 ;556
000086  e7cb              B        |L22.32|
;;;558    
                          ENDP

                  |L22.136|
000088  2f00              DCB      "/",0
00008a  00                DCB      0
00008b  00                DCB      0
                  |L22.140|
00008c  63706174          DCB      "cpath",0
000090  6800    
000092  00                DCB      0
000093  00                DCB      0
                  |L22.148|
000094  0a096e6f          DCB      "\n\tno module '%s' in file '%s'",0
000098  206d6f64
00009c  756c6520
0000a0  27257327
0000a4  20696e20
0000a8  66696c65
0000ac  20272573
0000b0  2700    
0000b2  00                DCB      0
0000b3  00                DCB      0

                          AREA ||i.searcher_Lua||, CODE, READONLY, ALIGN=2

                  searcher_Lua PROC
;;;494    
;;;495    static int searcher_Lua (lua_State *L) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;496      const char *filename;
;;;497      const char *name = luaL_checkstring(L, 1);
000006  2200              MOVS     r2,#0
000008  2101              MOVS     r1,#1
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       luaL_checklstring
000010  4607              MOV      r7,r0
;;;498      filename = findfile(L, name, "path", LUA_LSUBSEP);
000012  a30d              ADR      r3,|L23.72|
000014  a20d              ADR      r2,|L23.76|
000016  4639              MOV      r1,r7
000018  4628              MOV      r0,r5
00001a  f7fffffe          BL       findfile
00001e  4604              MOV      r4,r0
;;;499      if (filename == NULL) return 1;  /* module not found in this path */
000020  b914              CBNZ     r4,|L23.40|
000022  2001              MOVS     r0,#1
                  |L23.36|
;;;500      return checkload(L, (luaL_loadfile(L, filename) == LUA_OK), filename);
;;;501    }
000024  e8bd81f0          POP      {r4-r8,pc}
                  |L23.40|
000028  2200              MOVS     r2,#0                 ;500
00002a  4621              MOV      r1,r4                 ;500
00002c  4628              MOV      r0,r5                 ;500
00002e  f7fffffe          BL       luaL_loadfilex
000032  b908              CBNZ     r0,|L23.56|
000034  2001              MOVS     r0,#1                 ;500
000036  e000              B        |L23.58|
                  |L23.56|
000038  2000              MOVS     r0,#0                 ;500
                  |L23.58|
00003a  4606              MOV      r6,r0                 ;500
00003c  4622              MOV      r2,r4                 ;500
00003e  4631              MOV      r1,r6                 ;500
000040  4628              MOV      r0,r5                 ;500
000042  f7fffffe          BL       checkload
000046  e7ed              B        |L23.36|
;;;502    
                          ENDP

                  |L23.72|
000048  2f00              DCB      "/",0
00004a  00                DCB      0
00004b  00                DCB      0
                  |L23.76|
00004c  70617468          DCB      "path",0
000050  00      
000051  00                DCB      0
000052  00                DCB      0
000053  00                DCB      0

                          AREA ||i.searcher_preload||, CODE, READONLY, ALIGN=2

                  searcher_preload PROC
;;;559    
;;;560    static int searcher_preload (lua_State *L) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;561      const char *name = luaL_checkstring(L, 1);
000004  2200              MOVS     r2,#0
000006  2101              MOVS     r1,#1
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       luaL_checklstring
00000e  4605              MOV      r5,r0
;;;562      lua_getfield(L, LUA_REGISTRYINDEX, LUA_PRELOAD_TABLE);
000010  a209              ADR      r2,|L24.56|
000012  490c              LDR      r1,|L24.68|
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       lua_getfield
;;;563      if (lua_getfield(L, -1, name) == LUA_TNIL)  /* not found? */
00001a  462a              MOV      r2,r5
00001c  f04f31ff          MOV      r1,#0xffffffff
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       lua_getfield
000026  b920              CBNZ     r0,|L24.50|
;;;564        lua_pushfstring(L, "\n\tno field package.preload['%s']", name);
000028  462a              MOV      r2,r5
00002a  a107              ADR      r1,|L24.72|
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       lua_pushfstring
                  |L24.50|
;;;565      return 1;
000032  2001              MOVS     r0,#1
;;;566    }
000034  bd70              POP      {r4-r6,pc}
;;;567    
                          ENDP

000036  0000              DCW      0x0000
                  |L24.56|
000038  5f505245          DCB      "_PRELOAD",0
00003c  4c4f4144
000040  00      
000041  00                DCB      0
000042  00                DCB      0
000043  00                DCB      0
                  |L24.68|
                          DCD      0xfff0b9d8
                  |L24.72|
000048  0a096e6f          DCB      "\n\tno field package.preload['%s']",0
00004c  20666965
000050  6c642070
000054  61636b61
000058  67652e70
00005c  72656c6f
000060  61645b27
000064  2573275d
000068  00      
000069  00                DCB      0
00006a  00                DCB      0
00006b  00                DCB      0

                          AREA ||i.searchpath||, CODE, READONLY, ALIGN=2

                  searchpath PROC
;;;434    
;;;435    static const char *searchpath (lua_State *L, const char *name,
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;436                                                 const char *path,
;;;437                                                 const char *sep,
;;;438                                                 const char *dirsep) {
000004  f5ad5d82          SUB      sp,sp,#0x1040
000008  4680              MOV      r8,r0
00000a  460d              MOV      r5,r1
00000c  4616              MOV      r6,r2
00000e  461c              MOV      r4,r3
000010  f50d5080          ADD      r0,sp,#0x1000
000014  f8d09060          LDR      r9,[r0,#0x60]
;;;439      luaL_Buffer msg;  /* to build error message */
;;;440      if (*sep != '\0')  /* non-empty separator? */
000018  7820              LDRB     r0,[r4,#0]
00001a  b130              CBZ      r0,|L25.42|
;;;441        name = luaL_gsub(L, name, sep, dirsep);  /* replace it by 'dirsep' */
00001c  464b              MOV      r3,r9
00001e  4622              MOV      r2,r4
000020  4629              MOV      r1,r5
000022  4640              MOV      r0,r8
000024  f7fffffe          BL       luaL_gsub
000028  4605              MOV      r5,r0
                  |L25.42|
;;;442      luaL_buffinit(L, &msg);
00002a  a90c              ADD      r1,sp,#0x30
00002c  4640              MOV      r0,r8
00002e  f7fffffe          BL       luaL_buffinit
;;;443      while ((path = pushnexttemplate(L, path)) != NULL) {
000032  e034              B        |L25.158|
                  |L25.52|
;;;444        const char *filename = luaL_gsub(L, lua_tostring(L, -1),
000034  2200              MOVS     r2,#0
000036  1e51              SUBS     r1,r2,#1
000038  4640              MOV      r0,r8
00003a  f7fffffe          BL       lua_tolstring
00003e  4682              MOV      r10,r0
000040  462b              MOV      r3,r5
000042  a21c              ADR      r2,|L25.180|
000044  4651              MOV      r1,r10
000046  4640              MOV      r0,r8
000048  f7fffffe          BL       luaL_gsub
00004c  4607              MOV      r7,r0
;;;445                                         LUA_PATH_MARK, name);
;;;446        lua_remove(L, -2);  /* remove path template */
00004e  f04f32ff          MOV      r2,#0xffffffff
000052  0051              LSLS     r1,r2,#1
000054  4640              MOV      r0,r8
000056  f7fffffe          BL       lua_rotate
00005a  f06f0101          MVN      r1,#1
00005e  4640              MOV      r0,r8
000060  f7fffffe          BL       lua_settop
;;;447        if (readable(filename))  /* does file exist and is readable? */
000064  4638              MOV      r0,r7
000066  f7fffffe          BL       readable
00006a  b120              CBZ      r0,|L25.118|
;;;448          return filename;  /* return that file name */
00006c  4638              MOV      r0,r7
                  |L25.110|
;;;449        lua_pushfstring(L, "\n\tno file '%s'", filename);
;;;450        lua_remove(L, -2);  /* remove file name */
;;;451        luaL_addvalue(&msg);  /* concatenate error msg. entry */
;;;452      }
;;;453      luaL_pushresult(&msg);  /* create error message */
;;;454      return NULL;  /* not found */
;;;455    }
00006e  f50d5d82          ADD      sp,sp,#0x1040
000072  e8bd87f0          POP      {r4-r10,pc}
                  |L25.118|
000076  463a              MOV      r2,r7                 ;449
000078  a10f              ADR      r1,|L25.184|
00007a  4640              MOV      r0,r8                 ;449
00007c  f7fffffe          BL       lua_pushfstring
000080  f04f32ff          MOV      r2,#0xffffffff        ;450
000084  0051              LSLS     r1,r2,#1              ;450
000086  4640              MOV      r0,r8                 ;450
000088  f7fffffe          BL       lua_rotate
00008c  f06f0101          MVN      r1,#1                 ;450
000090  4640              MOV      r0,r8                 ;450
000092  f7fffffe          BL       lua_settop
000096  a80c              ADD      r0,sp,#0x30           ;451
000098  f7fffffe          BL       luaL_addvalue
00009c  bf00              NOP                            ;452
                  |L25.158|
00009e  4631              MOV      r1,r6                 ;443
0000a0  4640              MOV      r0,r8                 ;443
0000a2  f7fffffe          BL       pushnexttemplate
0000a6  1e06              SUBS     r6,r0,#0              ;443
0000a8  d1c4              BNE      |L25.52|
0000aa  a80c              ADD      r0,sp,#0x30           ;453
0000ac  f7fffffe          BL       luaL_pushresult
0000b0  2000              MOVS     r0,#0                 ;454
0000b2  e7dc              B        |L25.110|
;;;456    
                          ENDP

                  |L25.180|
0000b4  3f00              DCB      "?",0
0000b6  00                DCB      0
0000b7  00                DCB      0
                  |L25.184|
0000b8  0a096e6f          DCB      "\n\tno file '%s'",0
0000bc  2066696c
0000c0  65202725
0000c4  732700  
0000c7  00                DCB      0

                          AREA ||i.setpath||, CODE, READONLY, ALIGN=2

                  setpath PROC
;;;289    */
;;;290    static void setpath (lua_State *L, const char *fieldname,
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;291                                       const char *envname,
;;;292                                       const char *dft) {
000004  4680              MOV      r8,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;293      const char *nver = lua_pushfstring(L, "%s%s", envname, LUA_VERSUFFIX);
00000c  a31f              ADR      r3,|L26.140|
00000e  4632              MOV      r2,r6
000010  a120              ADR      r1,|L26.148|
000012  4640              MOV      r0,r8
000014  f7fffffe          BL       lua_pushfstring
000018  4681              MOV      r9,r0
;;;294      const char *path = getenv(nver);  /* use versioned name */
00001a  4648              MOV      r0,r9
00001c  f7fffffe          BL       getenv
000020  4604              MOV      r4,r0
;;;295      if (path == NULL)  /* no environment variable? */
000022  b91c              CBNZ     r4,|L26.44|
;;;296        path = getenv(envname);  /* try unversioned name */
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       getenv
00002a  4604              MOV      r4,r0
                  |L26.44|
;;;297      if (path == NULL || noenv(L))  /* no environment variable? */
00002c  b11c              CBZ      r4,|L26.54|
00002e  4640              MOV      r0,r8
000030  f7fffffe          BL       noenv
000034  b120              CBZ      r0,|L26.64|
                  |L26.54|
;;;298        lua_pushstring(L, dft);  /* use default */
000036  4639              MOV      r1,r7
000038  4640              MOV      r0,r8
00003a  f7fffffe          BL       lua_pushstring
00003e  e017              B        |L26.112|
                  |L26.64|
;;;299      else {
;;;300        /* replace ";;" by ";AUXMARK;" and then AUXMARK by default path */
;;;301        path = luaL_gsub(L, path, LUA_PATH_SEP LUA_PATH_SEP,
000040  a316              ADR      r3,|L26.156|
000042  a217              ADR      r2,|L26.160|
000044  4621              MOV      r1,r4
000046  4640              MOV      r0,r8
000048  f7fffffe          BL       luaL_gsub
00004c  4604              MOV      r4,r0
;;;302                                  LUA_PATH_SEP AUXMARK LUA_PATH_SEP);
;;;303        luaL_gsub(L, path, AUXMARK, dft);
00004e  463b              MOV      r3,r7
000050  a214              ADR      r2,|L26.164|
000052  4621              MOV      r1,r4
000054  4640              MOV      r0,r8
000056  f7fffffe          BL       luaL_gsub
;;;304        lua_remove(L, -2); /* remove result from 1st 'gsub' */
00005a  f04f32ff          MOV      r2,#0xffffffff
00005e  0051              LSLS     r1,r2,#1
000060  4640              MOV      r0,r8
000062  f7fffffe          BL       lua_rotate
000066  f06f0101          MVN      r1,#1
00006a  4640              MOV      r0,r8
00006c  f7fffffe          BL       lua_settop
                  |L26.112|
;;;305      }
;;;306      setprogdir(L);
;;;307      lua_setfield(L, -3, fieldname);  /* package[fieldname] = path value */
000070  462a              MOV      r2,r5
000072  f06f0102          MVN      r1,#2
000076  4640              MOV      r0,r8
000078  f7fffffe          BL       lua_setfield
;;;308      lua_pop(L, 1);  /* pop versioned variable name */
00007c  f06f0101          MVN      r1,#1
000080  4640              MOV      r0,r8
000082  f7fffffe          BL       lua_settop
;;;309    }
000086  e8bd87f0          POP      {r4-r10,pc}
;;;310    
                          ENDP

00008a  0000              DCW      0x0000
                  |L26.140|
00008c  5f355f34          DCB      "_5_4",0
000090  00      
000091  00                DCB      0
000092  00                DCB      0
000093  00                DCB      0
                  |L26.148|
000094  25732573          DCB      "%s%s",0
000098  00      
000099  00                DCB      0
00009a  00                DCB      0
00009b  00                DCB      0
                  |L26.156|
00009c  3b013b00          DCB      ";",1,";",0
                  |L26.160|
0000a0  3b3b00            DCB      ";;",0
0000a3  00                DCB      0
                  |L26.164|
0000a4  0100              DCB      1,0
0000a6  00                DCB      0
0000a7  00                DCB      0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  CLIBS
                          DCD      0x00000000
                  pk_funcs
                          DCD      ||.conststring||
                          DCD      ll_loadlib
                          DCD      ||.conststring||+0x8
                          DCD      ll_searchpath
                          DCD      ||.conststring||+0x14
                          DCD      0x00000000
                          DCD      ||.conststring||+0x1c
                          DCD      0x00000000
                          DCD      ||.conststring||+0x24
                          DCD      0x00000000
                          DCD      ||.conststring||+0x2c
                          DCD      0x00000000
                          DCD      ||.conststring||+0x38
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                  ll_funcs
                          DCD      ||.conststring||+0x40
                          DCD      ll_require
                          DCD      0x00000000
                          DCD      0x00000000
                  searchers
                          DCD      searcher_preload
                          DCD      searcher_Lua
                          DCD      searcher_C
                          DCD      searcher_Croot
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  6c6f6164          DCB      "loadlib",0
000004  6c696200
000008  73656172          DCB      "searchpath",0
00000c  63687061
000010  746800  
000013  00                DCB      0
000014  7072656c          DCB      "preload",0
000018  6f616400
00001c  63706174          DCB      "cpath",0
000020  6800    
000022  00                DCB      0
000023  00                DCB      0
000024  70617468          DCB      "path",0
000028  00      
000029  00                DCB      0
00002a  00                DCB      0
00002b  00                DCB      0
00002c  73656172          DCB      "searchers",0
000030  63686572
000034  7300    
000036  00                DCB      0
000037  00                DCB      0
000038  6c6f6164          DCB      "loaded",0
00003c  656400  
00003f  00                DCB      0
000040  72657175          DCB      "require",0
000044  69726500
000048  2f757372          DCB      "/usr/local/share/lua/5.4/?.lua;/usr/local/share/lua/5.4"
00004c  2f6c6f63
000050  616c2f73
000054  68617265
000058  2f6c7561
00005c  2f352e34
000060  2f3f2e6c
000064  75613b2f
000068  7573722f
00006c  6c6f6361
000070  6c2f7368
000074  6172652f
000078  6c75612f
00007c  352e34  
00007f  2f3f2f69          DCB      "/?/init.lua;/usr/local/lib/lua/5.4/?.lua;/usr/local/lib"
000083  6e69742e
000087  6c75613b
00008b  2f757372
00008f  2f6c6f63
000093  616c2f6c
000097  69622f6c
00009b  75612f35
00009f  2e342f3f
0000a3  2e6c7561
0000a7  3b2f7573
0000ab  722f6c6f
0000af  63616c2f
0000b3  6c6962  
0000b6  2f6c7561          DCB      "/lua/5.4/?/init.lua;./?.lua;./?/init.lua",0
0000ba  2f352e34
0000be  2f3f2f69
0000c2  6e69742e
0000c6  6c75613b
0000ca  2e2f3f2e
0000ce  6c75613b
0000d2  2e2f3f2f
0000d6  696e6974
0000da  2e6c7561
0000de  00      
0000df  00                DCB      0
0000e0  2f757372          DCB      "/usr/local/lib/lua/5.4/?.so;/usr/local/lib/lua/5.4/load"
0000e4  2f6c6f63
0000e8  616c2f6c
0000ec  69622f6c
0000f0  75612f35
0000f4  2e342f3f
0000f8  2e736f3b
0000fc  2f757372
000100  2f6c6f63
000104  616c2f6c
000108  69622f6c
00010c  75612f35
000110  2e342f6c
000114  6f6164  
000117  616c6c2e          DCB      "all.so;./?.so",0
00011b  736f3b2e
00011f  2f3f2e73
000123  6f00    
