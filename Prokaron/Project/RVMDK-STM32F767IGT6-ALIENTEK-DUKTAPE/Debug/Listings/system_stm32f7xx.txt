; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\system_stm32f7xx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\system_stm32f7xx.d --cpu=Cortex-M7 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Inc -I.\Source -I.\Drivers -I..\..\..\M6P1(D)_Duktape\duktape\src -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F767IGT6-ALIENTEK-DUKTAPE\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER -DDUK_USE_BYTEORDER=1 --enum_is_int --signed_chars --omf_browse=.\debug\output\system_stm32f7xx.crf ..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\CMSIS\Device\ST\STM32F7xx\Source\Templates\system_stm32f7xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;218      */
;;;219    void SystemCoreClockUpdate(void)
000000  b570              PUSH     {r4-r6,lr}
;;;220    {
;;;221      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
000002  2000              MOVS     r0,#0
000004  2200              MOVS     r2,#0
000006  2302              MOVS     r3,#2
000008  2400              MOVS     r4,#0
00000a  2102              MOVS     r1,#2
;;;222      
;;;223      /* Get SYSCLK source -------------------------------------------------------*/
;;;224      tmp = RCC->CFGR & RCC_CFGR_SWS;
00000c  4d27              LDR      r5,|L1.172|
00000e  682d              LDR      r5,[r5,#0]
000010  f005000c          AND      r0,r5,#0xc
;;;225    
;;;226      switch (tmp)
000014  b120              CBZ      r0,|L1.32|
000016  2804              CMP      r0,#4
000018  d006              BEQ      |L1.40|
00001a  2808              CMP      r0,#8
00001c  d134              BNE      |L1.136|
00001e  e007              B        |L1.48|
                  |L1.32|
;;;227      {
;;;228        case 0x00:  /* HSI used as system clock source */
;;;229          SystemCoreClock = HSI_VALUE;
000020  4d23              LDR      r5,|L1.176|
000022  4e24              LDR      r6,|L1.180|
000024  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;230          break;
000026  e033              B        |L1.144|
                  |L1.40|
;;;231        case 0x04:  /* HSE used as system clock source */
;;;232          SystemCoreClock = HSE_VALUE;
000028  4d23              LDR      r5,|L1.184|
00002a  4e22              LDR      r6,|L1.180|
00002c  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;233          break;
00002e  e02f              B        |L1.144|
                  |L1.48|
;;;234        case 0x08:  /* PLL used as system clock source */
;;;235    
;;;236          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;237             SYSCLK = PLL_VCO / PLL_P
;;;238             */    
;;;239          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
000030  4d1e              LDR      r5,|L1.172|
000032  1f2d              SUBS     r5,r5,#4
000034  682d              LDR      r5,[r5,#0]
000036  f3c55480          UBFX     r4,r5,#22,#1
;;;240          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
00003a  4d1c              LDR      r5,|L1.172|
00003c  1f2d              SUBS     r5,r5,#4
00003e  682d              LDR      r5,[r5,#0]
000040  f005013f          AND      r1,r5,#0x3f
;;;241          
;;;242          if (pllsource != 0)
000044  b154              CBZ      r4,|L1.92|
;;;243          {
;;;244            /* HSE used as PLL clock source */
;;;245            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
000046  4d1c              LDR      r5,|L1.184|
000048  fbb5f5f1          UDIV     r5,r5,r1
00004c  4e17              LDR      r6,|L1.172|
00004e  1f36              SUBS     r6,r6,#4
000050  6836              LDR      r6,[r6,#0]
000052  f3c61688          UBFX     r6,r6,#6,#9
000056  fb05f206          MUL      r2,r5,r6
00005a  e009              B        |L1.112|
                  |L1.92|
;;;246          }
;;;247          else
;;;248          {
;;;249            /* HSI used as PLL clock source */
;;;250            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
00005c  4d14              LDR      r5,|L1.176|
00005e  fbb5f5f1          UDIV     r5,r5,r1
000062  4e12              LDR      r6,|L1.172|
000064  1f36              SUBS     r6,r6,#4
000066  6836              LDR      r6,[r6,#0]
000068  f3c61688          UBFX     r6,r6,#6,#9
00006c  fb05f206          MUL      r2,r5,r6
                  |L1.112|
;;;251          }
;;;252    
;;;253          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
000070  4d0e              LDR      r5,|L1.172|
000072  1f2d              SUBS     r5,r5,#4
000074  682d              LDR      r5,[r5,#0]
000076  f3c54501          UBFX     r5,r5,#16,#2
00007a  1c6d              ADDS     r5,r5,#1
00007c  006b              LSLS     r3,r5,#1
;;;254          SystemCoreClock = pllvco/pllp;
00007e  fbb2f5f3          UDIV     r5,r2,r3
000082  4e0c              LDR      r6,|L1.180|
000084  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;255          break;
000086  e003              B        |L1.144|
                  |L1.136|
;;;256        default:
;;;257          SystemCoreClock = HSI_VALUE;
000088  4d09              LDR      r5,|L1.176|
00008a  4e0a              LDR      r6,|L1.180|
00008c  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;258          break;
00008e  bf00              NOP      
                  |L1.144|
000090  bf00              NOP                            ;230
;;;259      }
;;;260      /* Compute HCLK frequency --------------------------------------------------*/
;;;261      /* Get HCLK prescaler */
;;;262      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000092  4d06              LDR      r5,|L1.172|
000094  682d              LDR      r5,[r5,#0]
000096  f3c51503          UBFX     r5,r5,#4,#4
00009a  4e08              LDR      r6,|L1.188|
00009c  5d70              LDRB     r0,[r6,r5]
;;;263      /* HCLK frequency */
;;;264      SystemCoreClock >>= tmp;
00009e  4d05              LDR      r5,|L1.180|
0000a0  682d              LDR      r5,[r5,#0]  ; SystemCoreClock
0000a2  40c5              LSRS     r5,r5,r0
0000a4  4e03              LDR      r6,|L1.180|
0000a6  6035              STR      r5,[r6,#0]  ; SystemCoreClock
;;;265    }
0000a8  bd70              POP      {r4-r6,pc}
;;;266    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L1.172|
                          DCD      0x40023808
                  |L1.176|
                          DCD      0x00f42400
                  |L1.180|
                          DCD      SystemCoreClock
                  |L1.184|
                          DCD      0x017d7840
                  |L1.188|
                          DCD      AHBPrescTable

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;149      */
;;;150    void SystemInit(void)
000000  4810              LDR      r0,|L2.68|
;;;151    {
;;;152      /* FPU settings ------------------------------------------------------------*/
;;;153      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;154        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
;;;155      #endif
;;;156      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;157      /* Set HSION bit */
;;;158      RCC->CR |= (uint32_t)0x00000001;
000002  6800              LDR      r0,[r0,#0]
000004  f0400001          ORR      r0,r0,#1
000008  490e              LDR      r1,|L2.68|
00000a  6008              STR      r0,[r1,#0]
;;;159    
;;;160      /* Reset CFGR register */
;;;161      RCC->CFGR = 0x00000000;
00000c  2000              MOVS     r0,#0
00000e  490d              LDR      r1,|L2.68|
000010  3108              ADDS     r1,r1,#8
000012  6008              STR      r0,[r1,#0]
;;;162    
;;;163      /* Reset HSEON, CSSON and PLLON bits */
;;;164      RCC->CR &= (uint32_t)0xFEF6FFFF;
000014  480b              LDR      r0,|L2.68|
000016  6800              LDR      r0,[r0,#0]
000018  490b              LDR      r1,|L2.72|
00001a  4008              ANDS     r0,r0,r1
00001c  4909              LDR      r1,|L2.68|
00001e  6008              STR      r0,[r1,#0]
;;;165    
;;;166      /* Reset PLLCFGR register */
;;;167      RCC->PLLCFGR = 0x24003010;
000020  480a              LDR      r0,|L2.76|
000022  1d09              ADDS     r1,r1,#4
000024  6008              STR      r0,[r1,#0]
;;;168    
;;;169      /* Reset HSEBYP bit */
;;;170      RCC->CR &= (uint32_t)0xFFFBFFFF;
000026  1f08              SUBS     r0,r1,#4
000028  6800              LDR      r0,[r0,#0]
00002a  f4202080          BIC      r0,r0,#0x40000
00002e  1f09              SUBS     r1,r1,#4
000030  6008              STR      r0,[r1,#0]
;;;171    
;;;172      /* Disable all interrupts */
;;;173      RCC->CIR = 0x00000000;
000032  2000              MOVS     r0,#0
000034  4903              LDR      r1,|L2.68|
000036  310c              ADDS     r1,r1,#0xc
000038  6008              STR      r0,[r1,#0]
;;;174    
;;;175      /* Configure the Vector Table location add offset address ------------------*/
;;;176    #ifdef VECT_TAB_SRAM
;;;177      SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;178    #else
;;;179      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
00003a  f04f6000          MOV      r0,#0x8000000
00003e  4904              LDR      r1,|L2.80|
000040  6008              STR      r0,[r1,#0]
;;;180    #endif
;;;181    }
000042  4770              BX       lr
;;;182    
                          ENDP

                  |L2.68|
                          DCD      0x40023800
                  |L2.72|
                          DCD      0xfef6ffff
                  |L2.76|
                          DCD      0x24003010
                  |L2.80|
                          DCD      0xe000ed08

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09
                  APBPrescTable
000010  00000000          DCB      0x00,0x00,0x00,0x00
000014  01020304          DCB      0x01,0x02,0x03,0x04

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00f42400

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F7_V1.11.0\\Drivers\\CMSIS\\Device\\ST\\STM32F7xx\\Source\\Templates\\system_stm32f7xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f7xx_c_5d646a67____REV16|
#line 464 "D:\\Program_Files_x86\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.1.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_system_stm32f7xx_c_5d646a67____REV16| PROC
#line 465

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f7xx_c_5d646a67____REVSH|
#line 479
|__asm___18_system_stm32f7xx_c_5d646a67____REVSH| PROC
#line 480

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f7xx_c_5d646a67____RRX|
#line 666
|__asm___18_system_stm32f7xx_c_5d646a67____RRX| PROC
#line 667

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
