<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Debug\Output\RMP.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Debug\Output\RMP.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Sat Nov 24 03:13:11 2018
<BR><P>
<H3>Maximum Stack Usage =         64 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
RMP_Init &rArr; RMP_Init_Hook &rArr; RMP_Thd_Crt &rArr; RMP_Unlock_Sched
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3d]">RMP_Disable_Int</a>
 <LI><a href="#[4a]">RMP_Enable_Int</a>
 <LI><a href="#[5b]">RMP_Mask_Int</a>
 <LI><a href="#[4d]">RMP_MSB_Get</a>
 <LI><a href="#[49]">_RMP_Yield</a>
 <LI><a href="#[52]">_RMP_Start</a>
 <LI><a href="#[5]">PendSV_Handler</a>
 <LI><a href="#[6]">SysTick_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">SVC_Handler</a><BR>
 <LI><a href="#[1f]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ADC_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[26]">CLKTRIM_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[b]">DMAC_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[25]">EF_RAM_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[2a]">Func_1</a> from rmp_test.o(i.Func_1) referenced from rmp_test.o(i.RMP_Init_Hook)
 <LI><a href="#[2b]">Func_2</a> from rmp_test.o(i.Func_2) referenced from rmp_test.o(i.RMP_Init_Hook)
 <LI><a href="#[3]">HardFault_Handler</a> from interrupts_hc32l13x.o(i.HardFault_Handler) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[13]">I2C0_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[14]">I2C1_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[24]">LCD_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[18]">LPTIM_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[f]">LPUART0_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[10]">LPUART1_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[23]">LVD_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1c]">PCA_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[20]">PCNT_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[7]">PORTA_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[8]">PORTB_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[9]">PORTC_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[a]">PORTD_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[5]">PendSV_Handler</a> from rmp_platform_cm0_asm.o(ARCH) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[2c]">RMP_Init</a> from rmp_kernel.o(i.RMP_Init) referenced from rmp_kernel.o(i.main)
 <LI><a href="#[1e]">RTC_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[11]">SPI0_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[12]">SPI1_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[4]">SVC_Handler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[6]">SysTick_Handler</a> from rmp_platform_cm0_asm.o(ARCH) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[28]">SystemInit</a> from system_hc32l13x.o(i.SystemInit) referenced from startup_hc32l13x.o(.text)
 <LI><a href="#[15]">TIM0_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[16]">TIM1_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[17]">TIM2_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[c]">TIM3_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[19]">TIM4_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1a]">TIM5_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1b]">TIM6_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[d]">UART0_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[e]">UART1_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[21]">VC0_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[22]">VC1_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[1d]">WDT_IRQHandler</a> from startup_hc32l13x.o(.text) referenced from startup_hc32l13x.o(RESET)
 <LI><a href="#[29]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_hc32l13x.o(.text)
 <LI><a href="#[27]">main</a> from rmp_kernel.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[29]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[54]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[55]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[56]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[57]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[58]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CLKTRIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EF_RAM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>LPTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PCA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PCNT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PORTB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PORTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>VC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>VC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hc32l13x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Print_Int
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_2
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5a]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>RMP_Disable_Int</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rmp_platform_cm0_asm.o(ARCH))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Low_Level_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Set
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Post
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Pend
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Crt
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init
</UL>

<P><STRONG><a name="[4a]"></a>RMP_Enable_Int</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rmp_platform_cm0_asm.o(ARCH))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Plat_Hook
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
</UL>

<P><STRONG><a name="[5b]"></a>RMP_Mask_Int</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rmp_platform_cm0_asm.o(ARCH), UNUSED)

<P><STRONG><a name="[4d]"></a>RMP_MSB_Get</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rmp_platform_cm0_asm.o(ARCH))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Get_High_Rdy
</UL>

<P><STRONG><a name="[49]"></a>_RMP_Yield</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rmp_platform_cm0_asm.o(ARCH))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Tick_Handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Yield
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
</UL>

<P><STRONG><a name="[52]"></a>_RMP_Start</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rmp_platform_cm0_asm.o(ARCH))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rmp_platform_cm0_asm.o(ARCH))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = PendSV_Handler &rArr; _RMP_Get_High_Rdy
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Get_High_Rdy
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Save_Ctx
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Load_Ctx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rmp_platform_cm0_asm.o(ARCH))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = SysTick_Handler &rArr; _RMP_Tick_Handler &rArr; _RMP_Set_Rdy
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Tick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>Func_1</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, rmp_test.o(i.Func_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Func_1 &rArr; RMP_Thd_Snd &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Yield
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Set
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Post
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rmp_test.o(i.RMP_Init_Hook)
</UL>
<P><STRONG><a name="[2b]"></a>Func_2</STRONG> (Thumb, 346 bytes, Stack size 8 bytes, rmp_test.o(i.Func_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = Func_2 &rArr; RMP_Print_Int &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Yield
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Set
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Pend
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Print_String
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Print_Int
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rmp_test.o(i.RMP_Init_Hook)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, interrupts_hc32l13x.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>RMP_Clear</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rmp_kernel.o(i.RMP_Clear))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init_Hook
</UL>

<P><STRONG><a name="[2c]"></a>RMP_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rmp_kernel.o(i.RMP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = RMP_Init &rArr; RMP_Init_Hook &rArr; RMP_Thd_Crt &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Plat_Hook
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init_Idle
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init_Hook
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Disable_Int
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rmp_kernel.o(i.main)
</UL>
<P><STRONG><a name="[3f]"></a>RMP_Init_Hook</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, rmp_test.o(i.RMP_Init_Hook))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = RMP_Init_Hook &rArr; RMP_Thd_Crt &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Crt
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init
</UL>

<P><STRONG><a name="[41]"></a>RMP_Init_Idle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rmp_test.o(i.RMP_Init_Idle))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init
</UL>

<P><STRONG><a name="[32]"></a>RMP_Load_Ctx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rmp_kernel.o(i.RMP_Load_Ctx))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[3a]"></a>RMP_Print_Int</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, rmp_kernel.o(i.RMP_Print_Int))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RMP_Print_Int &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Putchar
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_2
</UL>

<P><STRONG><a name="[38]"></a>RMP_Print_String</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, rmp_kernel.o(i.RMP_Print_String))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RMP_Print_String
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_2
</UL>

<P><STRONG><a name="[45]"></a>RMP_Putchar</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rmp_platform_cmx.o(i.RMP_Putchar))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Print_String
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Print_Int
</UL>

<P><STRONG><a name="[30]"></a>RMP_Save_Ctx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rmp_kernel.o(i.RMP_Save_Ctx))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[43]"></a>RMP_Sem_Crt</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, rmp_kernel.o(i.RMP_Sem_Crt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = RMP_Sem_Crt &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Disable_Int
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init_Hook
</UL>

<P><STRONG><a name="[3c]"></a>RMP_Sem_Pend</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, rmp_kernel.o(i.RMP_Sem_Pend))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = RMP_Sem_Pend &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Disable_Int
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Clr_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_2
</UL>

<P><STRONG><a name="[37]"></a>RMP_Sem_Post</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, rmp_kernel.o(i.RMP_Sem_Post))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = RMP_Sem_Post &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Disable_Int
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_1
</UL>

<P><STRONG><a name="[44]"></a>RMP_Thd_Crt</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, rmp_kernel.o(i.RMP_Thd_Crt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = RMP_Thd_Crt &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Stack_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Disable_Int
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init_Hook
</UL>

<P><STRONG><a name="[3b]"></a>RMP_Thd_Rcv</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, rmp_kernel.o(i.RMP_Thd_Rcv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = RMP_Thd_Rcv &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Disable_Int
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Clr_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_2
</UL>

<P><STRONG><a name="[35]"></a>RMP_Thd_Set</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, rmp_kernel.o(i.RMP_Thd_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = RMP_Thd_Set &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Disable_Int
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Clr_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_2
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_1
</UL>

<P><STRONG><a name="[36]"></a>RMP_Thd_Snd</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, rmp_kernel.o(i.RMP_Thd_Snd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = RMP_Thd_Snd &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Disable_Int
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Clr_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_1
</UL>

<P><STRONG><a name="[40]"></a>RMP_Unlock_Sched</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rmp_kernel.o(i.RMP_Unlock_Sched))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Yield
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Enable_Int
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Set
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Post
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Pend
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Crt
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init
</UL>

<P><STRONG><a name="[34]"></a>RMP_Yield</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rmp_kernel.o(i.RMP_Yield))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = RMP_Yield
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Yield
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_2
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Func_1
</UL>

<P><STRONG><a name="[50]"></a>Sysctrl_ClkSourceEnable</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, sysctrl.o(i.Sysctrl_ClkSourceEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Sysctrl_ClkSourceEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Low_Level_Init
</UL>

<P><STRONG><a name="[51]"></a>Sysctrl_SetRCHTrim</STRONG> (Thumb, 136 bytes, Stack size 4 bytes, sysctrl.o(i.Sysctrl_SetRCHTrim))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Sysctrl_SetRCHTrim
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Low_Level_Init
</UL>

<P><STRONG><a name="[4f]"></a>Sysctrl_SetRCLTrim</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, sysctrl.o(i.Sysctrl_SetRCLTrim))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Low_Level_Init
</UL>

<P><STRONG><a name="[4b]"></a>Sysctrl_SysClkSwitch</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sysctrl.o(i.Sysctrl_SysClkSwitch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Sysctrl_SysClkSwitch
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Low_Level_Init
</UL>

<P><STRONG><a name="[4c]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_hc32l13x.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SysClkSwitch
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Low_Level_Init
</UL>

<P><STRONG><a name="[28]"></a>SystemInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_hc32l13x.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_hc32l13x.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>_RMP_Get_High_Rdy</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, rmp_kernel.o(i._RMP_Get_High_Rdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _RMP_Get_High_Rdy
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_MSB_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[4e]"></a>_RMP_Low_Level_Init</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, rmp_platform_cmx.o(i._RMP_Low_Level_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _RMP_Low_Level_Init &rArr; Sysctrl_SysClkSwitch
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SysClkSwitch
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetRCLTrim
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_SetRCHTrim
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sysctrl_ClkSourceEnable
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Disable_Int
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>_RMP_Plat_Hook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rmp_platform_cmx.o(i._RMP_Plat_Hook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = _RMP_Plat_Hook
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Enable_Int
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init
</UL>

<P><STRONG><a name="[48]"></a>_RMP_Stack_Init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rmp_platform_cmx.o(i._RMP_Stack_Init))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
</UL>

<P><STRONG><a name="[33]"></a>_RMP_Tick_Handler</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, rmp_kernel.o(i._RMP_Tick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = _RMP_Tick_Handler &rArr; _RMP_Set_Rdy
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Yield
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[5d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[5e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[27]"></a>main</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, rmp_kernel.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = main &rArr; _RMP_Low_Level_Init &rArr; Sysctrl_SysClkSwitch
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Start
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Low_Level_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[46]"></a>_RMP_Clr_Rdy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, rmp_kernel.o(i._RMP_Clr_Rdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RMP_Clr_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Set
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Pend
</UL>

<P><STRONG><a name="[47]"></a>_RMP_Set_Rdy</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, rmp_kernel.o(i._RMP_Set_Rdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RMP_Set_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Tick_Handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Set
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Sem_Post
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
