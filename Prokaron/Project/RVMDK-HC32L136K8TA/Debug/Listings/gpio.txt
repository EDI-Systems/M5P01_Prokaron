; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\output\gpio.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\gpio.d --cpu=Cortex-M0+ --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\HC32L13X_DDL_V1.0\driver\inc -I..\..\..\M0P0_Library\HC32L13X_DDL_V1.0\mcu\common -I..\..\..\M0P0_Library\HC32L13X_DDL_V1.0\driver\CMSIS\Include -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-HC32L136K8TA\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\HDSC\HC32L13X\1.0.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ --enum_is_int --signed_chars --omf_browse=.\debug\output\gpio.crf ..\..\..\M0P0_Library\HC32L13X_DDL_V1.0\driver\src\gpio.c]
                          THUMB

                          AREA ||i.Gpio_ClearIrq||, CODE, READONLY, ALIGN=2

                  Gpio_ClearIrq PROC
;;;418     ******************************************************************************/
;;;419    en_result_t Gpio_ClearIrq(en_gpio_port_t enPort, en_gpio_pin_t enPin)
000000  4a04              LDR      r2,|L1.20|
;;;420    {
;;;421        setBit((uint32_t)&M0P_GPIO->PA_ICLR + enPort, enPin, FALSE);
000002  1880              ADDS     r0,r0,r2
000004  6902              LDR      r2,[r0,#0x10]
000006  2301              MOVS     r3,#1
000008  408b              LSLS     r3,r3,r1
00000a  439a              BICS     r2,r2,r3
00000c  6102              STR      r2,[r0,#0x10]
;;;422    
;;;423        return Ok;
00000e  2000              MOVS     r0,#0
;;;424    }
000010  4770              BX       lr
;;;425    
                          ENDP

000012  0000              DCW      0x0000
                  |L1.20|
                          DCD      0x40020e00

                          AREA ||i.Gpio_ClrIO||, CODE, READONLY, ALIGN=2

                  Gpio_ClrIO PROC
;;;270     ******************************************************************************/
;;;271    en_result_t Gpio_ClrIO(en_gpio_port_t enPort, en_gpio_pin_t enPin)
000000  4a04              LDR      r2,|L2.20|
;;;272    {
;;;273        setBit(((uint32_t)&M0P_GPIO->PABCLR + enPort), enPin, TRUE);
000002  1880              ADDS     r0,r0,r2
000004  6942              LDR      r2,[r0,#0x14]
000006  2301              MOVS     r3,#1
000008  408b              LSLS     r3,r3,r1
00000a  431a              ORRS     r2,r2,r3
00000c  6142              STR      r2,[r0,#0x14]
;;;274        
;;;275        return Ok;
00000e  2000              MOVS     r0,#0
;;;276    }
000010  4770              BX       lr
;;;277    
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      0x40020d00

                          AREA ||i.Gpio_ClrPort||, CODE, READONLY, ALIGN=2

                  Gpio_ClrPort PROC
;;;253     ******************************************************************************/
;;;254    en_result_t Gpio_ClrPort(en_gpio_port_t enPort, uint16_t u16ValMsk)
000000  4a02              LDR      r2,|L3.12|
;;;255    {
;;;256        *((uint16_t*)(((uint32_t)&(M0P_GPIO->PABCLR)) + enPort)) = u16ValMsk;
000002  1880              ADDS     r0,r0,r2
000004  8281              STRH     r1,[r0,#0x14]
;;;257        
;;;258        return Ok;
000006  2000              MOVS     r0,#0
;;;259    }
000008  4770              BX       lr
;;;260    
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x40020d00

                          AREA ||i.Gpio_DisableIrq||, CODE, READONLY, ALIGN=2

                  Gpio_DisableIrq PROC
;;;387     ******************************************************************************/
;;;388    en_result_t Gpio_DisableIrq(en_gpio_port_t enPort, en_gpio_pin_t enPin, en_gpio_irqtype_t enType)
000000  b430              PUSH     {r4,r5}
000002  07d4              LSLS     r4,r2,#31
000004  4d0d              LDR      r5,|L4.60|
000006  2301              MOVS     r3,#1
000008  408b              LSLS     r3,r3,r1
00000a  1940              ADDS     r0,r0,r5
00000c  2c00              CMP      r4,#0
;;;389    {
00000e  d002              BEQ      |L4.22|
000010  6b01              LDR      r1,[r0,#0x30]
000012  4399              BICS     r1,r1,r3
000014  6301              STR      r1,[r0,#0x30]
                  |L4.22|
000016  0791              LSLS     r1,r2,#30
000018  d502              BPL      |L4.32|
00001a  6b41              LDR      r1,[r0,#0x34]
00001c  4399              BICS     r1,r1,r3
00001e  6341              STR      r1,[r0,#0x34]
                  |L4.32|
000020  0751              LSLS     r1,r2,#29
000022  d502              BPL      |L4.42|
000024  6b81              LDR      r1,[r0,#0x38]
000026  4399              BICS     r1,r1,r3
000028  6381              STR      r1,[r0,#0x38]
                  |L4.42|
00002a  0711              LSLS     r1,r2,#28
00002c  d502              BPL      |L4.52|
00002e  6bc1              LDR      r1,[r0,#0x3c]
000030  4399              BICS     r1,r1,r3
000032  63c1              STR      r1,[r0,#0x3c]
                  |L4.52|
;;;390        _GpioEnableIrq(enPort, enPin, enType, FALSE);
;;;391        
;;;392        return Ok;
;;;393    }
000034  bc30              POP      {r4,r5}
000036  2000              MOVS     r0,#0                 ;392
000038  4770              BX       lr
;;;394    
                          ENDP

00003a  0000              DCW      0x0000
                  |L4.60|
                          DCD      0x40020d00

                          AREA ||i.Gpio_EnableIrq||, CODE, READONLY, ALIGN=2

                  Gpio_EnableIrq PROC
;;;370     ******************************************************************************/
;;;371    en_result_t Gpio_EnableIrq(en_gpio_port_t enPort, en_gpio_pin_t enPin, en_gpio_irqtype_t enType)
000000  b410              PUSH     {r4}
000002  07d4              LSLS     r4,r2,#31
;;;372    {
;;;373        _GpioEnableIrq(enPort, enPin, enType, TRUE);
000004  2301              MOVS     r3,#1
000006  408b              LSLS     r3,r3,r1
000008  490c              LDR      r1,|L5.60|
00000a  1840              ADDS     r0,r0,r1
00000c  2c00              CMP      r4,#0
00000e  d002              BEQ      |L5.22|
000010  6b01              LDR      r1,[r0,#0x30]         ;372
000012  4319              ORRS     r1,r1,r3              ;372
000014  6301              STR      r1,[r0,#0x30]         ;372
                  |L5.22|
000016  0791              LSLS     r1,r2,#30             ;372
000018  d502              BPL      |L5.32|
00001a  6b41              LDR      r1,[r0,#0x34]         ;372
00001c  4319              ORRS     r1,r1,r3              ;372
00001e  6341              STR      r1,[r0,#0x34]         ;372
                  |L5.32|
000020  0751              LSLS     r1,r2,#29             ;372
000022  d502              BPL      |L5.42|
000024  6b81              LDR      r1,[r0,#0x38]         ;372
000026  4319              ORRS     r1,r1,r3              ;372
000028  6381              STR      r1,[r0,#0x38]         ;372
                  |L5.42|
00002a  0711              LSLS     r1,r2,#28             ;372
00002c  d502              BPL      |L5.52|
00002e  6bc1              LDR      r1,[r0,#0x3c]         ;372
000030  4319              ORRS     r1,r1,r3              ;372
000032  63c1              STR      r1,[r0,#0x3c]         ;372
                  |L5.52|
;;;374        
;;;375        return Ok;
;;;376    }
000034  bc10              POP      {r4}
000036  2000              MOVS     r0,#0                 ;375
000038  4770              BX       lr
;;;377    
                          ENDP

00003a  0000              DCW      0x0000
                  |L5.60|
                          DCD      0x40020d00

                          AREA ||i.Gpio_GetInputData||, CODE, READONLY, ALIGN=2

                  Gpio_GetInputData PROC
;;;175     ******************************************************************************/
;;;176    uint16_t    Gpio_GetInputData(en_gpio_port_t enPort)
000000  4902              LDR      r1,|L6.12|
;;;177    {
;;;178        return (uint16_t)(*((uint32_t *)((uint32_t)&M0P_GPIO->PAIN + enPort))); 
000002  1840              ADDS     r0,r0,r1
000004  8880              LDRH     r0,[r0,#4]
000006  b280              UXTH     r0,r0
;;;179    }
000008  4770              BX       lr
;;;180    
                          ENDP

00000a  0000              DCW      0x0000
                  |L6.12|
                          DCD      0x40020d00

                          AREA ||i.Gpio_GetInputIO||, CODE, READONLY, ALIGN=2

                  Gpio_GetInputIO PROC
;;;162     ******************************************************************************/
;;;163    boolean_t Gpio_GetInputIO(en_gpio_port_t enPort, en_gpio_pin_t enPin)
000000  4a03              LDR      r2,|L7.16|
;;;164    {
;;;165        return getBit(((uint32_t)&M0P_GPIO->PAIN + enPort), enPin);
000002  1880              ADDS     r0,r0,r2
000004  6840              LDR      r0,[r0,#4]
000006  40c8              LSRS     r0,r0,r1
000008  07c0              LSLS     r0,r0,#31
00000a  0fc0              LSRS     r0,r0,#31
;;;166    }
00000c  4770              BX       lr
;;;167    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      0x40020d00

                          AREA ||i.Gpio_GetIrqStatus||, CODE, READONLY, ALIGN=2

                  Gpio_GetIrqStatus PROC
;;;404     ******************************************************************************/
;;;405    boolean_t Gpio_GetIrqStatus(en_gpio_port_t enPort, en_gpio_pin_t enPin)
000000  4a03              LDR      r2,|L8.16|
;;;406    {
;;;407        return getBit((uint32_t)&M0P_GPIO->PA_STAT + enPort, enPin);
000002  1880              ADDS     r0,r0,r2
000004  6800              LDR      r0,[r0,#0]
000006  40c8              LSRS     r0,r0,r1
000008  07c0              LSLS     r0,r0,#31
00000a  0fc0              LSRS     r0,r0,#31
;;;408    }
00000c  4770              BX       lr
;;;409    
                          ENDP

00000e  0000              DCW      0x0000
                  |L8.16|
                          DCD      0x40020e00

                          AREA ||i.Gpio_Init||, CODE, READONLY, ALIGN=2

                  Gpio_Init PROC
;;;97      ******************************************************************************/
;;;98     en_result_t Gpio_Init(en_gpio_port_t enPort, en_gpio_pin_t enPin, stc_gpio_config_t  *pstcGpioCfg)
000000  b430              PUSH     {r4,r5}
;;;99     {
;;;100        //配置为默认值,GPIO功能
;;;101        *((uint32_t*)(((uint32_t)(&(M0P_GPIO->PA00_SEL)) + enPort) + (((uint32_t)enPin)<<2))) = GpioAf0;
000002  008c              LSLS     r4,r1,#2
000004  4d1d              LDR      r5,|L9.124|
000006  1824              ADDS     r4,r4,r0
000008  1964              ADDS     r4,r4,r5
00000a  2300              MOVS     r3,#0
;;;102        
;;;103        //方向配置
;;;104        if(GpioDirIn == pstcGpioCfg->enDir)
00000c  6023              STR      r3,[r4,#0]
00000e  2301              MOVS     r3,#1
;;;105        {
;;;106            setBit(((uint32_t)&M0P_GPIO->PADIR + enPort), enPin, TRUE);
000010  4d1b              LDR      r5,|L9.128|
000012  408b              LSLS     r3,r3,r1
000014  1940              ADDS     r0,r0,r5
000016  6814              LDR      r4,[r2,#0]            ;104
;;;107        }
;;;108        else
;;;109        {
;;;110            setBit(((uint32_t)&M0P_GPIO->PADIR + enPort), enPin, FALSE);
000018  6801              LDR      r1,[r0,#0]
00001a  2c01              CMP      r4,#1                 ;104
00001c  d01b              BEQ      |L9.86|
00001e  4399              BICS     r1,r1,r3
                  |L9.32|
000020  6001              STR      r1,[r0,#0]
;;;111        }
;;;112        
;;;113        //驱动能力配置
;;;114        if(GpioDrvH == pstcGpioCfg->enDrv)
000022  6851              LDR      r1,[r2,#4]
000024  2900              CMP      r1,#0
;;;115        {
;;;116            setBit(((uint32_t)&M0P_GPIO->PADR + enPort), enPin, FALSE);
;;;117        }
;;;118        else
;;;119        {
;;;120            setBit(((uint32_t)&M0P_GPIO->PADR + enPort), enPin, TRUE);
000026  69c1              LDR      r1,[r0,#0x1c]
000028  d017              BEQ      |L9.90|
00002a  4319              ORRS     r1,r1,r3
                  |L9.44|
00002c  61c1              STR      r1,[r0,#0x1c]
;;;121        }
;;;122        
;;;123        //上拉下拉配置
;;;124        if(GpioPu == pstcGpioCfg->enPuPd)
00002e  6891              LDR      r1,[r2,#8]
000030  2901              CMP      r1,#1
000032  d014              BEQ      |L9.94|
;;;125        {
;;;126            setBit(((uint32_t)&M0P_GPIO->PAPU + enPort), enPin, TRUE);
;;;127            setBit(((uint32_t)&M0P_GPIO->PAPD + enPort), enPin, FALSE);
;;;128        }
;;;129        else if(GpioPd == pstcGpioCfg->enPuPd)
000034  2902              CMP      r1,#2
;;;130        {
;;;131            setBit(((uint32_t)&M0P_GPIO->PAPU + enPort), enPin, FALSE);
;;;132            setBit(((uint32_t)&M0P_GPIO->PAPD + enPort), enPin, TRUE);
;;;133        }
;;;134        else
;;;135        {
;;;136            setBit(((uint32_t)&M0P_GPIO->PAPU + enPort), enPin, FALSE);
000036  6a01              LDR      r1,[r0,#0x20]
000038  d018              BEQ      |L9.108|
00003a  4399              BICS     r1,r1,r3
00003c  6201              STR      r1,[r0,#0x20]
;;;137            setBit(((uint32_t)&M0P_GPIO->PAPD + enPort), enPin, FALSE);
00003e  6a41              LDR      r1,[r0,#0x24]
000040  4399              BICS     r1,r1,r3
                  |L9.66|
000042  6241              STR      r1,[r0,#0x24]         ;132
                  |L9.68|
;;;138        }
;;;139        
;;;140        //开漏输出功能
;;;141        if(GpioOdDisable == pstcGpioCfg->enOD)
000044  68d1              LDR      r1,[r2,#0xc]
000046  2900              CMP      r1,#0
;;;142        {
;;;143            setBit(((uint32_t)&M0P_GPIO->PAOD + enPort), enPin, FALSE);
;;;144        }
;;;145        else
;;;146        {
;;;147            setBit(((uint32_t)&M0P_GPIO->PAOD + enPort), enPin, TRUE);
000048  6ac1              LDR      r1,[r0,#0x2c]
00004a  d014              BEQ      |L9.118|
00004c  4319              ORRS     r1,r1,r3
                  |L9.78|
00004e  62c1              STR      r1,[r0,#0x2c]
;;;148        }
;;;149        
;;;150    
;;;151        return Ok;
;;;152    }
000050  bc30              POP      {r4,r5}
000052  2000              MOVS     r0,#0                 ;151
000054  4770              BX       lr
                  |L9.86|
000056  4319              ORRS     r1,r1,r3              ;106
000058  e7e2              B        |L9.32|
                  |L9.90|
00005a  4399              BICS     r1,r1,r3              ;116
00005c  e7e6              B        |L9.44|
                  |L9.94|
00005e  6a01              LDR      r1,[r0,#0x20]         ;126
000060  4319              ORRS     r1,r1,r3              ;126
000062  6201              STR      r1,[r0,#0x20]         ;126
000064  6a41              LDR      r1,[r0,#0x24]         ;127
000066  4399              BICS     r1,r1,r3              ;127
000068  6241              STR      r1,[r0,#0x24]         ;127
00006a  e7eb              B        |L9.68|
                  |L9.108|
00006c  4399              BICS     r1,r1,r3              ;131
00006e  6201              STR      r1,[r0,#0x20]         ;131
000070  6a41              LDR      r1,[r0,#0x24]         ;132
000072  4319              ORRS     r1,r1,r3              ;132
000074  e7e5              B        |L9.66|
                  |L9.118|
000076  4399              BICS     r1,r1,r3              ;143
000078  e7e9              B        |L9.78|
;;;153    
                          ENDP

00007a  0000              DCW      0x0000
                  |L9.124|
                          DCD      0x40020c00
                  |L9.128|
                          DCD      0x40020d00

                          AREA ||i.Gpio_ReadOutputIO||, CODE, READONLY, ALIGN=2

                  Gpio_ReadOutputIO PROC
;;;207     ******************************************************************************/
;;;208    boolean_t   Gpio_ReadOutputIO(en_gpio_port_t enPort, en_gpio_pin_t enPin)
000000  4a03              LDR      r2,|L10.16|
;;;209    {
;;;210        return getBit(((uint32_t)&M0P_GPIO->PAOUT + enPort), enPin);
000002  1880              ADDS     r0,r0,r2
000004  6880              LDR      r0,[r0,#8]
000006  40c8              LSRS     r0,r0,r1
000008  07c0              LSLS     r0,r0,#31
00000a  0fc0              LSRS     r0,r0,#31
;;;211    }
00000c  4770              BX       lr
;;;212    
                          ENDP

00000e  0000              DCW      0x0000
                  |L10.16|
                          DCD      0x40020d00

                          AREA ||i.Gpio_SetAfMode||, CODE, READONLY, ALIGN=2

                  Gpio_SetAfMode PROC
;;;323     ******************************************************************************/
;;;324    en_result_t Gpio_SetAfMode(en_gpio_port_t enPort, en_gpio_pin_t enPin, en_gpio_af_t enAf)
000000  0089              LSLS     r1,r1,#2
;;;325    {
;;;326        *((uint32_t*)(((uint32_t)(&(M0P_GPIO->PA00_SEL)) + enPort) + (((uint32_t)enPin)<<2))) = enAf;
000002  1808              ADDS     r0,r1,r0
000004  4902              LDR      r1,|L11.16|
000006  1840              ADDS     r0,r0,r1
;;;327        
;;;328        return Ok;
000008  6002              STR      r2,[r0,#0]
00000a  2000              MOVS     r0,#0
;;;329    }
00000c  4770              BX       lr
;;;330    
                          ENDP

00000e  0000              DCW      0x0000
                  |L11.16|
                          DCD      0x40020c00

                          AREA ||i.Gpio_SetAnalogMode||, CODE, READONLY, ALIGN=2

                  Gpio_SetAnalogMode PROC
;;;306     ******************************************************************************/
;;;307    en_result_t Gpio_SetAnalogMode(en_gpio_port_t enPort, en_gpio_pin_t enPin)
000000  4a04              LDR      r2,|L12.20|
;;;308    {
;;;309        setBit((uint32_t)&M0P_GPIO->PAADS + enPort, enPin, TRUE);
000002  1880              ADDS     r0,r0,r2
000004  68c2              LDR      r2,[r0,#0xc]
000006  2301              MOVS     r3,#1
000008  408b              LSLS     r3,r3,r1
00000a  431a              ORRS     r2,r2,r3
00000c  60c2              STR      r2,[r0,#0xc]
;;;310    
;;;311        return Ok;
00000e  2000              MOVS     r0,#0
;;;312    }
000010  4770              BX       lr
;;;313    
                          ENDP

000012  0000              DCW      0x0000
                  |L12.20|
                          DCD      0x40020d00

                          AREA ||i.Gpio_SetClrPort||, CODE, READONLY, ALIGN=2

                  Gpio_SetClrPort PROC
;;;289     ******************************************************************************/
;;;290    en_result_t Gpio_SetClrPort(en_gpio_port_t enPort, uint32_t u32ValMsk)
000000  4a02              LDR      r2,|L13.12|
;;;291    {
;;;292        *((uint32_t*)(((uint32_t)&(M0P_GPIO->PABSETCLR)) + enPort)) = u32ValMsk;
000002  1880              ADDS     r0,r0,r2
;;;293        
;;;294        return Ok;
000004  6181              STR      r1,[r0,#0x18]
000006  2000              MOVS     r0,#0
;;;295    }
000008  4770              BX       lr
;;;296    
                          ENDP

00000a  0000              DCW      0x0000
                  |L13.12|
                          DCD      0x40020d00

                          AREA ||i.Gpio_SetIO||, CODE, READONLY, ALIGN=2

                  Gpio_SetIO PROC
;;;237     ******************************************************************************/
;;;238    en_result_t Gpio_SetIO(en_gpio_port_t enPort, en_gpio_pin_t enPin)
000000  4a04              LDR      r2,|L14.20|
;;;239    {
;;;240        setBit(((uint32_t)&M0P_GPIO->PABSET + enPort), enPin, TRUE);
000002  1880              ADDS     r0,r0,r2
000004  6902              LDR      r2,[r0,#0x10]
000006  2301              MOVS     r3,#1
000008  408b              LSLS     r3,r3,r1
00000a  431a              ORRS     r2,r2,r3
00000c  6102              STR      r2,[r0,#0x10]
;;;241        
;;;242        return Ok;
00000e  2000              MOVS     r0,#0
;;;243    }
000010  4770              BX       lr
;;;244    
                          ENDP

000012  0000              DCW      0x0000
                  |L14.20|
                          DCD      0x40020d00

                          AREA ||i.Gpio_SetPort||, CODE, READONLY, ALIGN=2

                  Gpio_SetPort PROC
;;;221     ******************************************************************************/
;;;222    en_result_t Gpio_SetPort(en_gpio_port_t enPort, uint16_t u16ValMsk)
000000  4a02              LDR      r2,|L15.12|
;;;223    {
;;;224        *((uint16_t*)(((uint32_t)&(M0P_GPIO->PABSET)) + enPort)) = u16ValMsk;
000002  1880              ADDS     r0,r0,r2
000004  8201              STRH     r1,[r0,#0x10]
;;;225        return Ok;
000006  2000              MOVS     r0,#0
;;;226    }
000008  4770              BX       lr
;;;227    
                          ENDP

00000a  0000              DCW      0x0000
                  |L15.12|
                          DCD      0x40020d00

                          AREA ||i.Gpio_SfExtClkConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfExtClkConfig PROC
;;;497     ******************************************************************************/
;;;498    en_result_t Gpio_SfExtClkConfig(en_gpio_sf_ssn_extclk_t enExtClk)
000000  4904              LDR      r1,|L16.20|
;;;499    {
;;;500        M0P_GPIO->CTRL1_f.EXT_CLK_SEL  = enExtClk;
000002  684a              LDR      r2,[r1,#4]
000004  0700              LSLS     r0,r0,#28
000006  0912              LSRS     r2,r2,#4
000008  0112              LSLS     r2,r2,#4
00000a  0f00              LSRS     r0,r0,#28
00000c  4302              ORRS     r2,r2,r0
00000e  604a              STR      r2,[r1,#4]
;;;501        
;;;502        return Ok;
000010  2000              MOVS     r0,#0
;;;503    }
000012  4770              BX       lr
;;;504    
                          ENDP

                  |L16.20|
                          DCD      0x40020f00

                          AREA ||i.Gpio_SfHClkOutputConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfHClkOutputConfig PROC
;;;464     ******************************************************************************/
;;;465    en_result_t Gpio_SfHClkOutputConfig(en_gpio_sf_hclkout_g_t enGate, en_gpio_sf_hclkout_div_t enDiv)
000000  b410              PUSH     {r4}
;;;466    {
;;;467        M0P_GPIO->CTRL1_f.HCLK_EN  = enGate;
000002  4a0a              LDR      r2,|L17.44|
000004  6853              LDR      r3,[r2,#4]
000006  2401              MOVS     r4,#1
000008  0364              LSLS     r4,r4,#13
00000a  07c0              LSLS     r0,r0,#31
00000c  43a3              BICS     r3,r3,r4
00000e  0c80              LSRS     r0,r0,#18
000010  4303              ORRS     r3,r3,r0
000012  6053              STR      r3,[r2,#4]
;;;468        M0P_GPIO->CTRL1_f.HCLK_SEL = enDiv;
000014  6850              LDR      r0,[r2,#4]
000016  2303              MOVS     r3,#3
000018  029b              LSLS     r3,r3,#10
00001a  0789              LSLS     r1,r1,#30
00001c  4398              BICS     r0,r0,r3
00001e  0d09              LSRS     r1,r1,#20
000020  4308              ORRS     r0,r0,r1
000022  6050              STR      r0,[r2,#4]
;;;469        
;;;470        return Ok;
;;;471    }
000024  bc10              POP      {r4}
000026  2000              MOVS     r0,#0                 ;470
000028  4770              BX       lr
;;;472    
                          ENDP

00002a  0000              DCW      0x0000
                  |L17.44|
                          DCD      0x40020f00

                          AREA ||i.Gpio_SfIrPolConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfIrPolConfig PROC
;;;448     ******************************************************************************/
;;;449    en_result_t Gpio_SfIrPolConfig(en_gpio_sf_irpol_t enIrPolMode)
000000  4905              LDR      r1,|L18.24|
;;;450    {
;;;451        M0P_GPIO->CTRL1_f.IR_POL = enIrPolMode;
000002  684a              LDR      r2,[r1,#4]
000004  2301              MOVS     r3,#1
000006  039b              LSLS     r3,r3,#14
000008  07c0              LSLS     r0,r0,#31
00000a  439a              BICS     r2,r2,r3
00000c  0c40              LSRS     r0,r0,#17
00000e  4302              ORRS     r2,r2,r0
000010  604a              STR      r2,[r1,#4]
;;;452        
;;;453        return Ok;
000012  2000              MOVS     r0,#0
;;;454    }
000014  4770              BX       lr
;;;455    
                          ENDP

000016  0000              DCW      0x0000
                  |L18.24|
                          DCD      0x40020f00

                          AREA ||i.Gpio_SfIrqModeConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfIrqModeConfig PROC
;;;433     ******************************************************************************/
;;;434    en_result_t Gpio_SfIrqModeConfig(en_gpio_sf_irqmode_t enIrqMode)
000000  4904              LDR      r1,|L19.20|
;;;435    {
;;;436        M0P_GPIO->CTRL0_f.IESEL = enIrqMode;
000002  680a              LDR      r2,[r1,#0]
000004  07c0              LSLS     r0,r0,#31
000006  0852              LSRS     r2,r2,#1
000008  0052              LSLS     r2,r2,#1
00000a  0fc0              LSRS     r0,r0,#31
00000c  4302              ORRS     r2,r2,r0
00000e  600a              STR      r2,[r1,#0]
;;;437        
;;;438        return Ok;
000010  2000              MOVS     r0,#0
;;;439    }
000012  4770              BX       lr
;;;440    
                          ENDP

                  |L19.20|
                          DCD      0x40020f00

                          AREA ||i.Gpio_SfPClkOutputConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfPClkOutputConfig PROC
;;;481     ******************************************************************************/
;;;482    en_result_t Gpio_SfPClkOutputConfig(en_gpio_sf_pclkout_g_t enGate, en_gpio_sf_pclkout_div_t enDiv)
000000  b410              PUSH     {r4}
;;;483    {
;;;484        M0P_GPIO->CTRL1_f.PCLK_EN  = enGate;
000002  4a09              LDR      r2,|L20.40|
000004  6853              LDR      r3,[r2,#4]
000006  1494              ASRS     r4,r2,#18
000008  07c0              LSLS     r0,r0,#31
00000a  43a3              BICS     r3,r3,r4
00000c  0cc0              LSRS     r0,r0,#19
00000e  4303              ORRS     r3,r3,r0
000010  6053              STR      r3,[r2,#4]
;;;485        M0P_GPIO->CTRL1_f.PCLK_SEL = enDiv;
000012  6850              LDR      r0,[r2,#4]
000014  2303              MOVS     r3,#3
000016  021b              LSLS     r3,r3,#8
000018  0789              LSLS     r1,r1,#30
00001a  4398              BICS     r0,r0,r3
00001c  0d89              LSRS     r1,r1,#22
00001e  4308              ORRS     r0,r0,r1
000020  6050              STR      r0,[r2,#4]
;;;486        
;;;487        return Ok;
;;;488    }
000022  bc10              POP      {r4}
000024  2000              MOVS     r0,#0                 ;487
000026  4770              BX       lr
;;;489    
                          ENDP

                  |L20.40|
                          DCD      0x40020f00

                          AREA ||i.Gpio_SfPcaConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfPcaConfig PROC
;;;589     ******************************************************************************/
;;;590    en_result_t Gpio_SfPcaConfig(en_gpio_sf_pca_t enPca, en_gpio_sf_t enSf)
000000  4a0b              LDR      r2,|L21.48|
;;;591    {
;;;592        if(GpioSfPcaCH0 == enPca)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L21.12|
;;;593        {
;;;594            M0P_GPIO->PCAS_f.PCA_CH0 = enSf;
;;;595        }
;;;596        
;;;597        if(GpioSfPcaECI == enPca)
000006  2803              CMP      r0,#3
000008  d008              BEQ      |L21.28|
00000a  e00e              B        |L21.42|
                  |L21.12|
00000c  6990              LDR      r0,[r2,#0x18]         ;594
00000e  0749              LSLS     r1,r1,#29             ;594
000010  08c0              LSRS     r0,r0,#3              ;594
000012  00c0              LSLS     r0,r0,#3              ;594
000014  0f49              LSRS     r1,r1,#29             ;594
000016  4308              ORRS     r0,r0,r1              ;594
000018  6190              STR      r0,[r2,#0x18]         ;594
00001a  e006              B        |L21.42|
                  |L21.28|
;;;598        {
;;;599            M0P_GPIO->PCAS_f.PCA_ECI = enSf;
00001c  6990              LDR      r0,[r2,#0x18]
00001e  2338              MOVS     r3,#0x38
000020  0749              LSLS     r1,r1,#29
000022  4398              BICS     r0,r0,r3
000024  0e89              LSRS     r1,r1,#26
000026  4308              ORRS     r0,r0,r1
000028  6190              STR      r0,[r2,#0x18]
                  |L21.42|
;;;600        }
;;;601        
;;;602        return Ok;
00002a  2000              MOVS     r0,#0
;;;603    }
00002c  4770              BX       lr
;;;604    
                          ENDP

00002e  0000              DCW      0x0000
                  |L21.48|
                          DCD      0x40020f00

                          AREA ||i.Gpio_SfSsnConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfSsnConfig PROC
;;;513     ******************************************************************************/
;;;514    en_result_t Gpio_SfSsnConfig(en_gpio_sf_ssnspi_t enSpi, en_gpio_sf_ssn_extclk_t enSsn)
000000  4a0b              LDR      r2,|L22.48|
;;;515    {
;;;516        //SPI0
;;;517        if(enSpi == GpioSpi0)
000002  2800              CMP      r0,#0
000004  d002              BEQ      |L22.12|
;;;518        {
;;;519            M0P_GPIO->CTRL1_f.SSN0_SEL = enSsn;
;;;520        }
;;;521        //SPI1
;;;522        if(enSpi == GpioSpi1)
000006  2801              CMP      r0,#1
000008  d008              BEQ      |L22.28|
00000a  e00e              B        |L22.42|
                  |L22.12|
00000c  6850              LDR      r0,[r2,#4]            ;519
00000e  23f0              MOVS     r3,#0xf0              ;519
000010  0709              LSLS     r1,r1,#28             ;519
000012  4398              BICS     r0,r0,r3              ;519
000014  0e09              LSRS     r1,r1,#24             ;519
000016  4308              ORRS     r0,r0,r1              ;519
000018  6050              STR      r0,[r2,#4]            ;519
00001a  e006              B        |L22.42|
                  |L22.28|
;;;523        {
;;;524            M0P_GPIO->CTRL2_f.SSN1_SEL = enSsn;
00001c  6890              LDR      r0,[r2,#8]
00001e  0709              LSLS     r1,r1,#28
000020  0900              LSRS     r0,r0,#4
000022  0100              LSLS     r0,r0,#4
000024  0f09              LSRS     r1,r1,#28
000026  4308              ORRS     r0,r0,r1
000028  6090              STR      r0,[r2,#8]
                  |L22.42|
;;;525        }
;;;526        
;;;527        return Ok;
00002a  2000              MOVS     r0,#0
;;;528    }
00002c  4770              BX       lr
;;;529    
                          ENDP

00002e  0000              DCW      0x0000
                  |L22.48|
                          DCD      0x40020f00

                          AREA ||i.Gpio_SfTimCConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfTimCConfig PROC
;;;572     ******************************************************************************/
;;;573    en_result_t Gpio_SfTimCConfig(en_gpio_sf_tim_c_t enTimC, en_gpio_sf_t enSf)
000000  b410              PUSH     {r4}
;;;574    {
;;;575        M0P_GPIO->TIMCPS &= (uint32_t)(~(0x07u<<enTimC));
000002  4a06              LDR      r2,|L23.28|
000004  6953              LDR      r3,[r2,#0x14]
000006  2407              MOVS     r4,#7
000008  4084              LSLS     r4,r4,r0
00000a  43a3              BICS     r3,r3,r4
00000c  6153              STR      r3,[r2,#0x14]
;;;576        M0P_GPIO->TIMCPS |= (uint32_t)(enSf<<enTimC);
00000e  6953              LDR      r3,[r2,#0x14]
000010  4081              LSLS     r1,r1,r0
000012  430b              ORRS     r3,r3,r1
000014  6153              STR      r3,[r2,#0x14]
;;;577        
;;;578        return Ok;
;;;579    }
000016  bc10              POP      {r4}
000018  2000              MOVS     r0,#0                 ;578
00001a  4770              BX       lr
;;;580    
                          ENDP

                  |L23.28|
                          DCD      0x40020f00

                          AREA ||i.Gpio_SfTimEConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfTimEConfig PROC
;;;555     ******************************************************************************/
;;;556    en_result_t Gpio_SfTimEConfig(en_gpio_sf_tim_e_t enTimE, en_gpio_sf_t enSf)
000000  b410              PUSH     {r4}
;;;557    {
;;;558        M0P_GPIO->TIMES &= (uint32_t)(~(0x07U<<enTimE));
000002  4a06              LDR      r2,|L24.28|
000004  6913              LDR      r3,[r2,#0x10]
000006  2407              MOVS     r4,#7
000008  4084              LSLS     r4,r4,r0
00000a  43a3              BICS     r3,r3,r4
00000c  6113              STR      r3,[r2,#0x10]
;;;559        M0P_GPIO->TIMES |= (uint32_t)(enSf<<enTimE);
00000e  6913              LDR      r3,[r2,#0x10]
000010  4081              LSLS     r1,r1,r0
000012  430b              ORRS     r3,r3,r1
000014  6113              STR      r3,[r2,#0x10]
;;;560        
;;;561        return Ok;
;;;562    }
000016  bc10              POP      {r4}
000018  2000              MOVS     r0,#0                 ;561
00001a  4770              BX       lr
;;;563    
                          ENDP

                  |L24.28|
                          DCD      0x40020f00

                          AREA ||i.Gpio_SfTimGConfig||, CODE, READONLY, ALIGN=2

                  Gpio_SfTimGConfig PROC
;;;538     ******************************************************************************/
;;;539    en_result_t Gpio_SfTimGConfig(en_gpio_sf_tim_g_t enTimG, en_gpio_sf_t enSf)
000000  b410              PUSH     {r4}
;;;540    {
;;;541        M0P_GPIO->TIMGS &= (uint32_t)(~(0x07U<<enTimG));
000002  4a06              LDR      r2,|L25.28|
000004  68d3              LDR      r3,[r2,#0xc]
000006  2407              MOVS     r4,#7
000008  4084              LSLS     r4,r4,r0
00000a  43a3              BICS     r3,r3,r4
00000c  60d3              STR      r3,[r2,#0xc]
;;;542        M0P_GPIO->TIMGS |= (uint32_t)(enSf<<enTimG);
00000e  68d3              LDR      r3,[r2,#0xc]
000010  4081              LSLS     r1,r1,r0
000012  430b              ORRS     r3,r3,r1
000014  60d3              STR      r3,[r2,#0xc]
;;;543        
;;;544        return Ok;
;;;545    }
000016  bc10              POP      {r4}
000018  2000              MOVS     r0,#0                 ;544
00001a  4770              BX       lr
;;;546    
                          ENDP

                  |L25.28|
                          DCD      0x40020f00

                          AREA ||i.Gpio_WriteOutputIO||, CODE, READONLY, ALIGN=2

                  Gpio_WriteOutputIO PROC
;;;191     ******************************************************************************/
;;;192    en_result_t Gpio_WriteOutputIO(en_gpio_port_t enPort, en_gpio_pin_t enPin, boolean_t bVal)
000000  b410              PUSH     {r4}
;;;193    {
;;;194        setBit(((uint32_t)&M0P_GPIO->PAOUT + enPort), enPin, bVal);
000002  4c07              LDR      r4,|L26.32|
000004  2301              MOVS     r3,#1
000006  408b              LSLS     r3,r3,r1
000008  1900              ADDS     r0,r0,r4
00000a  6881              LDR      r1,[r0,#8]
00000c  2a00              CMP      r2,#0
00000e  d001              BEQ      |L26.20|
000010  4319              ORRS     r1,r1,r3
000012  e000              B        |L26.22|
                  |L26.20|
000014  4399              BICS     r1,r1,r3
                  |L26.22|
000016  6081              STR      r1,[r0,#8]
;;;195        
;;;196        return Ok;
;;;197    }
000018  bc10              POP      {r4}
00001a  2000              MOVS     r0,#0                 ;196
00001c  4770              BX       lr
;;;198    
                          ENDP

00001e  0000              DCW      0x0000
                  |L26.32|
                          DCD      0x40020d00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\HC32L13X_DDL_V1.0\\driver\\src\\gpio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_gpio_c_ea679305____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\HC32L13X_DDL_V1.0\\driver\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_gpio_c_ea679305____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_gpio_c_ea679305____REVSH|
#line 402
|__asm___6_gpio_c_ea679305____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
