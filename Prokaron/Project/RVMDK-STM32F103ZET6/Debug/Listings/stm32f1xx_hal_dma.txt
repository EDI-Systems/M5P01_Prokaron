; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\stm32f1xx_hal_dma.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\stm32f1xx_hal_dma.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F1_V1.6.0\Drivers\STM32F1xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32Cube_FW_F1_V1.6.0\Drivers\CMSIS\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F1_V1.6.0\Drivers\CMSIS\Device\ST\STM32F1xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F1_V1.6.0\Drivers\STM32F1xx_HAL_Driver\Inc\Conf -I..\RVMDK-STM32F103ZET6 -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F103ZET6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F10X_HD -DUSE_HAL_DRIVER -DSTM32F103xE -W --enum_is_int --signed_chars --omf_browse=.\debug\output\stm32f1xx_hal_dma.crf ..\..\..\M0P0_Library\STM32Cube_FW_F1_V1.6.0\Drivers\STM32F1xx_HAL_Driver\Src\stm32f1xx_hal_dma.c]
                          THUMB

                          AREA ||i.HAL_DMA_Abort||, CODE, READONLY, ALIGN=1

                  HAL_DMA_Abort PROC
;;;434      */
;;;435    HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
000000  6801              LDR      r1,[r0,#0]
;;;436    {
;;;437      HAL_StatusTypeDef status = HAL_OK;
;;;438    
;;;439      /* Disable DMA IT */
;;;440      __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
000002  680a              LDR      r2,[r1,#0]
000004  f022020e          BIC      r2,r2,#0xe
000008  600a              STR      r2,[r1,#0]
;;;441        
;;;442      /* Disable the channel */
;;;443      __HAL_DMA_DISABLE(hdma);
00000a  6801              LDR      r1,[r0,#0]
00000c  680a              LDR      r2,[r1,#0]
00000e  f0220201          BIC      r2,r2,#1
000012  600a              STR      r2,[r1,#0]
;;;444        
;;;445      /* Clear all flags */
;;;446      hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
000014  f8902044          LDRB     r2,[r0,#0x44]
000018  6c03              LDR      r3,[r0,#0x40]
00001a  2101              MOVS     r1,#1
00001c  fa01f202          LSL      r2,r1,r2
000020  605a              STR      r2,[r3,#4]
;;;447    
;;;448      /* Change the DMA state */
;;;449      hdma->State = HAL_DMA_STATE_READY;
;;;450    
;;;451      /* Process Unlocked */
;;;452      __HAL_UNLOCK(hdma);      
000022  6241              STR      r1,[r0,#0x24]
000024  2100              MOVS     r1,#0
;;;453      
;;;454      return status; 
000026  6201              STR      r1,[r0,#0x20]
000028  4608              MOV      r0,r1
;;;455    }
00002a  4770              BX       lr
;;;456    
                          ENDP


                          AREA ||i.HAL_DMA_Abort_IT||, CODE, READONLY, ALIGN=2

                  HAL_DMA_Abort_IT PROC
;;;462      */
;;;463    HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;464    {  
;;;465      HAL_StatusTypeDef status = HAL_OK;
;;;466      
;;;467      if(HAL_DMA_STATE_BUSY != hdma->State)
000004  6a41              LDR      r1,[r0,#0x24]
000006  2400              MOVS     r4,#0                 ;465
000008  2902              CMP      r1,#2
00000a  d003              BEQ      |L2.20|
;;;468      {
;;;469        /* no transfer ongoing */
;;;470        hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
00000c  2104              MOVS     r1,#4
00000e  63c1              STR      r1,[r0,#0x3c]
;;;471            
;;;472        status = HAL_ERROR;
000010  2401              MOVS     r4,#1
000012  e075              B        |L2.256|
                  |L2.20|
;;;473      }
;;;474      else
;;;475      { 
;;;476        /* Disable DMA IT */
;;;477        __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
000014  6801              LDR      r1,[r0,#0]
000016  680a              LDR      r2,[r1,#0]
000018  f022020e          BIC      r2,r2,#0xe
00001c  600a              STR      r2,[r1,#0]
;;;478    
;;;479        /* Disable the channel */
;;;480        __HAL_DMA_DISABLE(hdma);
00001e  6801              LDR      r1,[r0,#0]
000020  680a              LDR      r2,[r1,#0]
000022  f0220201          BIC      r2,r2,#1
000026  600a              STR      r2,[r1,#0]
;;;481    
;;;482        /* Clear all flags */
;;;483        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_GI_FLAG_INDEX(hdma));
000028  4a37              LDR      r2,|L2.264|
00002a  6801              LDR      r1,[r0,#0]
00002c  4b37              LDR      r3,|L2.268|
00002e  f8dfc0e0          LDR      r12,|L2.272|
000032  4d38              LDR      r5,|L2.276|
000034  4e38              LDR      r6,|L2.280|
000036  4f39              LDR      r7,|L2.284|
000038  f8df80e4          LDR      r8,|L2.288|
00003c  f8df90e4          LDR      r9,|L2.292|
000040  f8dfa0e4          LDR      r10,|L2.296|
000044  f8dfb0e4          LDR      r11,|L2.300|
000048  f8dfe0e4          LDR      lr,|L2.304|
00004c  4291              CMP      r1,r2
00004e  d925              BLS      |L2.156|
000050  4299              CMP      r1,r3
000052  d00e              BEQ      |L2.114|
000054  4561              CMP      r1,r12
000056  d010              BEQ      |L2.122|
000058  42a9              CMP      r1,r5
00005a  d012              BEQ      |L2.130|
00005c  42b1              CMP      r1,r6
00005e  d015              BEQ      |L2.140|
000060  42b9              CMP      r1,r7
000062  d016              BEQ      |L2.146|
000064  4541              CMP      r1,r8
000066  bf08              IT       EQ
000068  f44f1180          MOVEQ    r1,#0x100000
00006c  d013              BEQ      |L2.150|
00006e  4549              CMP      r1,r9
000070  d101              BNE      |L2.118|
                  |L2.114|
000072  2101              MOVS     r1,#1
000074  e00f              B        |L2.150|
                  |L2.118|
000076  4551              CMP      r1,r10
000078  d101              BNE      |L2.126|
                  |L2.122|
00007a  2110              MOVS     r1,#0x10
00007c  e00b              B        |L2.150|
                  |L2.126|
00007e  4559              CMP      r1,r11
000080  d102              BNE      |L2.136|
                  |L2.130|
000082  f44f7180          MOV      r1,#0x100
000086  e006              B        |L2.150|
                  |L2.136|
000088  4571              CMP      r1,lr
00008a  d102              BNE      |L2.146|
                  |L2.140|
00008c  f44f5180          MOV      r1,#0x1000
000090  e001              B        |L2.150|
                  |L2.146|
000092  f44f3180          MOV      r1,#0x10000
                  |L2.150|
000096  4a27              LDR      r2,|L2.308|
000098  6011              STR      r1,[r2,#0]
00009a  e029              B        |L2.240|
                  |L2.156|
00009c  4299              CMP      r1,r3
00009e  d013              BEQ      |L2.200|
0000a0  4561              CMP      r1,r12
0000a2  d015              BEQ      |L2.208|
0000a4  42a9              CMP      r1,r5
0000a6  d017              BEQ      |L2.216|
0000a8  42b1              CMP      r1,r6
0000aa  d01a              BEQ      |L2.226|
0000ac  42b9              CMP      r1,r7
0000ae  d01b              BEQ      |L2.232|
0000b0  4541              CMP      r1,r8
0000b2  bf08              IT       EQ
0000b4  f44f1180          MOVEQ    r1,#0x100000
0000b8  d018              BEQ      |L2.236|
0000ba  4291              CMP      r1,r2
0000bc  bf08              IT       EQ
0000be  f04f7180          MOVEQ    r1,#0x1000000
0000c2  d013              BEQ      |L2.236|
0000c4  4549              CMP      r1,r9
0000c6  d101              BNE      |L2.204|
                  |L2.200|
0000c8  2101              MOVS     r1,#1
0000ca  e00f              B        |L2.236|
                  |L2.204|
0000cc  4551              CMP      r1,r10
0000ce  d101              BNE      |L2.212|
                  |L2.208|
0000d0  2110              MOVS     r1,#0x10
0000d2  e00b              B        |L2.236|
                  |L2.212|
0000d4  4559              CMP      r1,r11
0000d6  d102              BNE      |L2.222|
                  |L2.216|
0000d8  f44f7180          MOV      r1,#0x100
0000dc  e006              B        |L2.236|
                  |L2.222|
0000de  4571              CMP      r1,lr
0000e0  d102              BNE      |L2.232|
                  |L2.226|
0000e2  f44f5180          MOV      r1,#0x1000
0000e6  e001              B        |L2.236|
                  |L2.232|
0000e8  f44f3180          MOV      r1,#0x10000
                  |L2.236|
0000ec  4a12              LDR      r2,|L2.312|
0000ee  6051              STR      r1,[r2,#4]
                  |L2.240|
;;;484    
;;;485        /* Change the DMA state */
;;;486        hdma->State = HAL_DMA_STATE_READY;
0000f0  2101              MOVS     r1,#1
;;;487    
;;;488        /* Process Unlocked */
;;;489        __HAL_UNLOCK(hdma);
0000f2  6241              STR      r1,[r0,#0x24]
0000f4  2100              MOVS     r1,#0
;;;490    
;;;491        /* Call User Abort callback */
;;;492        if(hdma->XferAbortCallback != NULL)
0000f6  6201              STR      r1,[r0,#0x20]
0000f8  6b81              LDR      r1,[r0,#0x38]
0000fa  2900              CMP      r1,#0
;;;493        {
;;;494          hdma->XferAbortCallback(hdma);
0000fc  bf18              IT       NE
0000fe  4788              BLXNE    r1
                  |L2.256|
;;;495        } 
;;;496      }
;;;497      return status;
000100  4620              MOV      r0,r4
;;;498    }
000102  e8bd9ff0          POP      {r4-r12,pc}
;;;499    
                          ENDP

000106  0000              DCW      0x0000
                  |L2.264|
                          DCD      0x40020080
                  |L2.268|
                          DCD      0x40020008
                  |L2.272|
                          DCD      0x4002001c
                  |L2.276|
                          DCD      0x40020030
                  |L2.280|
                          DCD      0x40020044
                  |L2.284|
                          DCD      0x40020058
                  |L2.288|
                          DCD      0x4002006c
                  |L2.292|
                          DCD      0x40020408
                  |L2.296|
                          DCD      0x4002041c
                  |L2.300|
                          DCD      0x40020430
                  |L2.304|
                          DCD      0x40020444
                  |L2.308|
                          DCD      0x40020404
                  |L2.312|
                          DCD      0x40020000

                          AREA ||i.HAL_DMA_DeInit||, CODE, READONLY, ALIGN=2

                  HAL_DMA_DeInit PROC
;;;244      */
;;;245    HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
000000  2800              CMP      r0,#0
;;;246    {
;;;247      /* Check the DMA handle allocation */
;;;248      if(hdma == NULL)
;;;249      {
;;;250        return HAL_ERROR;
000002  bf04              ITT      EQ
000004  2001              MOVEQ    r0,#1
;;;251      }
;;;252    
;;;253      /* Check the parameters */
;;;254      assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
;;;255    
;;;256      /* Disable the selected DMA Channelx */
;;;257      __HAL_DMA_DISABLE(hdma);
;;;258    
;;;259      /* Reset DMA Channel control register */
;;;260      hdma->Instance->CCR  = 0U;
;;;261    
;;;262      /* Reset DMA Channel Number of Data to Transfer register */
;;;263      hdma->Instance->CNDTR = 0U;
;;;264    
;;;265      /* Reset DMA Channel peripheral address register */
;;;266      hdma->Instance->CPAR  = 0U;
;;;267    
;;;268      /* Reset DMA Channel memory address register */
;;;269      hdma->Instance->CMAR = 0U;
;;;270    
;;;271    #if defined (STM32F101xE) || defined (STM32F101xG) || defined (STM32F103xE) || defined (STM32F103xG) || defined (STM32F100xE) || defined (STM32F105xC) || defined (STM32F107xC)
;;;272      /* calculation of the channel index */
;;;273      if ((uint32_t)(hdma->Instance) < (uint32_t)(DMA2_Channel1))
;;;274      {
;;;275        /* DMA1 */
;;;276        hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2;
;;;277        hdma->DmaBaseAddress = DMA1;
;;;278      }
;;;279      else 
;;;280      {
;;;281        /* DMA2 */
;;;282        hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA2_Channel1) / ((uint32_t)DMA2_Channel2 - (uint32_t)DMA2_Channel1)) << 2;
;;;283        hdma->DmaBaseAddress = DMA2;
;;;284      }
;;;285    #else
;;;286      /* DMA1 */
;;;287      hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2;
;;;288      hdma->DmaBaseAddress = DMA1;
;;;289    #endif /* STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG || STM32F100xE || STM32F105xC || STM32F107xC */
;;;290    
;;;291      /* Clear all flags */
;;;292      hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex));
;;;293    
;;;294      /* Initialize the error code */
;;;295      hdma->ErrorCode = HAL_DMA_ERROR_NONE;
;;;296    
;;;297      /* Initialize the DMA state */
;;;298      hdma->State = HAL_DMA_STATE_RESET;
;;;299    
;;;300      /* Release Lock */
;;;301      __HAL_UNLOCK(hdma);
;;;302    
;;;303      return HAL_OK;
;;;304    }
000006  4770              BXEQ     lr
000008  6801              LDR      r1,[r0,#0]            ;257
00000a  680a              LDR      r2,[r1,#0]            ;257
00000c  f0220201          BIC      r2,r2,#1              ;257
000010  600a              STR      r2,[r1,#0]            ;257
000012  6802              LDR      r2,[r0,#0]            ;260
000014  2100              MOVS     r1,#0                 ;260
000016  6011              STR      r1,[r2,#0]            ;260
000018  6802              LDR      r2,[r0,#0]            ;263
00001a  6051              STR      r1,[r2,#4]            ;263
00001c  6802              LDR      r2,[r0,#0]            ;266
00001e  6091              STR      r1,[r2,#8]            ;266
000020  6802              LDR      r2,[r0,#0]            ;269
000022  60d1              STR      r1,[r2,#0xc]          ;269
000024  f8dfc048          LDR      r12,|L3.112|
000028  6802              LDR      r2,[r0,#0]            ;273
00002a  4b12              LDR      r3,|L3.116|
00002c  4562              CMP      r2,r12                ;273
00002e  d209              BCS      |L3.68|
000030  f8dfc044          LDR      r12,|L3.120|
000034  4462              ADD      r2,r2,r12             ;276
000036  fba33202          UMULL    r3,r2,r3,r2           ;276
00003a  0912              LSRS     r2,r2,#4              ;276
00003c  0092              LSLS     r2,r2,#2              ;276
00003e  6442              STR      r2,[r0,#0x44]         ;277
000040  4a0e              LDR      r2,|L3.124|
000042  e008              B        |L3.86|
                  |L3.68|
000044  f8dfc038          LDR      r12,|L3.128|
000048  4462              ADD      r2,r2,r12             ;282
00004a  fba33202          UMULL    r3,r2,r3,r2           ;282
00004e  0912              LSRS     r2,r2,#4              ;282
000050  0092              LSLS     r2,r2,#2              ;282
000052  6442              STR      r2,[r0,#0x44]         ;283
000054  4a0b              LDR      r2,|L3.132|
                  |L3.86|
000056  6402              STR      r2,[r0,#0x40]         ;292
000058  f8902044          LDRB     r2,[r0,#0x44]         ;292
00005c  2301              MOVS     r3,#1                 ;292
00005e  fa03f202          LSL      r2,r3,r2              ;292
000062  6c03              LDR      r3,[r0,#0x40]         ;292
000064  605a              STR      r2,[r3,#4]            ;292
000066  63c1              STR      r1,[r0,#0x3c]         ;295
000068  6241              STR      r1,[r0,#0x24]         ;301
00006a  6201              STR      r1,[r0,#0x20]         ;303
00006c  2000              MOVS     r0,#0                 ;303
00006e  4770              BX       lr
;;;305    
                          ENDP

                  |L3.112|
                          DCD      0x40020408
                  |L3.116|
                          DCD      0xcccccccd
                  |L3.120|
                          DCD      0xbffdfff8
                  |L3.124|
                          DCD      0x40020000
                  |L3.128|
                          DCD      0xbffdfbf8
                  |L3.132|
                          DCD      0x40020400

                          AREA ||i.HAL_DMA_GetError||, CODE, READONLY, ALIGN=1

                  HAL_DMA_GetError PROC
;;;837      */
;;;838    uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
000000  6bc0              LDR      r0,[r0,#0x3c]
;;;839    {
;;;840      return hdma->ErrorCode;
;;;841    }
000002  4770              BX       lr
;;;842    
                          ENDP


                          AREA ||i.HAL_DMA_GetState||, CODE, READONLY, ALIGN=1

                  HAL_DMA_GetState PROC
;;;825      */
;;;826    HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
000000  6a40              LDR      r0,[r0,#0x24]
;;;827    {
;;;828      /* Return DMA handle state */
;;;829      return hdma->State;
;;;830    }
000002  4770              BX       lr
;;;831    
                          ENDP


                          AREA ||i.HAL_DMA_IRQHandler||, CODE, READONLY, ALIGN=2

                  HAL_DMA_IRQHandler PROC
;;;608      */
;;;609    void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;610    {
;;;611      uint32_t flag_it = hdma->DmaBaseAddress->ISR;
000004  6c01              LDR      r1,[r0,#0x40]
000006  680e              LDR      r6,[r1,#0]
;;;612      uint32_t source_it = hdma->Instance->CCR;
000008  6801              LDR      r1,[r0,#0]
00000a  680d              LDR      r5,[r1,#0]
;;;613      
;;;614      /* Half Transfer Complete Interrupt management ******************************/
;;;615      if (((flag_it & (DMA_FLAG_HT1 << hdma->ChannelIndex)) != RESET) && ((source_it & DMA_IT_HT) != RESET))
00000c  f8d0b044          LDR      r11,[r0,#0x44]
000010  2204              MOVS     r2,#4
000012  fa02f20b          LSL      r2,r2,r11
000016  4232              TST      r2,r6
;;;616      {
;;;617        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
;;;618        if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
;;;619        {
;;;620          /* Disable the half transfer interrupt */
;;;621          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
;;;622        }
;;;623        /* Clear the half transfer complete flag */
;;;624        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
000018  4a84              LDR      r2,|L6.556|
00001a  4f85              LDR      r7,|L6.560|
00001c  f8df8214          LDR      r8,|L6.564|
000020  f8df9214          LDR      r9,|L6.568|
000024  f8dfa214          LDR      r10,|L6.572|
000028  4b85              LDR      r3,|L6.576|
00002a  f8dfc218          LDR      r12,|L6.580|
00002e  4c86              LDR      r4,|L6.584|
000030  bf18              IT       NE                    ;615
000032  f0150f04          TSTNE    r5,#4                 ;615
000036  d064              BEQ      |L6.258|
000038  680d              LDR      r5,[r1,#0]            ;618
00003a  f0150f20          TST      r5,#0x20              ;618
00003e  d103              BNE      |L6.72|
000040  680d              LDR      r5,[r1,#0]            ;621
000042  f0250504          BIC      r5,r5,#4              ;621
000046  600d              STR      r5,[r1,#0]            ;621
                  |L6.72|
000048  4d80              LDR      r5,|L6.588|
00004a  6801              LDR      r1,[r0,#0]
00004c  42a9              CMP      r1,r5
00004e  d927              BLS      |L6.160|
000050  4291              CMP      r1,r2
000052  d00e              BEQ      |L6.114|
000054  42b9              CMP      r1,r7
000056  d010              BEQ      |L6.122|
000058  4541              CMP      r1,r8
00005a  d013              BEQ      |L6.132|
00005c  4549              CMP      r1,r9
00005e  d017              BEQ      |L6.144|
000060  4551              CMP      r1,r10
000062  d018              BEQ      |L6.150|
000064  4299              CMP      r1,r3
000066  bf08              IT       EQ
000068  f44f0180          MOVEQ    r1,#0x400000
00006c  d015              BEQ      |L6.154|
00006e  4561              CMP      r1,r12
000070  d101              BNE      |L6.118|
                  |L6.114|
000072  2104              MOVS     r1,#4
000074  e011              B        |L6.154|
                  |L6.118|
000076  42a1              CMP      r1,r4
000078  d101              BNE      |L6.126|
                  |L6.122|
00007a  2140              MOVS     r1,#0x40
00007c  e00d              B        |L6.154|
                  |L6.126|
00007e  4a74              LDR      r2,|L6.592|
000080  4291              CMP      r1,r2
000082  d102              BNE      |L6.138|
                  |L6.132|
000084  f44f6180          MOV      r1,#0x400
000088  e007              B        |L6.154|
                  |L6.138|
00008a  4a72              LDR      r2,|L6.596|
00008c  4291              CMP      r1,r2
00008e  d102              BNE      |L6.150|
                  |L6.144|
000090  f44f4180          MOV      r1,#0x4000
000094  e001              B        |L6.154|
                  |L6.150|
000096  f44f2180          MOV      r1,#0x40000
                  |L6.154|
00009a  4a6f              LDR      r2,|L6.600|
00009c  6011              STR      r1,[r2,#0]
00009e  e02b              B        |L6.248|
                  |L6.160|
0000a0  4291              CMP      r1,r2
0000a2  d013              BEQ      |L6.204|
0000a4  42b9              CMP      r1,r7
0000a6  d015              BEQ      |L6.212|
0000a8  4541              CMP      r1,r8
0000aa  d018              BEQ      |L6.222|
0000ac  4549              CMP      r1,r9
0000ae  d01c              BEQ      |L6.234|
0000b0  4551              CMP      r1,r10
0000b2  d01d              BEQ      |L6.240|
0000b4  4299              CMP      r1,r3
0000b6  bf08              IT       EQ
0000b8  f44f0180          MOVEQ    r1,#0x400000
0000bc  d01a              BEQ      |L6.244|
0000be  42a9              CMP      r1,r5
0000c0  bf08              IT       EQ
0000c2  f04f6180          MOVEQ    r1,#0x4000000
0000c6  d015              BEQ      |L6.244|
0000c8  4561              CMP      r1,r12
0000ca  d101              BNE      |L6.208|
                  |L6.204|
0000cc  2104              MOVS     r1,#4
0000ce  e011              B        |L6.244|
                  |L6.208|
0000d0  42a1              CMP      r1,r4
0000d2  d101              BNE      |L6.216|
                  |L6.212|
0000d4  2140              MOVS     r1,#0x40
0000d6  e00d              B        |L6.244|
                  |L6.216|
0000d8  4a5d              LDR      r2,|L6.592|
0000da  4291              CMP      r1,r2
0000dc  d102              BNE      |L6.228|
                  |L6.222|
0000de  f44f6180          MOV      r1,#0x400
0000e2  e007              B        |L6.244|
                  |L6.228|
0000e4  4a5b              LDR      r2,|L6.596|
0000e6  4291              CMP      r1,r2
0000e8  d102              BNE      |L6.240|
                  |L6.234|
0000ea  f44f4180          MOV      r1,#0x4000
0000ee  e001              B        |L6.244|
                  |L6.240|
0000f0  f44f2180          MOV      r1,#0x40000
                  |L6.244|
0000f4  4a59              LDR      r2,|L6.604|
0000f6  6051              STR      r1,[r2,#4]
                  |L6.248|
;;;625    
;;;626        /* DMA peripheral state is not updated in Half Transfer */
;;;627        /* but in Transfer Complete case */
;;;628    
;;;629        if(hdma->XferHalfCpltCallback != NULL)
0000f8  6b01              LDR      r1,[r0,#0x30]
0000fa  2900              CMP      r1,#0
0000fc  d173              BNE      |L6.486|
;;;630        {
;;;631          /* Half transfer callback */
;;;632          hdma->XferHalfCpltCallback(hdma);
;;;633        }
;;;634      }
;;;635    
;;;636      /* Transfer Complete Interrupt management ***********************************/
;;;637      else if (((flag_it & (DMA_FLAG_TC1 << hdma->ChannelIndex)) != RESET) && ((source_it & DMA_IT_TC) != RESET))
;;;638      {
;;;639        if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
;;;640        {
;;;641          /* Disable the transfer complete and error interrupt */
;;;642          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);  
;;;643    
;;;644          /* Change the DMA state */
;;;645          hdma->State = HAL_DMA_STATE_READY;
;;;646        }
;;;647        /* Clear the transfer complete flag */
;;;648          __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
;;;649    
;;;650        /* Process Unlocked */
;;;651        __HAL_UNLOCK(hdma);
;;;652    
;;;653        if(hdma->XferCpltCallback != NULL)
;;;654        {
;;;655          /* Transfer complete callback */
;;;656          hdma->XferCpltCallback(hdma);
;;;657        }
;;;658      }
;;;659    
;;;660      /* Transfer Error Interrupt management **************************************/
;;;661      else if (( RESET != (flag_it & (DMA_FLAG_TE1 << hdma->ChannelIndex))) && (RESET != (source_it & DMA_IT_TE)))
;;;662      {
;;;663        /* When a DMA transfer error occurs */
;;;664        /* A hardware clear of its EN bits is performed */
;;;665        /* Disable ALL DMA IT */
;;;666        __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
;;;667    
;;;668        /* Clear all flags */
;;;669        hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
;;;670    
;;;671        /* Update error code */
;;;672        hdma->ErrorCode = HAL_DMA_ERROR_TE;
;;;673    
;;;674        /* Change the DMA state */
;;;675        hdma->State = HAL_DMA_STATE_READY;
;;;676    
;;;677        /* Process Unlocked */
;;;678        __HAL_UNLOCK(hdma);
;;;679    
;;;680        if (hdma->XferErrorCallback != NULL)
;;;681        {
;;;682          /* Transfer error callback */
;;;683          hdma->XferErrorCallback(hdma);
;;;684        }
;;;685      }
;;;686      return;
;;;687    }
0000fe  e8bd9ff0          POP      {r4-r12,pc}
                  |L6.258|
000102  f04f0e02          MOV      lr,#2                 ;637
000106  fa0efe0b          LSL      lr,lr,r11             ;637
00010a  ea1e0f06          TST      lr,r6                 ;637
00010e  bf18              IT       NE                    ;637
000110  f0150f02          TSTNE    r5,#2                 ;637
000114  d069              BEQ      |L6.490|
000116  680d              LDR      r5,[r1,#0]            ;639
000118  f0150f20          TST      r5,#0x20              ;639
00011c  d105              BNE      |L6.298|
00011e  680d              LDR      r5,[r1,#0]            ;642
000120  f025050a          BIC      r5,r5,#0xa            ;642
000124  600d              STR      r5,[r1,#0]            ;642
000126  2101              MOVS     r1,#1                 ;645
000128  6241              STR      r1,[r0,#0x24]         ;645
                  |L6.298|
00012a  4d48              LDR      r5,|L6.588|
00012c  6801              LDR      r1,[r0,#0]            ;648
00012e  42a9              CMP      r1,r5                 ;648
000130  d927              BLS      |L6.386|
000132  4291              CMP      r1,r2                 ;648
000134  d00e              BEQ      |L6.340|
000136  42b9              CMP      r1,r7                 ;648
000138  d010              BEQ      |L6.348|
00013a  4541              CMP      r1,r8                 ;648
00013c  d013              BEQ      |L6.358|
00013e  4549              CMP      r1,r9                 ;648
000140  d017              BEQ      |L6.370|
000142  4551              CMP      r1,r10                ;648
000144  d018              BEQ      |L6.376|
000146  4299              CMP      r1,r3                 ;648
000148  bf08              IT       EQ                    ;648
00014a  f44f1100          MOVEQ    r1,#0x200000          ;648
00014e  d015              BEQ      |L6.380|
000150  4561              CMP      r1,r12                ;648
000152  d101              BNE      |L6.344|
                  |L6.340|
000154  2102              MOVS     r1,#2                 ;648
000156  e011              B        |L6.380|
                  |L6.344|
000158  42a1              CMP      r1,r4                 ;648
00015a  d101              BNE      |L6.352|
                  |L6.348|
00015c  2120              MOVS     r1,#0x20              ;648
00015e  e00d              B        |L6.380|
                  |L6.352|
000160  4a3b              LDR      r2,|L6.592|
000162  4291              CMP      r1,r2                 ;648
000164  d102              BNE      |L6.364|
                  |L6.358|
000166  f44f7100          MOV      r1,#0x200             ;648
00016a  e007              B        |L6.380|
                  |L6.364|
00016c  4a39              LDR      r2,|L6.596|
00016e  4291              CMP      r1,r2                 ;648
000170  d102              BNE      |L6.376|
                  |L6.370|
000172  f44f5100          MOV      r1,#0x2000            ;648
000176  e001              B        |L6.380|
                  |L6.376|
000178  f44f3100          MOV      r1,#0x20000           ;648
                  |L6.380|
00017c  4a36              LDR      r2,|L6.600|
00017e  6011              STR      r1,[r2,#0]            ;648
000180  e02b              B        |L6.474|
                  |L6.386|
000182  4291              CMP      r1,r2                 ;648
000184  d013              BEQ      |L6.430|
000186  42b9              CMP      r1,r7                 ;648
000188  d015              BEQ      |L6.438|
00018a  4541              CMP      r1,r8                 ;648
00018c  d018              BEQ      |L6.448|
00018e  4549              CMP      r1,r9                 ;648
000190  d01c              BEQ      |L6.460|
000192  4551              CMP      r1,r10                ;648
000194  d01d              BEQ      |L6.466|
000196  4299              CMP      r1,r3                 ;648
000198  bf08              IT       EQ                    ;648
00019a  f44f1100          MOVEQ    r1,#0x200000          ;648
00019e  d01a              BEQ      |L6.470|
0001a0  42a9              CMP      r1,r5                 ;648
0001a2  bf08              IT       EQ                    ;648
0001a4  f04f7100          MOVEQ    r1,#0x2000000         ;648
0001a8  d015              BEQ      |L6.470|
0001aa  4561              CMP      r1,r12                ;648
0001ac  d101              BNE      |L6.434|
                  |L6.430|
0001ae  2102              MOVS     r1,#2                 ;648
0001b0  e011              B        |L6.470|
                  |L6.434|
0001b2  42a1              CMP      r1,r4                 ;648
0001b4  d101              BNE      |L6.442|
                  |L6.438|
0001b6  2120              MOVS     r1,#0x20              ;648
0001b8  e00d              B        |L6.470|
                  |L6.442|
0001ba  4a25              LDR      r2,|L6.592|
0001bc  4291              CMP      r1,r2                 ;648
0001be  d102              BNE      |L6.454|
                  |L6.448|
0001c0  f44f7100          MOV      r1,#0x200             ;648
0001c4  e007              B        |L6.470|
                  |L6.454|
0001c6  4a23              LDR      r2,|L6.596|
0001c8  4291              CMP      r1,r2                 ;648
0001ca  d102              BNE      |L6.466|
                  |L6.460|
0001cc  f44f5100          MOV      r1,#0x2000            ;648
0001d0  e001              B        |L6.470|
                  |L6.466|
0001d2  f44f3100          MOV      r1,#0x20000           ;648
                  |L6.470|
0001d6  4a21              LDR      r2,|L6.604|
0001d8  6051              STR      r1,[r2,#4]            ;648
                  |L6.474|
0001da  2100              MOVS     r1,#0                 ;651
0001dc  6201              STR      r1,[r0,#0x20]         ;653
0001de  6ac1              LDR      r1,[r0,#0x2c]         ;653
0001e0  b909              CBNZ     r1,|L6.486|
0001e2  e8bd9ff0          POP      {r4-r12,pc}
                  |L6.486|
0001e6  e01d              B        |L6.548|
0001e8  e7ff              B        |L6.490|
                  |L6.490|
0001ea  2208              MOVS     r2,#8                 ;661
0001ec  fa02f20b          LSL      r2,r2,r11             ;661
0001f0  4232              TST      r2,r6                 ;661
0001f2  bf14              ITE      NE                    ;661
0001f4  f0150f08          TSTNE    r5,#8                 ;661
0001f8  e8bd9ff0          POPEQ    {r4-r12,pc}
0001fc  680a              LDR      r2,[r1,#0]            ;666
0001fe  f022020e          BIC      r2,r2,#0xe            ;666
000202  600a              STR      r2,[r1,#0]            ;666
000204  f8902044          LDRB     r2,[r0,#0x44]         ;669
000208  6c03              LDR      r3,[r0,#0x40]         ;669
00020a  2101              MOVS     r1,#1                 ;669
00020c  fa01f202          LSL      r2,r1,r2              ;669
000210  605a              STR      r2,[r3,#4]            ;669
000212  63c1              STR      r1,[r0,#0x3c]         ;672
000214  6241              STR      r1,[r0,#0x24]         ;678
000216  2100              MOVS     r1,#0                 ;678
000218  6201              STR      r1,[r0,#0x20]         ;680
00021a  6b41              LDR      r1,[r0,#0x34]         ;680
00021c  2900              CMP      r1,#0                 ;680
00021e  bf08              IT       EQ
000220  e8bd9ff0          POPEQ    {r4-r12,pc}
                  |L6.548|
000224  e8bd5ff0          POP      {r4-r12,lr}           ;683
000228  4708              BX       r1                    ;683
;;;688    
                          ENDP

00022a  0000              DCW      0x0000
                  |L6.556|
                          DCD      0x40020008
                  |L6.560|
                          DCD      0x4002001c
                  |L6.564|
                          DCD      0x40020030
                  |L6.568|
                          DCD      0x40020044
                  |L6.572|
                          DCD      0x40020058
                  |L6.576|
                          DCD      0x4002006c
                  |L6.580|
                          DCD      0x40020408
                  |L6.584|
                          DCD      0x4002041c
                  |L6.588|
                          DCD      0x40020080
                  |L6.592|
                          DCD      0x40020430
                  |L6.596|
                          DCD      0x40020444
                  |L6.600|
                          DCD      0x40020404
                  |L6.604|
                          DCD      0x40020000

                          AREA ||i.HAL_DMA_Init||, CODE, READONLY, ALIGN=2

                  HAL_DMA_Init PROC
;;;160      */
;;;161    HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
000000  2800              CMP      r0,#0
;;;162    {
;;;163      uint32_t tmp = 0U;
;;;164    
;;;165      /* Check the DMA handle allocation */
;;;166      if(hdma == NULL)
;;;167      {
;;;168        return HAL_ERROR;
000002  bf04              ITT      EQ
000004  2001              MOVEQ    r0,#1
;;;169      }
;;;170    
;;;171      /* Check the parameters */
;;;172      assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
;;;173      assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
;;;174      assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
;;;175      assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
;;;176      assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
;;;177      assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
;;;178      assert_param(IS_DMA_MODE(hdma->Init.Mode));
;;;179      assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
;;;180    
;;;181    #if defined (STM32F101xE) || defined (STM32F101xG) || defined (STM32F103xE) || defined (STM32F103xG) || defined (STM32F100xE) || defined (STM32F105xC) || defined (STM32F107xC)
;;;182      /* calculation of the channel index */
;;;183      if ((uint32_t)(hdma->Instance) < (uint32_t)(DMA2_Channel1))
;;;184      {
;;;185        /* DMA1 */
;;;186        hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2;
;;;187        hdma->DmaBaseAddress = DMA1;
;;;188      }
;;;189      else 
;;;190      {
;;;191        /* DMA2 */
;;;192        hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA2_Channel1) / ((uint32_t)DMA2_Channel2 - (uint32_t)DMA2_Channel1)) << 2;
;;;193        hdma->DmaBaseAddress = DMA2;
;;;194      }
;;;195    #else
;;;196      /* DMA1 */
;;;197      hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Channel2 - (uint32_t)DMA1_Channel1)) << 2;
;;;198      hdma->DmaBaseAddress = DMA1;
;;;199    #endif /* STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG || STM32F100xE || STM32F105xC || STM32F107xC */
;;;200    
;;;201      /* Change DMA peripheral state */
;;;202      hdma->State = HAL_DMA_STATE_BUSY;
;;;203    
;;;204      /* Get the CR register value */
;;;205      tmp = hdma->Instance->CCR;
;;;206    
;;;207      /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
;;;208      tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
;;;209                          DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
;;;210                          DMA_CCR_DIR));
;;;211    
;;;212      /* Prepare the DMA Channel configuration */
;;;213      tmp |=  hdma->Init.Direction        |
;;;214              hdma->Init.PeriphInc           | hdma->Init.MemInc           |
;;;215              hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
;;;216              hdma->Init.Mode                | hdma->Init.Priority;
;;;217    
;;;218      /* Write to DMA Channel CR register */
;;;219      hdma->Instance->CCR = tmp;
;;;220    
;;;221    
;;;222      /* Clean callbacks */
;;;223      hdma->XferCpltCallback = NULL;
;;;224      hdma->XferHalfCpltCallback = NULL;
;;;225      hdma->XferErrorCallback = NULL;
;;;226      hdma->XferAbortCallback = NULL;
;;;227    
;;;228      /* Initialise the error code */
;;;229      hdma->ErrorCode = HAL_DMA_ERROR_NONE;
;;;230    
;;;231      /* Initialize the DMA state*/
;;;232      hdma->State = HAL_DMA_STATE_READY;
;;;233      /* Allocate lock resource and initialize it */
;;;234      hdma->Lock = HAL_UNLOCKED;
;;;235      
;;;236      return HAL_OK;
;;;237    }
000006  4770              BXEQ     lr
000008  4b20              LDR      r3,|L7.140|
00000a  6801              LDR      r1,[r0,#0]            ;183
00000c  4a20              LDR      r2,|L7.144|
00000e  4299              CMP      r1,r3                 ;183
000010  d208              BCS      |L7.36|
000012  4b20              LDR      r3,|L7.148|
000014  440b              ADD      r3,r3,r1              ;186
000016  fba23203          UMULL    r3,r2,r2,r3           ;186
00001a  0912              LSRS     r2,r2,#4              ;186
00001c  0092              LSLS     r2,r2,#2              ;186
00001e  6442              STR      r2,[r0,#0x44]         ;187
000020  4a1d              LDR      r2,|L7.152|
000022  e007              B        |L7.52|
                  |L7.36|
000024  4b1d              LDR      r3,|L7.156|
000026  440b              ADD      r3,r3,r1              ;192
000028  fba23203          UMULL    r3,r2,r2,r3           ;192
00002c  0912              LSRS     r2,r2,#4              ;192
00002e  0092              LSLS     r2,r2,#2              ;192
000030  6442              STR      r2,[r0,#0x44]         ;193
000032  4a1b              LDR      r2,|L7.160|
                  |L7.52|
000034  6402              STR      r2,[r0,#0x40]         ;162
000036  b410              PUSH     {r4}                  ;162
000038  2202              MOVS     r2,#2                 ;202
00003a  6242              STR      r2,[r0,#0x24]         ;205
00003c  680a              LDR      r2,[r1,#0]            ;205
00003e  e9d03c01          LDRD     r3,r12,[r0,#4]        ;208
000042  ea43030c          ORR      r3,r3,r12             ;213
000046  e9d0c403          LDRD     r12,r4,[r0,#0xc]      ;213
00004a  ea4c0c04          ORR      r12,r12,r4            ;213
00004e  ea43030c          ORR      r3,r3,r12             ;213
000052  f8d0c014          LDR      r12,[r0,#0x14]        ;213
000056  f36f120d          BFC      r2,#4,#10             ;208
00005a  ea43030c          ORR      r3,r3,r12             ;213
00005e  f8d0c018          LDR      r12,[r0,#0x18]        ;213
000062  ea43030c          ORR      r3,r3,r12             ;213
000066  f8d0c01c          LDR      r12,[r0,#0x1c]        ;213
00006a  ea43030c          ORR      r3,r3,r12             ;213
00006e  431a              ORRS     r2,r2,r3              ;213
000070  600a              STR      r2,[r1,#0]            ;219
000072  2100              MOVS     r1,#0                 ;223
000074  62c1              STR      r1,[r0,#0x2c]         ;224
000076  6301              STR      r1,[r0,#0x30]         ;225
000078  6341              STR      r1,[r0,#0x34]         ;226
00007a  6381              STR      r1,[r0,#0x38]         ;229
00007c  63c1              STR      r1,[r0,#0x3c]         ;229
00007e  2201              MOVS     r2,#1                 ;232
000080  e9c01208          STRD     r1,r2,[r0,#0x20]      ;232
000084  bc10              POP      {r4}
000086  4608              MOV      r0,r1                 ;236
000088  4770              BX       lr
;;;238    
                          ENDP

00008a  0000              DCW      0x0000
                  |L7.140|
                          DCD      0x40020408
                  |L7.144|
                          DCD      0xcccccccd
                  |L7.148|
                          DCD      0xbffdfff8
                  |L7.152|
                          DCD      0x40020000
                  |L7.156|
                          DCD      0xbffdfbf8
                  |L7.160|
                          DCD      0x40020400

                          AREA ||i.HAL_DMA_PollForTransfer||, CODE, READONLY, ALIGN=2

                  HAL_DMA_PollForTransfer PROC
;;;507      */
;;;508    HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, uint32_t CompleteLevel, uint32_t Timeout)
000000  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;509    {
000004  4604              MOV      r4,r0
;;;510      uint32_t temp;
;;;511      uint32_t tickstart = 0U;
;;;512    
;;;513      if(HAL_DMA_STATE_BUSY != hdma->State)
000006  6a40              LDR      r0,[r0,#0x24]
000008  b082              SUB      sp,sp,#8              ;509
00000a  4692              MOV      r10,r2                ;509
00000c  2802              CMP      r0,#2
00000e  d007              BEQ      |L8.32|
;;;514      {
;;;515        /* no transfer ongoing */
;;;516        hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
000010  2004              MOVS     r0,#4
000012  63e0              STR      r0,[r4,#0x3c]
;;;517        __HAL_UNLOCK(hdma);
000014  2000              MOVS     r0,#0
;;;518        return HAL_ERROR;
000016  6220              STR      r0,[r4,#0x20]
;;;519      }
;;;520    
;;;521      /* Polling mode not supported in circular mode */
;;;522      if (RESET != (hdma->Instance->CCR & DMA_CCR_CIRC))
;;;523      {
;;;524        hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
;;;525        return HAL_ERROR;
;;;526      }
;;;527      
;;;528      /* Get the level transfer complete flag */
;;;529      if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
;;;530      {
;;;531        /* Transfer Complete flag */
;;;532        temp = __HAL_DMA_GET_TC_FLAG_INDEX(hdma);
;;;533      }
;;;534      else
;;;535      {
;;;536        /* Half Transfer Complete flag */
;;;537        temp = __HAL_DMA_GET_HT_FLAG_INDEX(hdma);
;;;538      }
;;;539    
;;;540      /* Get tick */
;;;541      tickstart = HAL_GetTick();
;;;542    
;;;543      while(__HAL_DMA_GET_FLAG(hdma, temp) == RESET)
;;;544      {
;;;545        if((__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma)) != RESET))
;;;546        {
;;;547          /* When a DMA transfer error occurs */
;;;548          /* A hardware clear of its EN bits is performed */
;;;549          /* Clear all flags */
;;;550          hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << hdma->ChannelIndex);
;;;551    
;;;552          /* Update error code */
;;;553          SET_BIT(hdma->ErrorCode, HAL_DMA_ERROR_TE);
;;;554    
;;;555          /* Change the DMA state */
;;;556          hdma->State= HAL_DMA_STATE_READY;
;;;557    
;;;558          /* Process Unlocked */
;;;559          __HAL_UNLOCK(hdma);
;;;560    
;;;561          return HAL_ERROR;
;;;562        }
;;;563        /* Check for the Timeout */
;;;564        if(Timeout != HAL_MAX_DELAY)
;;;565        {
;;;566          if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
;;;567          {
;;;568            /* Update error code */
;;;569            SET_BIT(hdma->ErrorCode, HAL_DMA_ERROR_TIMEOUT);
;;;570    
;;;571            /* Change the DMA state */
;;;572            hdma->State = HAL_DMA_STATE_READY;
;;;573    
;;;574            /* Process Unlocked */
;;;575            __HAL_UNLOCK(hdma);
;;;576    
;;;577            return HAL_ERROR;
;;;578          }
;;;579        }
;;;580      }
;;;581    
;;;582      if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
;;;583      {
;;;584        /* Clear the transfer complete flag */
;;;585        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
;;;586    
;;;587        /* The selected Channelx EN bit is cleared (DMA is disabled and
;;;588        all transfers are complete) */
;;;589        hdma->State = HAL_DMA_STATE_READY;
;;;590      }
;;;591      else
;;;592      {
;;;593        /* Clear the half transfer complete flag */
;;;594        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
;;;595      }
;;;596      
;;;597      /* Process unlocked */
;;;598      __HAL_UNLOCK(hdma);
;;;599    
;;;600      return HAL_OK;
;;;601    }
000018  b005              ADD      sp,sp,#0x14
00001a  2001              MOVS     r0,#1                 ;518
00001c  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.32|
000020  6820              LDR      r0,[r4,#0]            ;522
000022  6801              LDR      r1,[r0,#0]            ;522
000024  f0110f20          TST      r1,#0x20              ;522
000028  bf1c              ITT      NE                    ;524
00002a  f44f7080          MOVNE    r0,#0x100             ;524
00002e  63e0              STRNE    r0,[r4,#0x3c]         ;524
000030  f04080fb          BNE.W    |L8.554|
000034  4eeb              LDR      r6,|L8.996|
000036  4fec              LDR      r7,|L8.1000|
000038  f8dfb3b0          LDR      r11,|L8.1004|
00003c  f8df83b0          LDR      r8,|L8.1008|
000040  4dec              LDR      r5,|L8.1012|
000042  9903              LDR      r1,[sp,#0xc]          ;529
000044  b129              CBZ      r1,|L8.82|
000046  42b0              CMP      r0,r6                 ;537
000048  d139              BNE      |L8.190|
00004a  bf00              NOP                            ;537
                  |L8.76|
00004c  f04f0904          MOV      r9,#4                 ;537
000050  e04c              B        |L8.236|
                  |L8.82|
000052  42b0              CMP      r0,r6                 ;532
000054  d103              BNE      |L8.94|
000056  bf00              NOP                            ;532
                  |L8.88|
000058  f04f0902          MOV      r9,#2                 ;532
00005c  e046              B        |L8.236|
                  |L8.94|
00005e  42b8              CMP      r0,r7                 ;532
000060  d103              BNE      |L8.106|
000062  bf00              NOP                            ;532
                  |L8.100|
000064  f04f0920          MOV      r9,#0x20              ;532
000068  e040              B        |L8.236|
                  |L8.106|
00006a  4558              CMP      r0,r11                ;532
00006c  d103              BNE      |L8.118|
00006e  bf00              NOP                            ;532
                  |L8.112|
000070  f44f7900          MOV      r9,#0x200             ;532
000074  e03a              B        |L8.236|
                  |L8.118|
000076  4540              CMP      r0,r8                 ;532
000078  d103              BNE      |L8.130|
00007a  bf00              NOP                            ;532
                  |L8.124|
00007c  f44f5900          MOV      r9,#0x2000            ;532
000080  e034              B        |L8.236|
                  |L8.130|
000082  49dd              LDR      r1,|L8.1016|
000084  4288              CMP      r0,r1                 ;532
000086  d102              BNE      |L8.142|
                  |L8.136|
000088  f44f3900          MOV      r9,#0x20000           ;532
00008c  e02e              B        |L8.236|
                  |L8.142|
00008e  49db              LDR      r1,|L8.1020|
000090  4288              CMP      r0,r1                 ;532
000092  bf08              IT       EQ                    ;532
000094  f44f1900          MOVEQ    r9,#0x200000          ;532
000098  d028              BEQ      |L8.236|
00009a  42a8              CMP      r0,r5                 ;532
00009c  bf08              IT       EQ                    ;532
00009e  f04f7900          MOVEQ    r9,#0x2000000         ;532
0000a2  d023              BEQ      |L8.236|
0000a4  49d6              LDR      r1,|L8.1024|
0000a6  4288              CMP      r0,r1                 ;532
0000a8  d0d6              BEQ      |L8.88|
0000aa  49d6              LDR      r1,|L8.1028|
0000ac  4288              CMP      r0,r1                 ;532
0000ae  d0d9              BEQ      |L8.100|
0000b0  49d5              LDR      r1,|L8.1032|
0000b2  4288              CMP      r0,r1                 ;532
0000b4  d0dc              BEQ      |L8.112|
0000b6  49d5              LDR      r1,|L8.1036|
0000b8  4288              CMP      r0,r1                 ;532
0000ba  d1e5              BNE      |L8.136|
0000bc  e7de              B        |L8.124|
                  |L8.190|
0000be  42b8              CMP      r0,r7                 ;537
0000c0  d103              BNE      |L8.202|
0000c2  bf00              NOP                            ;537
                  |L8.196|
0000c4  f04f0940          MOV      r9,#0x40              ;537
0000c8  e010              B        |L8.236|
                  |L8.202|
0000ca  4558              CMP      r0,r11                ;537
0000cc  d103              BNE      |L8.214|
0000ce  bf00              NOP                            ;537
                  |L8.208|
0000d0  f44f6980          MOV      r9,#0x400             ;537
0000d4  e00a              B        |L8.236|
                  |L8.214|
0000d6  4540              CMP      r0,r8                 ;537
0000d8  d103              BNE      |L8.226|
0000da  bf00              NOP                            ;537
                  |L8.220|
0000dc  f44f4980          MOV      r9,#0x4000            ;537
0000e0  e004              B        |L8.236|
                  |L8.226|
0000e2  49c5              LDR      r1,|L8.1016|
0000e4  4288              CMP      r0,r1                 ;537
0000e6  d124              BNE      |L8.306|
                  |L8.232|
0000e8  f44f2980          MOV      r9,#0x40000           ;537
                  |L8.236|
0000ec  f7fffffe          BL       HAL_GetTick
0000f0  9000              STR      r0,[sp,#0]            ;543
0000f2  6821              LDR      r1,[r4,#0]            ;543
0000f4  48c6              LDR      r0,|L8.1040|
0000f6  42a9              CMP      r1,r5                 ;543
0000f8  bf8e              ITEE     HI                    ;543
0000fa  6801              LDRHI    r1,[r0,#0]            ;543
0000fc  49c5              LDRLS    r1,|L8.1044|
0000fe  6809              LDRLS    r1,[r1,#0]            ;543
000100  ea110f09          TST      r1,r9                 ;543
000104  d17c              BNE      |L8.512|
                  |L8.262|
000106  6820              LDR      r0,[r4,#0]            ;545
000108  42a8              CMP      r0,r5                 ;545
00010a  d957              BLS      |L8.444|
00010c  49c0              LDR      r1,|L8.1040|
00010e  6809              LDR      r1,[r1,#0]            ;545
000110  42b0              CMP      r0,r6                 ;545
000112  d02a              BEQ      |L8.362|
000114  42b8              CMP      r0,r7                 ;545
000116  d02d              BEQ      |L8.372|
000118  4558              CMP      r0,r11                ;545
00011a  d030              BEQ      |L8.382|
00011c  4540              CMP      r0,r8                 ;545
00011e  d034              BEQ      |L8.394|
000120  4ab5              LDR      r2,|L8.1016|
000122  4290              CMP      r0,r2                 ;545
000124  d034              BEQ      |L8.400|
000126  4ab5              LDR      r2,|L8.1020|
000128  4290              CMP      r0,r2                 ;545
00012a  d11b              BNE      |L8.356|
                  |L8.300|
00012c  f44f0000          MOV      r0,#0x800000          ;545
000130  e030              B        |L8.404|
                  |L8.306|
000132  49b2              LDR      r1,|L8.1020|
000134  4288              CMP      r0,r1                 ;537
000136  bf08              IT       EQ                    ;537
000138  f44f0980          MOVEQ    r9,#0x400000          ;537
00013c  d0d6              BEQ      |L8.236|
00013e  42a8              CMP      r0,r5                 ;537
000140  bf08              IT       EQ                    ;537
000142  f04f6980          MOVEQ    r9,#0x4000000         ;537
000146  d0d1              BEQ      |L8.236|
000148  49ad              LDR      r1,|L8.1024|
00014a  4288              CMP      r0,r1                 ;537
00014c  f43faf7e          BEQ      |L8.76|
000150  49ac              LDR      r1,|L8.1028|
000152  4288              CMP      r0,r1                 ;537
000154  d0b6              BEQ      |L8.196|
000156  49ac              LDR      r1,|L8.1032|
000158  4288              CMP      r0,r1                 ;537
00015a  d0b9              BEQ      |L8.208|
00015c  49ab              LDR      r1,|L8.1036|
00015e  4288              CMP      r0,r1                 ;537
000160  d1c2              BNE      |L8.232|
000162  e7bb              B        |L8.220|
                  |L8.356|
000164  4aa6              LDR      r2,|L8.1024|
000166  4290              CMP      r0,r2                 ;545
000168  d101              BNE      |L8.366|
                  |L8.362|
00016a  2008              MOVS     r0,#8                 ;545
00016c  e012              B        |L8.404|
                  |L8.366|
00016e  4aa5              LDR      r2,|L8.1028|
000170  4290              CMP      r0,r2                 ;545
000172  d101              BNE      |L8.376|
                  |L8.372|
000174  2080              MOVS     r0,#0x80              ;545
000176  e00d              B        |L8.404|
                  |L8.376|
000178  4aa3              LDR      r2,|L8.1032|
00017a  4290              CMP      r0,r2                 ;545
00017c  d102              BNE      |L8.388|
                  |L8.382|
00017e  f44f6000          MOV      r0,#0x800             ;545
000182  e007              B        |L8.404|
                  |L8.388|
000184  4aa1              LDR      r2,|L8.1036|
000186  4290              CMP      r0,r2                 ;545
000188  d102              BNE      |L8.400|
                  |L8.394|
00018a  f44f4000          MOV      r0,#0x8000            ;545
00018e  e001              B        |L8.404|
                  |L8.400|
000190  f44f2000          MOV      r0,#0x80000           ;545
                  |L8.404|
000194  4201              TST      r1,r0                 ;545
000196  d034              BEQ      |L8.514|
000198  f8941044          LDRB     r1,[r4,#0x44]         ;550
00019c  6c22              LDR      r2,[r4,#0x40]         ;550
00019e  2001              MOVS     r0,#1                 ;550
0001a0  fa00f101          LSL      r1,r0,r1              ;550
0001a4  6051              STR      r1,[r2,#4]            ;550
0001a6  6be1              LDR      r1,[r4,#0x3c]         ;553
0001a8  f0410101          ORR      r1,r1,#1              ;553
0001ac  63e1              STR      r1,[r4,#0x3c]         ;553
0001ae  6260              STR      r0,[r4,#0x24]         ;559
0001b0  2000              MOVS     r0,#0                 ;559
0001b2  6220              STR      r0,[r4,#0x20]         ;561
0001b4  b005              ADD      sp,sp,#0x14
0001b6  2001              MOVS     r0,#1                 ;561
0001b8  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.444|
0001bc  4995              LDR      r1,|L8.1044|
0001be  6809              LDR      r1,[r1,#0]            ;545
0001c0  42b0              CMP      r0,r6                 ;545
0001c2  d0d2              BEQ      |L8.362|
0001c4  42b8              CMP      r0,r7                 ;545
0001c6  d0d5              BEQ      |L8.372|
0001c8  4558              CMP      r0,r11                ;545
0001ca  d0d8              BEQ      |L8.382|
0001cc  4540              CMP      r0,r8                 ;545
0001ce  d0dc              BEQ      |L8.394|
0001d0  4a89              LDR      r2,|L8.1016|
0001d2  4290              CMP      r0,r2                 ;545
0001d4  d0dc              BEQ      |L8.400|
0001d6  4a89              LDR      r2,|L8.1020|
0001d8  4290              CMP      r0,r2                 ;545
0001da  d0a7              BEQ      |L8.300|
0001dc  42a8              CMP      r0,r5                 ;545
0001de  bf08              IT       EQ                    ;545
0001e0  f04f6000          MOVEQ    r0,#0x8000000         ;545
0001e4  d0d6              BEQ      |L8.404|
0001e6  4a86              LDR      r2,|L8.1024|
0001e8  4290              CMP      r0,r2                 ;545
0001ea  d0be              BEQ      |L8.362|
0001ec  4a85              LDR      r2,|L8.1028|
0001ee  4290              CMP      r0,r2                 ;545
0001f0  d0c0              BEQ      |L8.372|
0001f2  4a85              LDR      r2,|L8.1032|
0001f4  4290              CMP      r0,r2                 ;545
0001f6  d0c2              BEQ      |L8.382|
0001f8  4a84              LDR      r2,|L8.1036|
0001fa  4290              CMP      r0,r2                 ;545
0001fc  d1c8              BNE      |L8.400|
0001fe  e7c4              B        |L8.394|
                  |L8.512|
000200  e022              B        |L8.584|
                  |L8.514|
000202  f1ba3fff          CMP      r10,#0xffffffff       ;564
000206  d014              BEQ      |L8.562|
000208  f1ba0f00          CMP      r10,#0                ;566
00020c  d005              BEQ      |L8.538|
00020e  f7fffffe          BL       HAL_GetTick
000212  9900              LDR      r1,[sp,#0]            ;566
000214  1a40              SUBS     r0,r0,r1              ;566
000216  4550              CMP      r0,r10                ;566
000218  d90b              BLS      |L8.562|
                  |L8.538|
00021a  6be0              LDR      r0,[r4,#0x3c]         ;569
00021c  f0400020          ORR      r0,r0,#0x20           ;569
000220  63e0              STR      r0,[r4,#0x3c]         ;569
000222  2001              MOVS     r0,#1                 ;572
000224  6260              STR      r0,[r4,#0x24]         ;575
000226  2000              MOVS     r0,#0                 ;575
000228  6220              STR      r0,[r4,#0x20]         ;575
                  |L8.554|
00022a  b005              ADD      sp,sp,#0x14
00022c  2001              MOVS     r0,#1                 ;577
00022e  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.562|
000232  6820              LDR      r0,[r4,#0]            ;577
000234  42a8              CMP      r0,r5                 ;577
000236  bf8c              ITE      HI                    ;577
000238  4875              LDRHI    r0,|L8.1040|
00023a  4876              LDRLS    r0,|L8.1044|
00023c  6800              LDR      r0,[r0,#0]            ;577
00023e  ea000009          AND      r0,r0,r9              ;577
000242  2800              CMP      r0,#0                 ;577
000244  f43faf5f          BEQ      |L8.262|
                  |L8.584|
000248  9803              LDR      r0,[sp,#0xc]          ;582
00024a  4973              LDR      r1,|L8.1048|
00024c  2800              CMP      r0,#0                 ;582
00024e  6820              LDR      r0,[r4,#0]            ;582
000250  d017              BEQ      |L8.642|
000252  42a8              CMP      r0,r5                 ;594
000254  d975              BLS      |L8.834|
000256  42b0              CMP      r0,r6                 ;594
000258  d011              BEQ      |L8.638|
00025a  42b8              CMP      r0,r7                 ;594
00025c  d07b              BEQ      |L8.854|
00025e  4558              CMP      r0,r11                ;594
000260  d07e              BEQ      |L8.864|
000262  4540              CMP      r0,r8                 ;594
000264  d070              BEQ      |L8.840|
000266  4a64              LDR      r2,|L8.1016|
000268  4290              CMP      r0,r2                 ;594
00026a  d06e              BEQ      |L8.842|
00026c  4a63              LDR      r2,|L8.1020|
00026e  4290              CMP      r0,r2                 ;594
000270  bf08              IT       EQ                    ;594
000272  f44f0080          MOVEQ    r0,#0x400000          ;594
000276  d07e              BEQ      |L8.886|
000278  4a61              LDR      r2,|L8.1024|
00027a  4290              CMP      r0,r2                 ;594
00027c  d168              BNE      |L8.848|
                  |L8.638|
00027e  2004              MOVS     r0,#4                 ;594
000280  e079              B        |L8.886|
                  |L8.642|
000282  42a8              CMP      r0,r5                 ;585
000284  d92a              BLS      |L8.732|
000286  42b0              CMP      r0,r6                 ;585
000288  d011              BEQ      |L8.686|
00028a  42b8              CMP      r0,r7                 ;585
00028c  d014              BEQ      |L8.696|
00028e  4558              CMP      r0,r11                ;585
000290  d017              BEQ      |L8.706|
000292  4540              CMP      r0,r8                 ;585
000294  d01b              BEQ      |L8.718|
000296  4a58              LDR      r2,|L8.1016|
000298  4290              CMP      r0,r2                 ;585
00029a  d01b              BEQ      |L8.724|
00029c  4a57              LDR      r2,|L8.1020|
00029e  4290              CMP      r0,r2                 ;585
0002a0  bf08              IT       EQ                    ;585
0002a2  f44f1000          MOVEQ    r0,#0x200000          ;585
0002a6  d017              BEQ      |L8.728|
0002a8  4a55              LDR      r2,|L8.1024|
0002aa  4290              CMP      r0,r2                 ;585
0002ac  d101              BNE      |L8.690|
                  |L8.686|
0002ae  2002              MOVS     r0,#2                 ;585
0002b0  e012              B        |L8.728|
                  |L8.690|
0002b2  4a54              LDR      r2,|L8.1028|
0002b4  4290              CMP      r0,r2                 ;585
0002b6  d101              BNE      |L8.700|
                  |L8.696|
0002b8  2020              MOVS     r0,#0x20              ;585
0002ba  e00d              B        |L8.728|
                  |L8.700|
0002bc  4a52              LDR      r2,|L8.1032|
0002be  4290              CMP      r0,r2                 ;585
0002c0  d102              BNE      |L8.712|
                  |L8.706|
0002c2  f44f7000          MOV      r0,#0x200             ;585
0002c6  e007              B        |L8.728|
                  |L8.712|
0002c8  4a50              LDR      r2,|L8.1036|
0002ca  4290              CMP      r0,r2                 ;585
0002cc  d102              BNE      |L8.724|
                  |L8.718|
0002ce  f44f5000          MOV      r0,#0x2000            ;585
0002d2  e001              B        |L8.728|
                  |L8.724|
0002d4  f44f3000          MOV      r0,#0x20000           ;585
                  |L8.728|
0002d8  6008              STR      r0,[r1,#0]            ;585
0002da  e02f              B        |L8.828|
                  |L8.732|
0002dc  42b0              CMP      r0,r6                 ;585
0002de  d016              BEQ      |L8.782|
0002e0  42b8              CMP      r0,r7                 ;585
0002e2  d019              BEQ      |L8.792|
0002e4  4558              CMP      r0,r11                ;585
0002e6  d01c              BEQ      |L8.802|
0002e8  4540              CMP      r0,r8                 ;585
0002ea  d020              BEQ      |L8.814|
0002ec  4942              LDR      r1,|L8.1016|
0002ee  4288              CMP      r0,r1                 ;585
0002f0  d020              BEQ      |L8.820|
0002f2  4942              LDR      r1,|L8.1020|
0002f4  4288              CMP      r0,r1                 ;585
0002f6  bf08              IT       EQ                    ;585
0002f8  f44f1000          MOVEQ    r0,#0x200000          ;585
0002fc  d01c              BEQ      |L8.824|
0002fe  42a8              CMP      r0,r5                 ;585
000300  bf08              IT       EQ                    ;585
000302  f04f7000          MOVEQ    r0,#0x2000000         ;585
000306  d017              BEQ      |L8.824|
000308  493d              LDR      r1,|L8.1024|
00030a  4288              CMP      r0,r1                 ;585
00030c  d101              BNE      |L8.786|
                  |L8.782|
00030e  2002              MOVS     r0,#2                 ;585
000310  e012              B        |L8.824|
                  |L8.786|
000312  493c              LDR      r1,|L8.1028|
000314  4288              CMP      r0,r1                 ;585
000316  d101              BNE      |L8.796|
                  |L8.792|
000318  2020              MOVS     r0,#0x20              ;585
00031a  e00d              B        |L8.824|
                  |L8.796|
00031c  493a              LDR      r1,|L8.1032|
00031e  4288              CMP      r0,r1                 ;585
000320  d102              BNE      |L8.808|
                  |L8.802|
000322  f44f7000          MOV      r0,#0x200             ;585
000326  e007              B        |L8.824|
                  |L8.808|
000328  4938              LDR      r1,|L8.1036|
00032a  4288              CMP      r0,r1                 ;585
00032c  d102              BNE      |L8.820|
                  |L8.814|
00032e  f44f5000          MOV      r0,#0x2000            ;585
000332  e001              B        |L8.824|
                  |L8.820|
000334  f44f3000          MOV      r0,#0x20000           ;585
                  |L8.824|
000338  4936              LDR      r1,|L8.1044|
00033a  6048              STR      r0,[r1,#4]            ;585
                  |L8.828|
00033c  2001              MOVS     r0,#1                 ;589
00033e  6260              STR      r0,[r4,#0x24]         ;589
000340  e04b              B        |L8.986|
                  |L8.834|
000342  e01a              B        |L8.890|
000344  e007              B        |L8.854|
000346  e00b              B        |L8.864|
                  |L8.840|
000348  e010              B        |L8.876|
                  |L8.842|
00034a  e012              B        |L8.882|
00034c  e013              B        |L8.886|
00034e  e7ff              B        |L8.848|
                  |L8.848|
000350  4a2c              LDR      r2,|L8.1028|
000352  4290              CMP      r0,r2                 ;594
000354  d101              BNE      |L8.858|
                  |L8.854|
000356  2040              MOVS     r0,#0x40              ;594
000358  e00d              B        |L8.886|
                  |L8.858|
00035a  4a2b              LDR      r2,|L8.1032|
00035c  4290              CMP      r0,r2                 ;594
00035e  d102              BNE      |L8.870|
                  |L8.864|
000360  f44f6080          MOV      r0,#0x400             ;594
000364  e007              B        |L8.886|
                  |L8.870|
000366  4a29              LDR      r2,|L8.1036|
000368  4290              CMP      r0,r2                 ;594
00036a  d102              BNE      |L8.882|
                  |L8.876|
00036c  f44f4080          MOV      r0,#0x4000            ;594
000370  e001              B        |L8.886|
                  |L8.882|
000372  f44f2080          MOV      r0,#0x40000           ;594
                  |L8.886|
000376  6008              STR      r0,[r1,#0]            ;594
000378  e02f              B        |L8.986|
                  |L8.890|
00037a  42b0              CMP      r0,r6                 ;594
00037c  d016              BEQ      |L8.940|
00037e  42b8              CMP      r0,r7                 ;594
000380  d019              BEQ      |L8.950|
000382  4558              CMP      r0,r11                ;594
000384  d01c              BEQ      |L8.960|
000386  4540              CMP      r0,r8                 ;594
000388  d020              BEQ      |L8.972|
00038a  491b              LDR      r1,|L8.1016|
00038c  4288              CMP      r0,r1                 ;594
00038e  d020              BEQ      |L8.978|
000390  491a              LDR      r1,|L8.1020|
000392  4288              CMP      r0,r1                 ;594
000394  bf08              IT       EQ                    ;594
000396  f44f0080          MOVEQ    r0,#0x400000          ;594
00039a  d01c              BEQ      |L8.982|
00039c  42a8              CMP      r0,r5                 ;594
00039e  bf08              IT       EQ                    ;594
0003a0  f04f6080          MOVEQ    r0,#0x4000000         ;594
0003a4  d017              BEQ      |L8.982|
0003a6  4916              LDR      r1,|L8.1024|
0003a8  4288              CMP      r0,r1                 ;594
0003aa  d101              BNE      |L8.944|
                  |L8.940|
0003ac  2004              MOVS     r0,#4                 ;594
0003ae  e012              B        |L8.982|
                  |L8.944|
0003b0  4914              LDR      r1,|L8.1028|
0003b2  4288              CMP      r0,r1                 ;594
0003b4  d101              BNE      |L8.954|
                  |L8.950|
0003b6  2040              MOVS     r0,#0x40              ;594
0003b8  e00d              B        |L8.982|
                  |L8.954|
0003ba  4913              LDR      r1,|L8.1032|
0003bc  4288              CMP      r0,r1                 ;594
0003be  d102              BNE      |L8.966|
                  |L8.960|
0003c0  f44f6080          MOV      r0,#0x400             ;594
0003c4  e007              B        |L8.982|
                  |L8.966|
0003c6  4911              LDR      r1,|L8.1036|
0003c8  4288              CMP      r0,r1                 ;594
0003ca  d102              BNE      |L8.978|
                  |L8.972|
0003cc  f44f4080          MOV      r0,#0x4000            ;594
0003d0  e001              B        |L8.982|
                  |L8.978|
0003d2  f44f2080          MOV      r0,#0x40000           ;594
                  |L8.982|
0003d6  490f              LDR      r1,|L8.1044|
0003d8  6048              STR      r0,[r1,#4]            ;594
                  |L8.986|
0003da  2000              MOVS     r0,#0                 ;598
0003dc  6220              STR      r0,[r4,#0x20]         ;598
0003de  b005              ADD      sp,sp,#0x14
0003e0  e8bd8ff0          POP      {r4-r11,pc}
;;;602    
                          ENDP

                  |L8.996|
                          DCD      0x40020008
                  |L8.1000|
                          DCD      0x4002001c
                  |L8.1004|
                          DCD      0x40020030
                  |L8.1008|
                          DCD      0x40020044
                  |L8.1012|
                          DCD      0x40020080
                  |L8.1016|
                          DCD      0x40020058
                  |L8.1020|
                          DCD      0x4002006c
                  |L8.1024|
                          DCD      0x40020408
                  |L8.1028|
                          DCD      0x4002041c
                  |L8.1032|
                          DCD      0x40020430
                  |L8.1036|
                          DCD      0x40020444
                  |L8.1040|
                          DCD      0x40020400
                  |L8.1044|
                          DCD      0x40020000
                  |L8.1048|
                          DCD      0x40020404

                          AREA ||i.HAL_DMA_RegisterCallback||, CODE, READONLY, ALIGN=1

                  HAL_DMA_RegisterCallback PROC
;;;698      */                          
;;;699    HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef CallbackID, void (* pCallback)( DMA_HandleTypeDef * _hdma))
000000  f8d0c020          LDR      r12,[r0,#0x20]
;;;700    {
;;;701      HAL_StatusTypeDef status = HAL_OK;
000004  2300              MOVS     r3,#0
;;;702      
;;;703      /* Process locked */
;;;704      __HAL_LOCK(hdma);
000006  f1bc0f01          CMP      r12,#1
00000a  bf04              ITT      EQ
00000c  2002              MOVEQ    r0,#2
;;;705      
;;;706      if(HAL_DMA_STATE_READY == hdma->State)
;;;707      {
;;;708        switch (CallbackID)
;;;709        {
;;;710        case  HAL_DMA_XFER_CPLT_CB_ID:
;;;711          hdma->XferCpltCallback = pCallback;
;;;712          break;
;;;713          
;;;714        case  HAL_DMA_XFER_HALFCPLT_CB_ID:
;;;715          hdma->XferHalfCpltCallback = pCallback;
;;;716          break;         
;;;717    
;;;718        case  HAL_DMA_XFER_ERROR_CB_ID:
;;;719          hdma->XferErrorCallback = pCallback;
;;;720          break;         
;;;721          
;;;722        case  HAL_DMA_XFER_ABORT_CB_ID:
;;;723          hdma->XferAbortCallback = pCallback;
;;;724          break; 
;;;725          
;;;726        default:
;;;727          status = HAL_ERROR;
;;;728          break;                                                            
;;;729        }
;;;730      }
;;;731      else
;;;732      {
;;;733        status = HAL_ERROR;
;;;734      } 
;;;735      
;;;736      /* Release Lock */
;;;737      __HAL_UNLOCK(hdma);
;;;738      
;;;739      return status;
;;;740    }
00000e  4770              BXEQ     lr
000010  f04f0c01          MOV      r12,#1                ;704
000014  f8c0c020          STR      r12,[r0,#0x20]        ;706
000018  f8d0c024          LDR      r12,[r0,#0x24]        ;706
00001c  f1bc0f01          CMP      r12,#1                ;706
000020  d10f              BNE      |L9.66|
000022  2900              CMP      r1,#0                 ;708
000024  bf08              IT       EQ                    ;711
000026  62c2              STREQ    r2,[r0,#0x2c]         ;711
000028  d00c              BEQ      |L9.68|
00002a  2901              CMP      r1,#1                 ;708
00002c  bf08              IT       EQ                    ;715
00002e  6302              STREQ    r2,[r0,#0x30]         ;715
000030  d008              BEQ      |L9.68|
000032  2902              CMP      r1,#2                 ;708
000034  bf08              IT       EQ                    ;719
000036  6342              STREQ    r2,[r0,#0x34]         ;719
000038  d004              BEQ      |L9.68|
00003a  2903              CMP      r1,#3                 ;708
00003c  bf08              IT       EQ                    ;723
00003e  6382              STREQ    r2,[r0,#0x38]         ;723
000040  d000              BEQ      |L9.68|
                  |L9.66|
000042  2301              MOVS     r3,#1                 ;727
                  |L9.68|
000044  2100              MOVS     r1,#0                 ;737
000046  6201              STR      r1,[r0,#0x20]         ;739
000048  4618              MOV      r0,r3                 ;739
00004a  4770              BX       lr
;;;741    
                          ENDP


                          AREA ||i.HAL_DMA_Start||, CODE, READONLY, ALIGN=1

                  HAL_DMA_Start PROC
;;;337      */
;;;338    HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
000000  b470              PUSH     {r4-r6}
;;;339    {
;;;340      HAL_StatusTypeDef status = HAL_OK;
;;;341    
;;;342      /* Check the parameters */
;;;343      assert_param(IS_DMA_BUFFER_SIZE(DataLength));
;;;344    
;;;345      /* Process locked */
;;;346      __HAL_LOCK(hdma);
000002  6a04              LDR      r4,[r0,#0x20]
000004  f04f0c00          MOV      r12,#0                ;340
000008  2c01              CMP      r4,#1
00000a  bf02              ITTT     EQ
00000c  2002              MOVEQ    r0,#2
;;;347    
;;;348      if(HAL_DMA_STATE_READY == hdma->State)
;;;349      {
;;;350        /* Change DMA peripheral state */
;;;351        hdma->State = HAL_DMA_STATE_BUSY;
;;;352        hdma->ErrorCode = HAL_DMA_ERROR_NONE;
;;;353                
;;;354        /* Disable the peripheral */
;;;355        __HAL_DMA_DISABLE(hdma);
;;;356        
;;;357        /* Configure the source, destination address and the data length & clear flags*/
;;;358        DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
;;;359        
;;;360        /* Enable the Peripheral */
;;;361        __HAL_DMA_ENABLE(hdma);
;;;362      }
;;;363      else
;;;364      {
;;;365       /* Process Unlocked */
;;;366       __HAL_UNLOCK(hdma);  
;;;367       status = HAL_BUSY;
;;;368      }  
;;;369      return status;
;;;370    }
00000e  bc70              POPEQ    {r4-r6}
000010  4770              BXEQ     lr
000012  2401              MOVS     r4,#1                 ;346
000014  6204              STR      r4,[r0,#0x20]         ;348
000016  6a46              LDR      r6,[r0,#0x24]         ;348
000018  2500              MOVS     r5,#0                 ;348
00001a  2e01              CMP      r6,#1                 ;348
00001c  bf1c              ITT      NE                    ;367
00001e  f04f0c02          MOVNE    r12,#2                ;367
000022  6205              STRNE    r5,[r0,#0x20]         ;367
000024  d002              BEQ      |L10.44|
                  |L10.38|
000026  bc70              POP      {r4-r6}
000028  4660              MOV      r0,r12                ;369
00002a  4770              BX       lr
                  |L10.44|
00002c  2602              MOVS     r6,#2                 ;351
00002e  6246              STR      r6,[r0,#0x24]         ;352
000030  63c5              STR      r5,[r0,#0x3c]         ;352
000032  6805              LDR      r5,[r0,#0]            ;355
000034  682e              LDR      r6,[r5,#0]            ;355
000036  f0260601          BIC      r6,r6,#1              ;355
00003a  602e              STR      r6,[r5,#0]            ;355
00003c  f8905044          LDRB     r5,[r0,#0x44]         ;355
000040  40ac              LSLS     r4,r4,r5              ;355
000042  6c05              LDR      r5,[r0,#0x40]         ;355
000044  606c              STR      r4,[r5,#4]            ;355
000046  6804              LDR      r4,[r0,#0]            ;355
000048  6063              STR      r3,[r4,#4]            ;355
00004a  6843              LDR      r3,[r0,#4]            ;355
00004c  2b10              CMP      r3,#0x10              ;355
00004e  6803              LDR      r3,[r0,#0]            ;355
000050  bf03              ITTTE    EQ                    ;355
000052  609a              STREQ    r2,[r3,#8]            ;355
000054  6802              LDREQ    r2,[r0,#0]            ;355
000056  60d1              STREQ    r1,[r2,#0xc]          ;355
000058  6099              STRNE    r1,[r3,#8]            ;355
00005a  bf1c              ITT      NE                    ;355
00005c  6801              LDRNE    r1,[r0,#0]            ;355
00005e  60ca              STRNE    r2,[r1,#0xc]          ;355
000060  6800              LDR      r0,[r0,#0]            ;361
000062  6801              LDR      r1,[r0,#0]            ;361
000064  f0410101          ORR      r1,r1,#1              ;361
000068  6001              STR      r1,[r0,#0]            ;361
00006a  e7dc              B        |L10.38|
;;;371    
                          ENDP


                          AREA ||i.HAL_DMA_Start_IT||, CODE, READONLY, ALIGN=1

                  HAL_DMA_Start_IT PROC
;;;380      */
;;;381    HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
000000  b470              PUSH     {r4-r6}
;;;382    {
;;;383      HAL_StatusTypeDef status = HAL_OK;
;;;384    
;;;385      /* Check the parameters */
;;;386      assert_param(IS_DMA_BUFFER_SIZE(DataLength));
;;;387    
;;;388      /* Process locked */
;;;389      __HAL_LOCK(hdma);
000002  6a04              LDR      r4,[r0,#0x20]
000004  f04f0c00          MOV      r12,#0                ;383
000008  2c01              CMP      r4,#1
00000a  bf02              ITTT     EQ
00000c  2002              MOVEQ    r0,#2
;;;390      
;;;391      if(HAL_DMA_STATE_READY == hdma->State)
;;;392      {
;;;393        /* Change DMA peripheral state */
;;;394        hdma->State = HAL_DMA_STATE_BUSY;
;;;395        hdma->ErrorCode = HAL_DMA_ERROR_NONE;
;;;396        
;;;397        /* Disable the peripheral */
;;;398        __HAL_DMA_DISABLE(hdma);
;;;399        
;;;400        /* Configure the source, destination address and the data length & clear flags*/
;;;401        DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
;;;402        
;;;403        /* Enable the transfer complete interrupt */
;;;404        /* Enable the transfer Error interrupt */
;;;405        if(NULL != hdma->XferHalfCpltCallback)
;;;406        {
;;;407          /* Enable the Half transfer complete interrupt as well */
;;;408          __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
;;;409        }
;;;410        else
;;;411        {
;;;412          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
;;;413          __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
;;;414        }
;;;415        /* Enable the Peripheral */
;;;416        __HAL_DMA_ENABLE(hdma);
;;;417      }
;;;418      else
;;;419      {      
;;;420        /* Process Unlocked */
;;;421        __HAL_UNLOCK(hdma); 
;;;422    
;;;423        /* Remain BUSY */
;;;424        status = HAL_BUSY;
;;;425      }    
;;;426      return status;
;;;427    }
00000e  bc70              POPEQ    {r4-r6}
000010  4770              BXEQ     lr
000012  2401              MOVS     r4,#1                 ;389
000014  6204              STR      r4,[r0,#0x20]         ;391
000016  6a46              LDR      r6,[r0,#0x24]         ;391
000018  2500              MOVS     r5,#0                 ;391
00001a  2e01              CMP      r6,#1                 ;391
00001c  bf1c              ITT      NE                    ;424
00001e  f04f0c02          MOVNE    r12,#2                ;424
000022  6205              STRNE    r5,[r0,#0x20]         ;424
000024  d002              BEQ      |L11.44|
                  |L11.38|
000026  bc70              POP      {r4-r6}
000028  4660              MOV      r0,r12                ;426
00002a  4770              BX       lr
                  |L11.44|
00002c  2602              MOVS     r6,#2                 ;394
00002e  6246              STR      r6,[r0,#0x24]         ;395
000030  63c5              STR      r5,[r0,#0x3c]         ;395
000032  6805              LDR      r5,[r0,#0]            ;398
000034  682e              LDR      r6,[r5,#0]            ;398
000036  f0260601          BIC      r6,r6,#1              ;398
00003a  602e              STR      r6,[r5,#0]            ;398
00003c  f8905044          LDRB     r5,[r0,#0x44]         ;398
000040  40ac              LSLS     r4,r4,r5              ;398
000042  6c05              LDR      r5,[r0,#0x40]         ;398
000044  606c              STR      r4,[r5,#4]            ;398
000046  6804              LDR      r4,[r0,#0]            ;398
000048  6063              STR      r3,[r4,#4]            ;398
00004a  6843              LDR      r3,[r0,#4]            ;398
00004c  2b10              CMP      r3,#0x10              ;398
00004e  6803              LDR      r3,[r0,#0]            ;398
000050  bf03              ITTTE    EQ                    ;398
000052  609a              STREQ    r2,[r3,#8]            ;398
000054  6802              LDREQ    r2,[r0,#0]            ;398
000056  60d1              STREQ    r1,[r2,#0xc]          ;398
000058  6099              STRNE    r1,[r3,#8]            ;398
00005a  bf1c              ITT      NE                    ;398
00005c  6801              LDRNE    r1,[r0,#0]            ;398
00005e  60ca              STRNE    r2,[r1,#0xc]          ;398
000060  6b01              LDR      r1,[r0,#0x30]         ;405
000062  2900              CMP      r1,#0                 ;405
000064  6801              LDR      r1,[r0,#0]            ;412
000066  680a              LDR      r2,[r1,#0]            ;412
000068  bf18              IT       NE                    ;408
00006a  f042020e          ORRNE    r2,r2,#0xe            ;408
00006e  d106              BNE      |L11.126|
000070  f0220204          BIC      r2,r2,#4              ;412
000074  600a              STR      r2,[r1,#0]            ;412
000076  6801              LDR      r1,[r0,#0]            ;413
000078  680a              LDR      r2,[r1,#0]            ;413
00007a  f042020a          ORR      r2,r2,#0xa            ;413
                  |L11.126|
00007e  600a              STR      r2,[r1,#0]            ;413
000080  6800              LDR      r0,[r0,#0]            ;416
000082  6801              LDR      r1,[r0,#0]            ;416
000084  f0410101          ORR      r1,r1,#1              ;416
000088  6001              STR      r1,[r0,#0]            ;416
00008a  e7cc              B        |L11.38|
;;;428    
                          ENDP


                          AREA ||i.HAL_DMA_UnRegisterCallback||, CODE, READONLY, ALIGN=1

                  HAL_DMA_UnRegisterCallback PROC
;;;749      */              
;;;750    HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef CallbackID)
000000  6a02              LDR      r2,[r0,#0x20]
;;;751    {
;;;752      HAL_StatusTypeDef status = HAL_OK;
000002  2300              MOVS     r3,#0
;;;753    
;;;754      /* Process locked */
;;;755      __HAL_LOCK(hdma);
000004  2a01              CMP      r2,#1
000006  bf04              ITT      EQ
000008  2002              MOVEQ    r0,#2
;;;756      
;;;757      if(HAL_DMA_STATE_READY == hdma->State)
;;;758      {
;;;759        switch (CallbackID)
;;;760        {
;;;761        case  HAL_DMA_XFER_CPLT_CB_ID:
;;;762          hdma->XferCpltCallback = NULL;
;;;763          break;
;;;764    
;;;765        case  HAL_DMA_XFER_HALFCPLT_CB_ID:
;;;766          hdma->XferHalfCpltCallback = NULL;
;;;767          break;         
;;;768    
;;;769        case  HAL_DMA_XFER_ERROR_CB_ID:
;;;770          hdma->XferErrorCallback = NULL;
;;;771          break;         
;;;772    
;;;773        case  HAL_DMA_XFER_ABORT_CB_ID:
;;;774          hdma->XferAbortCallback = NULL;
;;;775          break; 
;;;776    
;;;777        case   HAL_DMA_XFER_ALL_CB_ID:
;;;778          hdma->XferCpltCallback = NULL;
;;;779          hdma->XferHalfCpltCallback = NULL;
;;;780          hdma->XferErrorCallback = NULL;
;;;781          hdma->XferAbortCallback = NULL;
;;;782          break; 
;;;783    
;;;784        default:
;;;785          status = HAL_ERROR;
;;;786          break;
;;;787        }
;;;788      }
;;;789      else
;;;790      {
;;;791        status = HAL_ERROR;
;;;792      } 
;;;793      
;;;794      /* Release Lock */
;;;795      __HAL_UNLOCK(hdma);
;;;796      
;;;797      return status;
;;;798    }
00000a  4770              BXEQ     lr
00000c  2201              MOVS     r2,#1                 ;755
00000e  6202              STR      r2,[r0,#0x20]         ;757
000010  f8d0c024          LDR      r12,[r0,#0x24]        ;757
000014  2200              MOVS     r2,#0                 ;757
000016  f1bc0f01          CMP      r12,#1                ;757
00001a  d113              BNE      |L12.68|
00001c  2905              CMP      r1,#5                 ;759
00001e  d211              BCS      |L12.68|
000020  e8dff001          TBB      [pc,r1]               ;759
000024  03050709          DCB      0x03,0x05,0x07,0x09
000028  0b00              DCB      0x0b,0x00
00002a  62c2              STR      r2,[r0,#0x2c]         ;763
00002c  e00b              B        |L12.70|
00002e  6302              STR      r2,[r0,#0x30]         ;767
000030  e009              B        |L12.70|
000032  6342              STR      r2,[r0,#0x34]         ;771
000034  e007              B        |L12.70|
000036  6382              STR      r2,[r0,#0x38]         ;775
000038  e005              B        |L12.70|
00003a  62c2              STR      r2,[r0,#0x2c]         ;779
00003c  6302              STR      r2,[r0,#0x30]         ;780
00003e  6342              STR      r2,[r0,#0x34]         ;781
000040  6382              STR      r2,[r0,#0x38]         ;782
000042  e000              B        |L12.70|
                  |L12.68|
000044  2301              MOVS     r3,#1                 ;785
                  |L12.70|
000046  6202              STR      r2,[r0,#0x20]         ;797
000048  4618              MOV      r0,r3                 ;797
00004a  4770              BX       lr
;;;799      
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F1_V1.6.0\\Drivers\\STM32F1xx_HAL_Driver\\Src\\stm32f1xx_hal_dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_hal_dma_c_c25f65ec____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F1_V1.6.0\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___19_stm32f1xx_hal_dma_c_c25f65ec____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_hal_dma_c_c25f65ec____REVSH|
#line 402
|__asm___19_stm32f1xx_hal_dma_c_c25f65ec____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_hal_dma_c_c25f65ec____RRX|
#line 587
|__asm___19_stm32f1xx_hal_dma_c_c25f65ec____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
