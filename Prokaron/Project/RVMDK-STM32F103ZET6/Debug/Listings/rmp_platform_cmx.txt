; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\rmp_platform_cmx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\rmp_platform_cmx.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F1_V1.6.0\Drivers\STM32F1xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32Cube_FW_F1_V1.6.0\Drivers\CMSIS\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F1_V1.6.0\Drivers\CMSIS\Device\ST\STM32F1xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F1_V1.6.0\Drivers\STM32F1xx_HAL_Driver\Inc\Conf -I..\RVMDK-STM32F103ZET6 -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F103ZET6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F10X_HD -DUSE_HAL_DRIVER -DSTM32F103xE -W --enum_is_int --signed_chars --omf_browse=.\debug\output\rmp_platform_cmx.crf ..\..\MProkaron\Platform\CortexM\rmp_platform_cmx.c]
                          THUMB

                          AREA ||i.RMP_Putchar||, CODE, READONLY, ALIGN=2

                  RMP_Putchar PROC
;;;91     ******************************************************************************/
;;;92     void RMP_Putchar(char Char)
000000  4903              LDR      r1,|L1.16|
;;;93     {
;;;94         RMP_CMX_PUTCHAR(Char);
000002  6008              STR      r0,[r1,#0]
000004  1f08              SUBS     r0,r1,#4
                  |L1.6|
000006  6801              LDR      r1,[r0,#0]
000008  f0110f40          TST      r1,#0x40
00000c  d0fb              BEQ      |L1.6|
;;;95     }
00000e  4770              BX       lr
;;;96     /* End Function:RMP_Putchar **************************************************/
                          ENDP

                  |L1.16|
                          DCD      0x40013804

                          AREA ||i._RMP_Low_Level_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Low_Level_Init PROC
;;;65     ******************************************************************************/
;;;66     void _RMP_Low_Level_Init(void)
000000  b530              PUSH     {r4,r5,lr}
;;;67     {    
000002  b0a7              SUB      sp,sp,#0x9c
;;;68         RMP_CMX_LOW_LEVEL_INIT();
000004  f7fffffe          BL       HAL_Init
000008  2128              MOVS     r1,#0x28
00000a  a812              ADD      r0,sp,#0x48
00000c  f7fffffe          BL       RMP_Clear
000010  2114              MOVS     r1,#0x14
000012  a81c              ADD      r0,sp,#0x70
000014  f7fffffe          BL       RMP_Clear
000018  2148              MOVS     r1,#0x48
00001a  4668              MOV      r0,sp
00001c  f7fffffe          BL       RMP_Clear
000020  2110              MOVS     r1,#0x10
000022  a822              ADD      r0,sp,#0x88
000024  f7fffffe          BL       RMP_Clear
000028  2001              MOVS     r0,#1
00002a  9012              STR      r0,[sp,#0x48]
00002c  0400              LSLS     r0,r0,#16
00002e  2500              MOVS     r5,#0
000030  e9cd0513          STRD     r0,r5,[sp,#0x4c]
000034  2402              MOVS     r4,#2
000036  e9cd4019          STRD     r4,r0,[sp,#0x64]
00003a  f44f10e0          MOV      r0,#0x1c0000
00003e  901b              STR      r0,[sp,#0x6c]
000040  a812              ADD      r0,sp,#0x48
000042  f7fffffe          BL       HAL_RCC_OscConfig
000046  2800              CMP      r0,#0
000048  d01b              BEQ      |L2.130|
00004a  a056              ADR      r0,|L2.420|
00004c  f7fffffe          BL       RMP_Print_String
000050  a05e              ADR      r0,|L2.460|
000052  f7fffffe          BL       RMP_Print_String
000056  a06a              ADR      r0,|L2.512|
000058  f7fffffe          BL       RMP_Print_String
00005c  2044              MOVS     r0,#0x44
00005e  f7fffffe          BL       RMP_Print_Int
000062  a06a              ADR      r0,|L2.524|
000064  f7fffffe          BL       RMP_Print_String
000068  a069              ADR      r0,|L2.528|
00006a  f7fffffe          BL       RMP_Print_String
00006e  a06b              ADR      r0,|L2.540|
000070  f7fffffe          BL       RMP_Print_String
000074  a06a              ADR      r0,|L2.544|
000076  f7fffffe          BL       RMP_Print_String
00007a  a064              ADR      r0,|L2.524|
00007c  f7fffffe          BL       RMP_Print_String
                  |L2.128|
000080  e7fe              B        |L2.128|
                  |L2.130|
000082  200f              MOVS     r0,#0xf
000084  901c              STR      r0,[sp,#0x70]
000086  e9cd451d          STRD     r4,r5,[sp,#0x74]
00008a  f44f6080          MOV      r0,#0x400
00008e  e9cd051f          STRD     r0,r5,[sp,#0x7c]
000092  2102              MOVS     r1,#2
000094  a81c              ADD      r0,sp,#0x70
000096  f7fffffe          BL       HAL_RCC_ClockConfig
00009a  2800              CMP      r0,#0
00009c  d01b              BEQ      |L2.214|
00009e  a041              ADR      r0,|L2.420|
0000a0  f7fffffe          BL       RMP_Print_String
0000a4  a049              ADR      r0,|L2.460|
0000a6  f7fffffe          BL       RMP_Print_String
0000aa  a055              ADR      r0,|L2.512|
0000ac  f7fffffe          BL       RMP_Print_String
0000b0  2044              MOVS     r0,#0x44
0000b2  f7fffffe          BL       RMP_Print_Int
0000b6  a055              ADR      r0,|L2.524|
0000b8  f7fffffe          BL       RMP_Print_String
0000bc  a054              ADR      r0,|L2.528|
0000be  f7fffffe          BL       RMP_Print_String
0000c2  a056              ADR      r0,|L2.540|
0000c4  f7fffffe          BL       RMP_Print_String
0000c8  a055              ADR      r0,|L2.544|
0000ca  f7fffffe          BL       RMP_Print_String
0000ce  a04f              ADR      r0,|L2.524|
0000d0  f7fffffe          BL       RMP_Print_String
                  |L2.212|
0000d4  e7fe              B        |L2.212|
                  |L2.214|
0000d6  4855              LDR      r0,|L2.556|
0000d8  6801              LDR      r1,[r0,#0]
0000da  f0410110          ORR      r1,r1,#0x10
0000de  6001              STR      r1,[r0,#0]
0000e0  4853              LDR      r0,|L2.560|
0000e2  6981              LDR      r1,[r0,#0x18]
0000e4  f0410104          ORR      r1,r1,#4
0000e8  6181              STR      r1,[r0,#0x18]
0000ea  6981              LDR      r1,[r0,#0x18]
0000ec  f0010104          AND      r1,r1,#4
0000f0  9121              STR      r1,[sp,#0x84]
0000f2  6981              LDR      r1,[r0,#0x18]
0000f4  f4414180          ORR      r1,r1,#0x4000
0000f8  6181              STR      r1,[r0,#0x18]
0000fa  6980              LDR      r0,[r0,#0x18]
0000fc  a922              ADD      r1,sp,#0x88
0000fe  f4004080          AND      r0,r0,#0x4000
000102  9021              STR      r0,[sp,#0x84]
000104  f44f7000          MOV      r0,#0x200
000108  e9cd0422          STRD     r0,r4,[sp,#0x88]
00010c  2003              MOVS     r0,#3
00010e  9025              STR      r0,[sp,#0x94]
000110  4848              LDR      r0,|L2.564|
000112  f7fffffe          BL       HAL_GPIO_Init
000116  4c48              LDR      r4,|L2.568|
000118  f44f30e1          MOV      r0,#0x1c200
00011c  9400              STR      r4,[sp,#0]
00011e  e9cd0501          STRD     r0,r5,[sp,#4]
000122  9503              STR      r5,[sp,#0xc]
000124  2008              MOVS     r0,#8
000126  9504              STR      r5,[sp,#0x10]
000128  e9cd0505          STRD     r0,r5,[sp,#0x14]
00012c  4668              MOV      r0,sp
00012e  f7fffffe          BL       HAL_UART_Init
000132  200d              MOVS     r0,#0xd
000134  1d21              ADDS     r1,r4,#4
000136  6008              STR      r0,[r1,#0]
                  |L2.312|
000138  6820              LDR      r0,[r4,#0]
00013a  f0100f40          TST      r0,#0x40
00013e  d0fb              BEQ      |L2.312|
000140  200a              MOVS     r0,#0xa
000142  6008              STR      r0,[r1,#0]
                  |L2.324|
000144  6820              LDR      r0,[r4,#0]
000146  f0100f40          TST      r0,#0x40
00014a  d0fb              BEQ      |L2.324|
00014c  483b              LDR      r0,|L2.572|
00014e  6801              LDR      r1,[r0,#0]
000150  f44121e0          ORR      r1,r1,#0x70000
000154  6001              STR      r1,[r0,#0]
000156  483a              LDR      r0,|L2.576|
000158  6801              LDR      r1,[r0,#0]
00015a  f64f02ff          MOV      r2,#0xf8ff
00015e  4011              ANDS     r1,r1,r2
000160  f44161a0          ORR      r1,r1,#0x500
000164  f04171fd          ORR      r1,r1,#0x1fa0000
000168  f0416180          ORR      r1,r1,#0x4000000
00016c  6001              STR      r1,[r0,#0]
00016e  4935              LDR      r1,|L2.580|
000170  20f0              MOVS     r0,#0xf0
000172  7008              STRB     r0,[r1,#0]
000174  1cc9              ADDS     r1,r1,#3
000176  7008              STRB     r0,[r1,#0]
000178  1c4a              ADDS     r2,r1,#1
00017a  7010              STRB     r0,[r2,#0]
00017c  4932              LDR      r1,|L2.584|
00017e  7008              STRB     r0,[r1,#0]
000180  1c49              ADDS     r1,r1,#1
000182  7008              STRB     r0,[r1,#0]
000184  1d89              ADDS     r1,r1,#6
000186  7008              STRB     r0,[r1,#0]
000188  f04f21e0          MOV      r1,#0xe000e000
00018c  f641431f          MOV      r3,#0x1c1f
000190  614b              STR      r3,[r1,#0x14]
000192  7010              STRB     r0,[r2,#0]
000194  618d              STR      r5,[r1,#0x18]
000196  2007              MOVS     r0,#7
000198  6108              STR      r0,[r1,#0x10]
;;;69       
;;;70         RMP_Disable_Int();
00019a  b027              ADD      sp,sp,#0x9c
00019c  e8bd4030          POP      {r4,r5,lr}
0001a0  f7ffbffe          B.W      RMP_Disable_Int
;;;71     }
;;;72     /* End Function:_RMP_Low_Level_Init ******************************************/
                          ENDP

                  |L2.420|
0001a4  0d0a2a2a          DCB      "\r\n***\r\nKernel panic - not syncing:\r\n",0
0001a8  2a0d0a4b
0001ac  65726e65
0001b0  6c207061
0001b4  6e696320
0001b8  2d206e6f
0001bc  74207379
0001c0  6e63696e
0001c4  673a0d0a
0001c8  00      
0001c9  00                DCB      0
0001ca  00                DCB      0
0001cb  00                DCB      0
                  |L2.460|
0001cc  2e2e5c2e          DCB      "..\\..\\MProkaron\\Platform\\CortexM\\rmp_platform_cmx."
0001d0  2e5c4d50
0001d4  726f6b61
0001d8  726f6e5c
0001dc  506c6174
0001e0  666f726d
0001e4  5c436f72
0001e8  7465784d
0001ec  5c726d70
0001f0  5f706c61
0001f4  74666f72
0001f8  6d5f636d
0001fc  782e    
0001fe  6300              DCB      "c",0
                  |L2.512|
000200  202c204c          DCB      " , Line ",0
000204  696e6520
000208  00      
000209  00                DCB      0
00020a  00                DCB      0
00020b  00                DCB      0
                  |L2.524|
00020c  0d0a00            DCB      "\r\n",0
00020f  00                DCB      0
                  |L2.528|
000210  4f637420          DCB      "Oct 17 2018",0
000214  31372032
000218  30313800
                  |L2.540|
00021c  202c2000          DCB      " , ",0
                  |L2.544|
000220  31363a32          DCB      "16:22:03",0
000224  323a3033
000228  00      
000229  00                DCB      0
00022a  00                DCB      0
00022b  00                DCB      0
                  |L2.556|
                          DCD      0x40022000
                  |L2.560|
                          DCD      0x40021000
                  |L2.564|
                          DCD      0x40010800
                  |L2.568|
                          DCD      0x40013800
                  |L2.572|
                          DCD      0xe000ed24
                  |L2.576|
                          DCD      0xe000ed0c
                  |L2.580|
                          DCD      0xe000ed1f
                  |L2.584|
                          DCD      0xe000ed19

                          AREA ||i._RMP_Plat_Hook||, CODE, READONLY, ALIGN=1

                  _RMP_Plat_Hook PROC
;;;79     ******************************************************************************/
;;;80     void _RMP_Plat_Hook(void)
000000  f7ffbffe          B.W      RMP_Enable_Int
;;;81     {
;;;82         RMP_Enable_Int();
;;;83     }
;;;84     /* End Function:_RMP_Plat_Hook ***********************************************/
                          ENDP


                          AREA ||i._RMP_Stack_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Stack_Init PROC
;;;45     ******************************************************************************/
;;;46     void _RMP_Stack_Init(rmp_ptr_t Entry, rmp_ptr_t Stack, rmp_ptr_t Arg)
000000  63c8              STR      r0,[r1,#0x3c]
;;;47     {
;;;48         /* The "9" here is because we also pushed other registers to PSP */
;;;49         /* This is the LR value indicating that we never used the FPU */
;;;50         ((rmp_ptr_t*)Stack)[0+8]=0xFFFFFFFD;    
;;;51         /* CM3:Pass the parameter */                            
;;;52         ((rmp_ptr_t*)Stack)[0+9]=Arg;       
;;;53         /* CM3:for xPSR. fill the T bit,or an INVSTATE will happen */
;;;54         ((rmp_ptr_t*)Stack)[6+9]=Entry;
;;;55         /* CM3:Set the process entrance */                            
;;;56         ((rmp_ptr_t*)Stack)[7+9]=0x01000200;      
000002  4803              LDR      r0,|L4.16|
000004  f06f0302          MVN      r3,#2                 ;50
000008  6408              STR      r0,[r1,#0x40]
00000a  e9c13208          STRD     r3,r2,[r1,#0x20]
;;;57     }
00000e  4770              BX       lr
;;;58     /* End Function:_RMP_Stack_Init **********************************************/
                          ENDP

                  |L4.16|
                          DCD      0x01000200

;*** Start embedded assembler ***

#line 1 "..\\..\\MProkaron\\Platform\\CortexM\\rmp_platform_cmx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_rmp_platform_cmx_c_203ac359____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F1_V1.6.0\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_rmp_platform_cmx_c_203ac359____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_rmp_platform_cmx_c_203ac359____REVSH|
#line 402
|__asm___18_rmp_platform_cmx_c_203ac359____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_rmp_platform_cmx_c_203ac359____RRX|
#line 587
|__asm___18_rmp_platform_cmx_c_203ac359____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
