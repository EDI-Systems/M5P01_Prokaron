; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\test.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\test.d --cpu=Cortex-M0+ --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\STM32L0xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\CMSIS\Device\ST\STM32L0xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\CMSIS\Include -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\STM32L0xx_HAL_Driver\Inc\Conf -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32L053C8T6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32L0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32L0xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32L053xx -DSTM32L0xx -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\test.crf ..\..\MProkaron\Benchmark\test.c]
                          THUMB

                          AREA ||i.Func_1||, CODE, READONLY, ALIGN=2

                  Func_1 PROC
;;;78     
;;;79     void Func_1(void)
000000  2700              MOVS     r7,#0
000002  2501              MOVS     r5,#1
000004  4c14              LDR      r4,|L1.88|
000006  4e15              LDR      r6,|L1.92|
000008  07ad              LSLS     r5,r5,#30
                  |L1.10|
00000a  6a68              LDR      r0,[r5,#0x24]
00000c  8020              STRH     r0,[r4,#0]
00000e  f7fffffe          BL       RMP_Yield
000012  1c7f              ADDS     r7,r7,#1
000014  42b7              CMP      r7,r6
000016  dbf8              BLT      |L1.10|
;;;80     {
;;;81         Test_Yield_1();
;;;82         /* Change priority of thread 2 */
;;;83         RMP_Thd_Set(&Thd_2,2,RMP_MAX_SLICES);
000018  4f11              LDR      r7,|L1.96|
00001a  2102              MOVS     r1,#2
00001c  463a              MOV      r2,r7
00001e  4811              LDR      r0,|L1.100|
000020  f7fffffe          BL       RMP_Thd_Set
000024  2000              MOVS     r0,#0
000026  6220              STR      r0,[r4,#0x20]  ; Count
                  |L1.40|
000028  6a68              LDR      r0,[r5,#0x24]
00002a  8020              STRH     r0,[r4,#0]
00002c  463a              MOV      r2,r7
00002e  2101              MOVS     r1,#1
000030  480c              LDR      r0,|L1.100|
000032  f7fffffe          BL       RMP_Thd_Snd
000036  6a20              LDR      r0,[r4,#0x20]  ; Count
000038  1c40              ADDS     r0,r0,#1
00003a  6220              STR      r0,[r4,#0x20]  ; Count
00003c  42b0              CMP      r0,r6
00003e  dbf3              BLT      |L1.40|
000040  2700              MOVS     r7,#0
                  |L1.66|
000042  6a68              LDR      r0,[r5,#0x24]
000044  8020              STRH     r0,[r4,#0]
000046  2101              MOVS     r1,#1
000048  4807              LDR      r0,|L1.104|
00004a  f7fffffe          BL       RMP_Sem_Post
00004e  1c7f              ADDS     r7,r7,#1
000050  42b7              CMP      r7,r6
000052  dbf6              BLT      |L1.66|
                  |L1.84|
;;;84         Test_Mail_1();
;;;85         Test_Sem_1();
;;;86         while(1);
000054  e7fe              B        |L1.84|
;;;87     }
;;;88     /* End Function:Test_Yield ***************************************************/
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
                          DCD      ||.data||
                  |L1.92|
                          DCD      0x00002710
                  |L1.96|
                          DCD      0x000186a0
                  |L1.100|
                          DCD      ||.bss||+0x8b4
                  |L1.104|
                          DCD      ||.bss||+0x8f0

                          AREA ||i.Func_2||, CODE, READONLY, ALIGN=2

                  Func_2 PROC
;;;261    
;;;262    void Func_2(void)
000000  4c6b              LDR      r4,|L2.432|
;;;263    {
000002  b082              SUB      sp,sp,#8
;;;264        /* Yield tests */
;;;265        Total=0;
000004  2000              MOVS     r0,#0
000006  6060              STR      r0,[r4,#4]  ; Total
000008  2501              MOVS     r5,#1
00000a  4606              MOV      r6,r0
00000c  07ad              LSLS     r5,r5,#30
00000e  4f69              LDR      r7,|L2.436|
                  |L2.16|
000010  f7fffffe          BL       RMP_Yield
000014  6a68              LDR      r0,[r5,#0x24]
000016  8060              STRH     r0,[r4,#2]
000018  8860              LDRH     r0,[r4,#2]  ; End
00001a  8821              LDRH     r1,[r4,#0]  ; Start
00001c  1a40              SUBS     r0,r0,r1
00001e  6861              LDR      r1,[r4,#4]  ; Total
000020  b280              UXTH     r0,r0
000022  1840              ADDS     r0,r0,r1
000024  6060              STR      r0,[r4,#4]  ; Total
000026  1c76              ADDS     r6,r6,#1
000028  42be              CMP      r6,r7
00002a  dbf1              BLT      |L2.16|
;;;266        Test_Yield_2();
;;;267        RMP_PRINTK_S("Yield: ");
00002c  a062              ADR      r0,|L2.440|
00002e  f7fffffe          BL       RMP_Print_String
;;;268        
;;;269        Yield_Time=Total/10000;
000032  4639              MOV      r1,r7
000034  6860              LDR      r0,[r4,#4]  ; Total
000036  f7fffffe          BL       __aeabi_uidivmod
00003a  60e0              STR      r0,[r4,#0xc]  ; Yield_Time
;;;270        RMP_PRINTK_I(Yield_Time);
00003c  68e0              LDR      r0,[r4,#0xc]  ; Yield_Time
00003e  f7fffffe          BL       RMP_Print_Int
;;;271        RMP_PRINTK_S(" cycles.\r\n");
000042  a05f              ADR      r0,|L2.448|
000044  f7fffffe          BL       RMP_Print_String
;;;272        /* Change priority of thread 2, just in case */
;;;273        RMP_Thd_Set(&Thd_2,2,RMP_MAX_SLICES);
000048  4a60              LDR      r2,|L2.460|
00004a  2102              MOVS     r1,#2
00004c  4860              LDR      r0,|L2.464|
00004e  f7fffffe          BL       RMP_Thd_Set
;;;274        
;;;275        /* Mailbox tests */
;;;276        Total=0;
000052  2000              MOVS     r0,#0
000054  6060              STR      r0,[r4,#4]  ; Total
000056  4e5d              LDR      r6,|L2.460|
000058  4607              MOV      r7,r0                 ;273
                  |L2.90|
00005a  4631              MOV      r1,r6                 ;273
00005c  4668              MOV      r0,sp                 ;273
00005e  f7fffffe          BL       RMP_Thd_Rcv
000062  6a68              LDR      r0,[r5,#0x24]         ;273
000064  8060              STRH     r0,[r4,#2]            ;273
000066  8860              LDRH     r0,[r4,#2]            ;273  ; End
000068  8821              LDRH     r1,[r4,#0]            ;273  ; Start
00006a  1a40              SUBS     r0,r0,r1              ;273
00006c  6861              LDR      r1,[r4,#4]            ;273  ; Total
00006e  b280              UXTH     r0,r0                 ;273
000070  1840              ADDS     r0,r0,r1              ;273
000072  6060              STR      r0,[r4,#4]            ;273  ; Total
000074  484f              LDR      r0,|L2.436|
000076  1c7f              ADDS     r7,r7,#1              ;273
000078  4287              CMP      r7,r0                 ;273
00007a  dbee              BLT      |L2.90|
;;;277        Test_Mail_2();
;;;278        RMP_PRINTK_S("Mailbox: ");
00007c  a055              ADR      r0,|L2.468|
00007e  f7fffffe          BL       RMP_Print_String
;;;279        Mailbox_Time=Total/10000;
000082  494c              LDR      r1,|L2.436|
000084  6860              LDR      r0,[r4,#4]  ; Total
000086  f7fffffe          BL       __aeabi_uidivmod
00008a  6120              STR      r0,[r4,#0x10]  ; Mailbox_Time
;;;280        RMP_PRINTK_I(Mailbox_Time);
00008c  6920              LDR      r0,[r4,#0x10]  ; Mailbox_Time
00008e  f7fffffe          BL       RMP_Print_Int
;;;281        RMP_PRINTK_S(" cycles.\r\n");
000092  a04b              ADR      r0,|L2.448|
000094  f7fffffe          BL       RMP_Print_String
;;;282        
;;;283        /* Semaphore tests */
;;;284        Total=0;
000098  2000              MOVS     r0,#0
00009a  6060              STR      r0,[r4,#4]  ; Total
00009c  4607              MOV      r7,r0
                  |L2.158|
00009e  4631              MOV      r1,r6
0000a0  484f              LDR      r0,|L2.480|
0000a2  f7fffffe          BL       RMP_Sem_Pend
0000a6  6a68              LDR      r0,[r5,#0x24]
0000a8  8060              STRH     r0,[r4,#2]
0000aa  8860              LDRH     r0,[r4,#2]  ; End
0000ac  8821              LDRH     r1,[r4,#0]  ; Start
0000ae  1a40              SUBS     r0,r0,r1
0000b0  6861              LDR      r1,[r4,#4]  ; Total
0000b2  b280              UXTH     r0,r0
0000b4  1840              ADDS     r0,r0,r1
0000b6  6060              STR      r0,[r4,#4]  ; Total
0000b8  483e              LDR      r0,|L2.436|
0000ba  1c7f              ADDS     r7,r7,#1
0000bc  4287              CMP      r7,r0
0000be  dbee              BLT      |L2.158|
;;;285        Test_Sem_2();
;;;286        RMP_PRINTK_S("Semaphore: ");
0000c0  a048              ADR      r0,|L2.484|
0000c2  f7fffffe          BL       RMP_Print_String
;;;287        Semaphore_Time=Total/10000;
0000c6  493b              LDR      r1,|L2.436|
0000c8  6860              LDR      r0,[r4,#4]  ; Total
0000ca  f7fffffe          BL       __aeabi_uidivmod
0000ce  6160              STR      r0,[r4,#0x14]  ; Semaphore_Time
;;;288        RMP_PRINTK_I(Semaphore_Time);
0000d0  6960              LDR      r0,[r4,#0x14]  ; Semaphore_Time
0000d2  f7fffffe          BL       RMP_Print_Int
;;;289        RMP_PRINTK_S(" cycles.\r\n");
0000d6  a03a              ADR      r0,|L2.448|
0000d8  f7fffffe          BL       RMP_Print_String
;;;290    
;;;291        /* Mailbox from interrupt tests */
;;;292        Total=0;
0000dc  2000              MOVS     r0,#0
0000de  6060              STR      r0,[r4,#4]  ; Total
0000e0  4f44              LDR      r7,|L2.500|
0000e2  4843              LDR      r0,|L2.496|
0000e4  6038              STR      r0,[r7,#0]  ; TIM21_Handle
0000e6  2000              MOVS     r0,#0
0000e8  6078              STR      r0,[r7,#4]  ; TIM21_Handle
0000ea  2010              MOVS     r0,#0x10
0000ec  60b8              STR      r0,[r7,#8]  ; TIM21_Handle
0000ee  20e1              MOVS     r0,#0xe1
0000f0  0100              LSLS     r0,r0,#4
0000f2  60f8              STR      r0,[r7,#0xc]  ; TIM21_Handle
0000f4  2000              MOVS     r0,#0
0000f6  6138              STR      r0,[r7,#0x10]  ; TIM21_Handle
0000f8  4638              MOV      r0,r7
0000fa  f7fffffe          BL       HAL_TIM_Base_Init
0000fe  483e              LDR      r0,|L2.504|
000100  6b41              LDR      r1,[r0,#0x34]
000102  2204              MOVS     r2,#4
000104  4311              ORRS     r1,r1,r2
000106  6341              STR      r1,[r0,#0x34]
000108  6838              LDR      r0,[r7,#0]  ; TIM21_Handle
00010a  6801              LDR      r1,[r0,#0]
00010c  2201              MOVS     r2,#1
00010e  4311              ORRS     r1,r1,r2
000110  6001              STR      r1,[r0,#0]
000112  6839              LDR      r1,[r7,#0]  ; TIM21_Handle
000114  1ed0              SUBS     r0,r2,#3
000116  6108              STR      r0,[r1,#0x10]
000118  4638              MOV      r0,r7
00011a  f7fffffe          BL       HAL_TIM_Base_Start_IT
00011e  2000              MOVS     r0,#0
000120  4f24              LDR      r7,|L2.436|
000122  6260              STR      r0,[r4,#0x24]  ; Count
                  |L2.292|
000124  4631              MOV      r1,r6
000126  4668              MOV      r0,sp
000128  f7fffffe          BL       RMP_Thd_Rcv
00012c  6a68              LDR      r0,[r5,#0x24]
00012e  8060              STRH     r0,[r4,#2]
000130  8860              LDRH     r0,[r4,#2]  ; End
000132  8821              LDRH     r1,[r4,#0]  ; Start
000134  1a40              SUBS     r0,r0,r1
000136  6861              LDR      r1,[r4,#4]  ; Total
000138  b280              UXTH     r0,r0
00013a  1840              ADDS     r0,r0,r1
00013c  6060              STR      r0,[r4,#4]  ; Total
00013e  6a60              LDR      r0,[r4,#0x24]  ; Count
000140  1c40              ADDS     r0,r0,#1
000142  6260              STR      r0,[r4,#0x24]  ; Count
000144  42b8              CMP      r0,r7
000146  dbed              BLT      |L2.292|
;;;293        Int_Init();
;;;294        Test_Mail_ISR();
;;;295        
;;;296        /* Semaphore from interrupt tests */
;;;297        Temp=Total;
000148  6860              LDR      r0,[r4,#4]  ; Total
00014a  60a0              STR      r0,[r4,#8]  ; Temp
;;;298        Total=0;
00014c  2000              MOVS     r0,#0
00014e  6060              STR      r0,[r4,#4]  ; Total
000150  62a0              STR      r0,[r4,#0x28]  ; Count
                  |L2.338|
000152  4631              MOV      r1,r6
000154  4822              LDR      r0,|L2.480|
000156  f7fffffe          BL       RMP_Sem_Pend
00015a  6a68              LDR      r0,[r5,#0x24]
00015c  8060              STRH     r0,[r4,#2]
00015e  8860              LDRH     r0,[r4,#2]  ; End
000160  8821              LDRH     r1,[r4,#0]  ; Start
000162  1a40              SUBS     r0,r0,r1
000164  6861              LDR      r1,[r4,#4]  ; Total
000166  b280              UXTH     r0,r0
000168  1840              ADDS     r0,r0,r1
00016a  6060              STR      r0,[r4,#4]  ; Total
00016c  6aa0              LDR      r0,[r4,#0x28]  ; Count
00016e  1c40              ADDS     r0,r0,#1
000170  62a0              STR      r0,[r4,#0x28]  ; Count
000172  42b8              CMP      r0,r7
000174  dbed              BLT      |L2.338|
;;;299        Test_Sem_ISR();
;;;300        
;;;301        RMP_PRINTK_S("Mailbox-ISR: ");
000176  a021              ADR      r0,|L2.508|
000178  f7fffffe          BL       RMP_Print_String
;;;302        Mailbox_ISR_Time=Temp/10000;
00017c  4639              MOV      r1,r7
00017e  68a0              LDR      r0,[r4,#8]  ; Temp
000180  f7fffffe          BL       __aeabi_uidivmod
000184  61a0              STR      r0,[r4,#0x18]  ; Mailbox_ISR_Time
;;;303        RMP_PRINTK_I(Mailbox_ISR_Time);
000186  69a0              LDR      r0,[r4,#0x18]  ; Mailbox_ISR_Time
000188  f7fffffe          BL       RMP_Print_Int
;;;304        RMP_PRINTK_S(" cycles.\r\n");
00018c  a00c              ADR      r0,|L2.448|
00018e  f7fffffe          BL       RMP_Print_String
;;;305        RMP_PRINTK_S("Semaphore-ISR: ");
000192  a01e              ADR      r0,|L2.524|
000194  f7fffffe          BL       RMP_Print_String
;;;306        Semaphore_ISR_Time=Total/10000;
000198  4639              MOV      r1,r7
00019a  6860              LDR      r0,[r4,#4]  ; Total
00019c  f7fffffe          BL       __aeabi_uidivmod
0001a0  61e0              STR      r0,[r4,#0x1c]  ; Semaphore_ISR_Time
;;;307        RMP_PRINTK_I(Semaphore_ISR_Time);
0001a2  69e0              LDR      r0,[r4,#0x1c]  ; Semaphore_ISR_Time
0001a4  f7fffffe          BL       RMP_Print_Int
;;;308        RMP_PRINTK_S(" cycles.\r\n");
0001a8  a005              ADR      r0,|L2.448|
0001aa  f7fffffe          BL       RMP_Print_String
                  |L2.430|
;;;309        
;;;310        /* Memory pool tests */
;;;311    #ifdef TEST_MEM_POOL
;;;312        Test_Mem_Pool();
;;;313    #endif
;;;314        
;;;315        while(1);
0001ae  e7fe              B        |L2.430|
;;;316    }
;;;317    /* End Function:Func_2 *******************************************************/
                          ENDP

                  |L2.432|
                          DCD      ||.data||
                  |L2.436|
                          DCD      0x00002710
                  |L2.440|
0001b8  5969656c          DCB      "Yield: ",0
0001bc  643a2000
                  |L2.448|
0001c0  20637963          DCB      " cycles.\r\n",0
0001c4  6c65732e
0001c8  0d0a00  
0001cb  00                DCB      0
                  |L2.460|
                          DCD      0x000186a0
                  |L2.464|
                          DCD      ||.bss||+0x8b4
                  |L2.468|
0001d4  4d61696c          DCB      "Mailbox: ",0
0001d8  626f783a
0001dc  2000    
0001de  00                DCB      0
0001df  00                DCB      0
                  |L2.480|
                          DCD      ||.bss||+0x8f0
                  |L2.484|
0001e4  53656d61          DCB      "Semaphore: ",0
0001e8  70686f72
0001ec  653a2000
                  |L2.496|
                          DCD      0x40010800
                  |L2.500|
                          DCD      ||.bss||+0x3c
                  |L2.504|
                          DCD      0x40021000
                  |L2.508|
0001fc  4d61696c          DCB      "Mailbox-ISR: ",0
000200  626f782d
000204  4953523a
000208  2000    
00020a  00                DCB      0
00020b  00                DCB      0
                  |L2.524|
00020c  53656d61          DCB      "Semaphore-ISR: ",0
000210  70686f72
000214  652d4953
000218  523a2000

                          AREA ||i.HAL_TIM_Base_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspInit PROC
;;;77     
;;;78     void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
000000  6800              LDR      r0,[r0,#0]
;;;79     {
;;;80     	if(htim->Instance==TIM21) 
000002  490a              LDR      r1,|L3.44|
000004  4288              CMP      r0,r1
000006  d10f              BNE      |L3.40|
000008  4809              LDR      r0,|L3.48|
00000a  6801              LDR      r1,[r0,#0]            ;79
00000c  22c0              MOVS     r2,#0xc0              ;79
00000e  0a09              LSRS     r1,r1,#8              ;79
000010  0209              LSLS     r1,r1,#8              ;79
000012  4311              ORRS     r1,r1,r2              ;79
000014  6001              STR      r1,[r0,#0]            ;79
000016  2001              MOVS     r0,#1                 ;79
000018  4906              LDR      r1,|L3.52|
00001a  0500              LSLS     r0,r0,#20             ;79
00001c  6008              STR      r0,[r1,#0]            ;79
;;;81         {
;;;82     		/* Set the interrupt priority */
;;;83     		NVIC_SetPriority(TIM21_IRQn,0xFF);
;;;84     		/* Enable timer 21 interrupt */
;;;85     		NVIC_EnableIRQ(TIM21_IRQn);
;;;86     		/* Enable timer 21 clock */
;;;87     		__HAL_RCC_TIM21_CLK_ENABLE();
00001e  4806              LDR      r0,|L3.56|
000020  6b41              LDR      r1,[r0,#0x34]
000022  2204              MOVS     r2,#4
000024  4311              ORRS     r1,r1,r2
000026  6341              STR      r1,[r0,#0x34]
                  |L3.40|
;;;88     	}
;;;89     }
000028  4770              BX       lr
;;;90     
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      0x40010800
                  |L3.48|
                          DCD      0xe000e414
                  |L3.52|
                          DCD      0xe000e100
                  |L3.56|
                          DCD      0x40021000

                          AREA ||i.Int_Disable||, CODE, READONLY, ALIGN=2

                  Int_Disable PROC
;;;105    ******************************************************************************/
;;;106    void Int_Disable(void)
000000  2001              MOVS     r0,#1
000002  4902              LDR      r1,|L4.12|
000004  0500              LSLS     r0,r0,#20
000006  6008              STR      r0,[r1,#0]
;;;107    {
;;;108        /* Disable timer 21 interrupt */
;;;109        NVIC_DisableIRQ(TIM21_IRQn);
;;;110    }
000008  4770              BX       lr
;;;111    #endif
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0xe000e180

                          AREA ||i.Int_Handler||, CODE, READONLY, ALIGN=2

                  Int_Handler PROC
;;;324    ******************************************************************************/
;;;325    void Int_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;326    {
;;;327        static cnt_t Count=0;
;;;328        
;;;329        if(Count<10000)
000002  4c1a              LDR      r4,|L5.108|
000004  4b1a              LDR      r3,|L5.112|
;;;330        {
;;;331            Count++;
;;;332            Start=COUNTER_READ();
000006  6ae1              LDR      r1,[r4,#0x2c]  ; Count
000008  069a              LSLS     r2,r3,#26
00000a  1c48              ADDS     r0,r1,#1
00000c  4299              CMP      r1,r3                 ;329
00000e  da12              BGE      |L5.54|
000010  62e0              STR      r0,[r4,#0x2c]  ; Count
000012  6a50              LDR      r0,[r2,#0x24]
000014  8020              STRH     r0,[r4,#0]
;;;333            if(RMP_Thd_Snd_ISR(&Thd_2, 1)<0)
000016  2101              MOVS     r1,#1
000018  4816              LDR      r0,|L5.116|
00001a  f7fffffe          BL       RMP_Thd_Snd_ISR
00001e  2800              CMP      r0,#0
000020  da23              BGE      |L5.106|
;;;334            {
;;;335                RMP_PRINTK_S("ISR Mailbox send failure: ");
000022  a015              ADR      r0,|L5.120|
000024  f7fffffe          BL       RMP_Print_String
;;;336                RMP_PRINTK_I(Count);
000028  6ae0              LDR      r0,[r4,#0x2c]  ; Count
00002a  f7fffffe          BL       RMP_Print_Int
;;;337                RMP_PRINTK_S(" sends.\r\n");
00002e  a019              ADR      r0,|L5.148|
000030  f7fffffe          BL       RMP_Print_String
                  |L5.52|
;;;338                while(1);
000034  e7fe              B        |L5.52|
                  |L5.54|
;;;339            }
;;;340        }
;;;341        else if(Count<20000)
000036  4b1a              LDR      r3,|L5.160|
000038  4299              CMP      r1,r3
00003a  da12              BGE      |L5.98|
;;;342        {
;;;343            Count++;
;;;344            Start=COUNTER_READ();
00003c  62e0              STR      r0,[r4,#0x2c]  ; Count
00003e  6a50              LDR      r0,[r2,#0x24]
000040  8020              STRH     r0,[r4,#0]
;;;345            if(RMP_Sem_Post_ISR(&Sem_1, 1)<0)
000042  2101              MOVS     r1,#1
000044  4817              LDR      r0,|L5.164|
000046  f7fffffe          BL       RMP_Sem_Post_ISR
00004a  2800              CMP      r0,#0
00004c  da0d              BGE      |L5.106|
;;;346            {
;;;347                RMP_PRINTK_S("ISR semaphore post failure: ");
00004e  a016              ADR      r0,|L5.168|
000050  f7fffffe          BL       RMP_Print_String
;;;348                RMP_PRINTK_I(Count);
000054  6ae0              LDR      r0,[r4,#0x2c]  ; Count
000056  f7fffffe          BL       RMP_Print_Int
;;;349                RMP_PRINTK_S(" posts.\r\n");
00005a  a01b              ADR      r0,|L5.200|
00005c  f7fffffe          BL       RMP_Print_String
                  |L5.96|
;;;350                while(1);
000060  e7fe              B        |L5.96|
                  |L5.98|
000062  2001              MOVS     r0,#1
000064  491b              LDR      r1,|L5.212|
000066  0500              LSLS     r0,r0,#20
000068  6008              STR      r0,[r1,#0]
                  |L5.106|
;;;351            }
;;;352        }
;;;353        else
;;;354            Int_Disable();
;;;355    }
00006a  bd10              POP      {r4,pc}
;;;356    #endif
                          ENDP

                  |L5.108|
                          DCD      ||.data||
                  |L5.112|
                          DCD      0x00002710
                  |L5.116|
                          DCD      ||.bss||+0x8b4
                  |L5.120|
000078  49535220          DCB      "ISR Mailbox send failure: ",0
00007c  4d61696c
000080  626f7820
000084  73656e64
000088  20666169
00008c  6c757265
000090  3a2000  
000093  00                DCB      0
                  |L5.148|
000094  2073656e          DCB      " sends.\r\n",0
000098  64732e0d
00009c  0a00    
00009e  00                DCB      0
00009f  00                DCB      0
                  |L5.160|
                          DCD      0x00004e20
                  |L5.164|
                          DCD      ||.bss||+0x8f0
                  |L5.168|
0000a8  49535220          DCB      "ISR semaphore post failure: ",0
0000ac  73656d61
0000b0  70686f72
0000b4  6520706f
0000b8  73742066
0000bc  61696c75
0000c0  72653a20
0000c4  00      
0000c5  00                DCB      0
0000c6  00                DCB      0
0000c7  00                DCB      0
                  |L5.200|
0000c8  20706f73          DCB      " posts.\r\n",0
0000cc  74732e0d
0000d0  0a00    
0000d2  00                DCB      0
0000d3  00                DCB      0
                  |L5.212|
                          DCD      0xe000e180

                          AREA ||i.Int_Init||, CODE, READONLY, ALIGN=2

                  Int_Init PROC
;;;61     ******************************************************************************/
;;;62     void Int_Init(void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64         /* TIM21 clock = CPU clock */
;;;65         TIM21_Handle.Instance=TIM21;
000002  4c10              LDR      r4,|L6.68|
000004  480e              LDR      r0,|L6.64|
;;;66         TIM21_Handle.Init.Prescaler=0;
000006  6020              STR      r0,[r4,#0]  ; TIM21_Handle
;;;67         TIM21_Handle.Init.CounterMode=TIM_COUNTERMODE_DOWN;
000008  2110              MOVS     r1,#0x10
;;;68         TIM21_Handle.Init.Period=3600;
00000a  60a1              STR      r1,[r4,#8]  ; TIM21_Handle
00000c  2000              MOVS     r0,#0                 ;66
00000e  21e1              MOVS     r1,#0xe1
000010  6060              STR      r0,[r4,#4]  ; TIM21_Handle
000012  0109              LSLS     r1,r1,#4
;;;69         TIM21_Handle.Init.ClockDivision=TIM_CLOCKDIVISION_DIV1;
;;;70         HAL_TIM_Base_Init(&TIM21_Handle);
000014  60e1              STR      r1,[r4,#0xc]  ; TIM21_Handle
000016  6120              STR      r0,[r4,#0x10]  ; TIM21_Handle
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       HAL_TIM_Base_Init
;;;71         __HAL_RCC_TIM21_CLK_ENABLE();
00001e  480a              LDR      r0,|L6.72|
000020  6b41              LDR      r1,[r0,#0x34]
000022  2204              MOVS     r2,#4
000024  4311              ORRS     r1,r1,r2
000026  6341              STR      r1,[r0,#0x34]
;;;72         __HAL_TIM_ENABLE(&TIM21_Handle);
000028  6820              LDR      r0,[r4,#0]  ; TIM21_Handle
00002a  6801              LDR      r1,[r0,#0]
00002c  2201              MOVS     r2,#1
00002e  4311              ORRS     r1,r1,r2
000030  6001              STR      r1,[r0,#0]
;;;73     	/* Clear interrupt pending bit, because we used EGR to update the registers */
;;;74     	__HAL_TIM_CLEAR_IT(&TIM21_Handle, TIM_IT_UPDATE);
000032  6821              LDR      r1,[r4,#0]  ; TIM21_Handle
000034  1ed0              SUBS     r0,r2,#3
000036  6108              STR      r0,[r1,#0x10]
;;;75     	HAL_TIM_Base_Start_IT(&TIM21_Handle);
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       HAL_TIM_Base_Start_IT
;;;76     }
00003e  bd10              POP      {r4,pc}
;;;77     
                          ENDP

                  |L6.64|
                          DCD      0x40010800
                  |L6.68|
                          DCD      ||.bss||+0x3c
                  |L6.72|
                          DCD      0x40021000

                          AREA ||i.RMP_Init_Hook||, CODE, READONLY, ALIGN=2

                  RMP_Init_Hook PROC
;;;364    ******************************************************************************/
;;;365    void RMP_Init_Hook(void)
000000  b530              PUSH     {r4,r5,lr}
000002  4c1d              LDR      r4,|L7.120|
;;;366    {
000004  b083              SUB      sp,sp,#0xc
000006  2100              MOVS     r1,#0
000008  2001              MOVS     r0,#1
00000a  6061              STR      r1,[r4,#4]  ; TIM2_Handle
00000c  0780              LSLS     r0,r0,#30
00000e  60a1              STR      r1,[r4,#8]  ; TIM2_Handle
000010  6020              STR      r0,[r4,#0]  ; TIM2_Handle
000012  481a              LDR      r0,|L7.124|
000014  6121              STR      r1,[r4,#0x10]  ; TIM2_Handle
000016  60e0              STR      r0,[r4,#0xc]  ; TIM2_Handle
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       HAL_TIM_Base_Init
00001e  4818              LDR      r0,|L7.128|
000020  6b81              LDR      r1,[r0,#0x38]
000022  2501              MOVS     r5,#1
000024  4329              ORRS     r1,r1,r5
000026  6381              STR      r1,[r0,#0x38]
000028  6820              LDR      r0,[r4,#0]  ; TIM2_Handle
00002a  6801              LDR      r1,[r0,#0]
00002c  4329              ORRS     r1,r1,r5
00002e  6001              STR      r1,[r0,#0]
;;;367    #ifndef MINIMAL_SIZE
;;;368        /* Init the timer */
;;;369        Timer_Init();
;;;370        /* Clean up the structures */
;;;371        RMP_Clear(&Thd_1,sizeof(struct RMP_Thd));
000030  213c              MOVS     r1,#0x3c
000032  4814              LDR      r0,|L7.132|
000034  f7fffffe          BL       RMP_Clear
;;;372        RMP_Clear(&Thd_2,sizeof(struct RMP_Thd));
000038  213c              MOVS     r1,#0x3c
00003a  4813              LDR      r0,|L7.136|
00003c  f7fffffe          BL       RMP_Clear
;;;373        RMP_Clear(&Sem_1,sizeof(struct RMP_Sem));
000040  2110              MOVS     r1,#0x10
000042  4812              LDR      r0,|L7.140|
000044  f7fffffe          BL       RMP_Clear
;;;374        /* Create counting semaphore */
;;;375        RMP_Sem_Crt(&Sem_1,0);
000048  2100              MOVS     r1,#0
00004a  4810              LDR      r0,|L7.140|
00004c  f7fffffe          BL       RMP_Sem_Crt
;;;376        /* Start threads */
;;;377        RMP_Thd_Crt(&Thd_1, Func_1, THD1_STACK, (void*)0x1234, 1, 5);
000050  2405              MOVS     r4,#5
000052  4b0f              LDR      r3,|L7.144|
000054  4a0f              LDR      r2,|L7.148|
000056  4910              LDR      r1,|L7.152|
000058  480a              LDR      r0,|L7.132|
00005a  9500              STR      r5,[sp,#0]
00005c  9401              STR      r4,[sp,#4]
00005e  f7fffffe          BL       RMP_Thd_Crt
;;;378        RMP_Thd_Crt(&Thd_2, Func_2, THD2_STACK, (void*)0x4321, 1, 5);
000062  4b0e              LDR      r3,|L7.156|
000064  4a0e              LDR      r2,|L7.160|
000066  490f              LDR      r1,|L7.164|
000068  4807              LDR      r0,|L7.136|
00006a  9500              STR      r5,[sp,#0]
00006c  9401              STR      r4,[sp,#4]
00006e  f7fffffe          BL       RMP_Thd_Crt
;;;379    #endif
;;;380    }
000072  b003              ADD      sp,sp,#0xc
000074  bd30              POP      {r4,r5,pc}
;;;381    
                          ENDP

000076  0000              DCW      0x0000
                  |L7.120|
                          DCD      ||.bss||
                  |L7.124|
                          DCD      0x0000ffff
                  |L7.128|
                          DCD      0x40021000
                  |L7.132|
                          DCD      ||.bss||+0x878
                  |L7.136|
                          DCD      ||.bss||+0x8b4
                  |L7.140|
                          DCD      ||.bss||+0x8f0
                  |L7.144|
                          DCD      0x00001234
                  |L7.148|
                          DCD      ||.bss||+0x410
                  |L7.152|
                          DCD      Func_1
                  |L7.156|
                          DCD      0x00004321
                  |L7.160|
                          DCD      ||.bss||+0x810
                  |L7.164|
                          DCD      Func_2

                          AREA ||i.RMP_Init_Idle||, CODE, READONLY, ALIGN=1

                  RMP_Init_Idle PROC
;;;382    volatile unsigned int count;
;;;383    void RMP_Init_Idle(void)
000000  4770              BX       lr
;;;384    {
;;;385        return;
;;;386    }
;;;387    /* End Function:RMP_Init *****************************************************/
                          ENDP


                          AREA ||i.TIM21_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM21_IRQHandler PROC
;;;91     /* The interrupt handler */
;;;92     void TIM21_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;93     {
;;;94         TIM21->SR=~TIM_FLAG_UPDATE;
000002  2001              MOVS     r0,#1
000004  4902              LDR      r1,|L9.16|
000006  43c0              MVNS     r0,r0
000008  6108              STR      r0,[r1,#0x10]
;;;95         Int_Handler();
00000a  f7fffffe          BL       Int_Handler
;;;96     }
00000e  bd10              POP      {r4,pc}
;;;97     /* End Function:Int_Init *****************************************************/
                          ENDP

                  |L9.16|
                          DCD      0x40010800

                          AREA ||i.Test_Mail_1||, CODE, READONLY, ALIGN=2

                  Test_Mail_1 PROC
;;;56     
;;;57     void Test_Mail_1(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;58     {
;;;59         static cnt_t Count;
;;;60         for(Count=0;Count<10000;Count++)
000002  2000              MOVS     r0,#0
000004  4c09              LDR      r4,|L10.44|
;;;61         {
;;;62             /* Read counter here */
;;;63             Start=COUNTER_READ();
000006  2501              MOVS     r5,#1
;;;64             RMP_Thd_Snd(&Thd_2, 1, RMP_MAX_SLICES);
000008  4f09              LDR      r7,|L10.48|
00000a  4e0a              LDR      r6,|L10.52|
00000c  07ad              LSLS     r5,r5,#30             ;63
00000e  6220              STR      r0,[r4,#0x20]         ;60  ; Count
                  |L10.16|
000010  6a68              LDR      r0,[r5,#0x24]         ;63
000012  8020              STRH     r0,[r4,#0]            ;63
000014  463a              MOV      r2,r7
000016  2101              MOVS     r1,#1
000018  4807              LDR      r0,|L10.56|
00001a  f7fffffe          BL       RMP_Thd_Snd
00001e  6a20              LDR      r0,[r4,#0x20]         ;60  ; Count
000020  1c40              ADDS     r0,r0,#1              ;60
000022  6220              STR      r0,[r4,#0x20]         ;60  ; Count
000024  42b0              CMP      r0,r6                 ;60
000026  dbf3              BLT      |L10.16|
;;;65         }
;;;66     }
000028  bdf8              POP      {r3-r7,pc}
;;;67     
                          ENDP

00002a  0000              DCW      0x0000
                  |L10.44|
                          DCD      ||.data||
                  |L10.48|
                          DCD      0x000186a0
                  |L10.52|
                          DCD      0x00002710
                  |L10.56|
                          DCD      ||.bss||+0x8b4

                          AREA ||i.Test_Mail_2||, CODE, READONLY, ALIGN=2

                  Test_Mail_2 PROC
;;;107    
;;;108    void Test_Mail_2(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;109    {
;;;110        ptr_t Data;
;;;111        cnt_t Count;
;;;112        for(Count=0;Count<10000;Count++)
000002  2500              MOVS     r5,#0
;;;113        {
;;;114            RMP_Thd_Rcv(&Data, RMP_MAX_SLICES);
;;;115            /* Read counter here */
;;;116            End=COUNTER_READ();
000004  2601              MOVS     r6,#1
000006  4c0a              LDR      r4,|L11.48|
000008  4f0a              LDR      r7,|L11.52|
00000a  07b6              LSLS     r6,r6,#30
                  |L11.12|
00000c  490a              LDR      r1,|L11.56|
00000e  4668              MOV      r0,sp                 ;114
000010  f7fffffe          BL       RMP_Thd_Rcv
000014  6a70              LDR      r0,[r6,#0x24]
000016  8060              STRH     r0,[r4,#2]
;;;117            Total+=(tim_t)(End-Start);
000018  8860              LDRH     r0,[r4,#2]  ; End
00001a  8821              LDRH     r1,[r4,#0]  ; Start
00001c  1a40              SUBS     r0,r0,r1
00001e  6861              LDR      r1,[r4,#4]  ; Total
000020  b280              UXTH     r0,r0
000022  1840              ADDS     r0,r0,r1
000024  6060              STR      r0,[r4,#4]  ; Total
000026  1c6d              ADDS     r5,r5,#1
000028  42bd              CMP      r5,r7                 ;112
00002a  dbef              BLT      |L11.12|
;;;118        };
;;;119    }
00002c  bdf8              POP      {r3-r7,pc}
;;;120    
                          ENDP

00002e  0000              DCW      0x0000
                  |L11.48|
                          DCD      ||.data||
                  |L11.52|
                          DCD      0x00002710
                  |L11.56|
                          DCD      0x000186a0

                          AREA ||i.Test_Mail_ISR||, CODE, READONLY, ALIGN=2

                  Test_Mail_ISR PROC
;;;132    
;;;133    void Test_Mail_ISR(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;134    {
;;;135        ptr_t Data;
;;;136        static cnt_t Count;
;;;137        for(Count=0;Count<10000;Count++)
000002  2000              MOVS     r0,#0
000004  4c0b              LDR      r4,|L12.52|
;;;138        {
;;;139            RMP_Thd_Rcv(&Data, RMP_MAX_SLICES);
000006  4f0c              LDR      r7,|L12.56|
000008  4e0c              LDR      r6,|L12.60|
;;;140            /* Read counter here */
;;;141            End=COUNTER_READ();
00000a  067d              LSLS     r5,r7,#25
00000c  6260              STR      r0,[r4,#0x24]         ;137  ; Count
                  |L12.14|
00000e  4639              MOV      r1,r7                 ;139
000010  4668              MOV      r0,sp                 ;139
000012  f7fffffe          BL       RMP_Thd_Rcv
000016  6a68              LDR      r0,[r5,#0x24]
000018  8060              STRH     r0,[r4,#2]
;;;142            Total+=(tim_t)(End-Start);
00001a  8860              LDRH     r0,[r4,#2]  ; End
00001c  8821              LDRH     r1,[r4,#0]  ; Start
00001e  1a40              SUBS     r0,r0,r1
000020  6861              LDR      r1,[r4,#4]  ; Total
000022  b280              UXTH     r0,r0
000024  1840              ADDS     r0,r0,r1
000026  6060              STR      r0,[r4,#4]  ; Total
000028  6a60              LDR      r0,[r4,#0x24]         ;137  ; Count
00002a  1c40              ADDS     r0,r0,#1              ;137
00002c  6260              STR      r0,[r4,#0x24]         ;137  ; Count
00002e  42b0              CMP      r0,r6                 ;137
000030  dbed              BLT      |L12.14|
;;;143        };
;;;144    }
000032  bdf8              POP      {r3-r7,pc}
;;;145    
                          ENDP

                  |L12.52|
                          DCD      ||.data||
                  |L12.56|
                          DCD      0x000186a0
                  |L12.60|
                          DCD      0x00002710

                          AREA ||i.Test_Sem_1||, CODE, READONLY, ALIGN=2

                  Test_Sem_1 PROC
;;;67     
;;;68     void Test_Sem_1(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;69     {
;;;70         cnt_t Count;
;;;71         for(Count=0;Count<10000;Count++)
000002  2400              MOVS     r4,#0
;;;72         {
;;;73             /* Read counter here */
;;;74             Start=COUNTER_READ();
000004  2501              MOVS     r5,#1
000006  4e06              LDR      r6,|L13.32|
000008  4f06              LDR      r7,|L13.36|
00000a  07ad              LSLS     r5,r5,#30
                  |L13.12|
00000c  6a68              LDR      r0,[r5,#0x24]
00000e  8030              STRH     r0,[r6,#0]
;;;75             RMP_Sem_Post(&Sem_1, 1);
000010  2101              MOVS     r1,#1
000012  4805              LDR      r0,|L13.40|
000014  f7fffffe          BL       RMP_Sem_Post
000018  1c64              ADDS     r4,r4,#1
00001a  42bc              CMP      r4,r7                 ;71
00001c  dbf6              BLT      |L13.12|
;;;76         }
;;;77     }
00001e  bdf8              POP      {r3-r7,pc}
;;;78     
                          ENDP

                  |L13.32|
                          DCD      ||.data||
                  |L13.36|
                          DCD      0x00002710
                  |L13.40|
                          DCD      ||.bss||+0x8f0

                          AREA ||i.Test_Sem_2||, CODE, READONLY, ALIGN=2

                  Test_Sem_2 PROC
;;;120    
;;;121    void Test_Sem_2(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;122    {
;;;123        cnt_t Count;
;;;124        for(Count=0;Count<10000;Count++)
000002  2500              MOVS     r5,#0
;;;125        {
;;;126            RMP_Sem_Pend(&Sem_1, RMP_MAX_SLICES);
;;;127            /* Read counter here */
;;;128            End=COUNTER_READ();
000004  2601              MOVS     r6,#1
000006  4c0a              LDR      r4,|L14.48|
000008  4f0a              LDR      r7,|L14.52|
00000a  07b6              LSLS     r6,r6,#30
                  |L14.12|
00000c  490a              LDR      r1,|L14.56|
00000e  480b              LDR      r0,|L14.60|
000010  f7fffffe          BL       RMP_Sem_Pend
000014  6a70              LDR      r0,[r6,#0x24]
000016  8060              STRH     r0,[r4,#2]
;;;129            Total+=(tim_t)(End-Start);
000018  8860              LDRH     r0,[r4,#2]  ; End
00001a  8821              LDRH     r1,[r4,#0]  ; Start
00001c  1a40              SUBS     r0,r0,r1
00001e  6861              LDR      r1,[r4,#4]  ; Total
000020  b280              UXTH     r0,r0
000022  1840              ADDS     r0,r0,r1
000024  6060              STR      r0,[r4,#4]  ; Total
000026  1c6d              ADDS     r5,r5,#1
000028  42bd              CMP      r5,r7                 ;124
00002a  dbef              BLT      |L14.12|
;;;130        };
;;;131    }
00002c  bdf8              POP      {r3-r7,pc}
;;;132    
                          ENDP

00002e  0000              DCW      0x0000
                  |L14.48|
                          DCD      ||.data||
                  |L14.52|
                          DCD      0x00002710
                  |L14.56|
                          DCD      0x000186a0
                  |L14.60|
                          DCD      ||.bss||+0x8f0

                          AREA ||i.Test_Sem_ISR||, CODE, READONLY, ALIGN=2

                  Test_Sem_ISR PROC
;;;145    
;;;146    void Test_Sem_ISR(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;147    {
;;;148        static cnt_t Count;
;;;149        for(Count=0;Count<10000;Count++)
000002  2000              MOVS     r0,#0
000004  4c0b              LDR      r4,|L15.52|
;;;150        {
;;;151            RMP_Sem_Pend(&Sem_1, RMP_MAX_SLICES);
000006  4f0c              LDR      r7,|L15.56|
000008  4e0c              LDR      r6,|L15.60|
;;;152            /* Read counter here */
;;;153            End=COUNTER_READ();
00000a  067d              LSLS     r5,r7,#25
00000c  62a0              STR      r0,[r4,#0x28]         ;149  ; Count
                  |L15.14|
00000e  4639              MOV      r1,r7                 ;151
000010  480b              LDR      r0,|L15.64|
000012  f7fffffe          BL       RMP_Sem_Pend
000016  6a68              LDR      r0,[r5,#0x24]
000018  8060              STRH     r0,[r4,#2]
;;;154            Total+=(tim_t)(End-Start);
00001a  8860              LDRH     r0,[r4,#2]  ; End
00001c  8821              LDRH     r1,[r4,#0]  ; Start
00001e  1a40              SUBS     r0,r0,r1
000020  6861              LDR      r1,[r4,#4]  ; Total
000022  b280              UXTH     r0,r0
000024  1840              ADDS     r0,r0,r1
000026  6060              STR      r0,[r4,#4]  ; Total
000028  6aa0              LDR      r0,[r4,#0x28]         ;149  ; Count
00002a  1c40              ADDS     r0,r0,#1              ;149
00002c  62a0              STR      r0,[r4,#0x28]         ;149  ; Count
00002e  42b0              CMP      r0,r6                 ;149
000030  dbed              BLT      |L15.14|
;;;155        };
;;;156    }
000032  bdf8              POP      {r3-r7,pc}
;;;157    
                          ENDP

                  |L15.52|
                          DCD      ||.data||
                  |L15.56|
                          DCD      0x000186a0
                  |L15.60|
                          DCD      0x00002710
                  |L15.64|
                          DCD      ||.bss||+0x8f0

                          AREA ||i.Test_Yield_1||, CODE, READONLY, ALIGN=2

                  Test_Yield_1 PROC
;;;45     ******************************************************************************/
;;;46     void Test_Yield_1(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;47     {
;;;48         cnt_t Count;
;;;49         for(Count=0;Count<10000;Count++)
000002  2400              MOVS     r4,#0
;;;50         {
;;;51             /* Read counter here */
;;;52             Start=COUNTER_READ();
000004  2501              MOVS     r5,#1
000006  4e05              LDR      r6,|L16.28|
000008  4f05              LDR      r7,|L16.32|
00000a  07ad              LSLS     r5,r5,#30
                  |L16.12|
00000c  6a68              LDR      r0,[r5,#0x24]
00000e  8030              STRH     r0,[r6,#0]
;;;53             RMP_Yield();
000010  f7fffffe          BL       RMP_Yield
000014  1c64              ADDS     r4,r4,#1
000016  42bc              CMP      r4,r7                 ;49
000018  dbf8              BLT      |L16.12|
;;;54         }
;;;55     }
00001a  bdf8              POP      {r3-r7,pc}
;;;56     
                          ENDP

                  |L16.28|
                          DCD      ||.data||
                  |L16.32|
                          DCD      0x00002710

                          AREA ||i.Test_Yield_2||, CODE, READONLY, ALIGN=2

                  Test_Yield_2 PROC
;;;95     ******************************************************************************/
;;;96     void Test_Yield_2(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;97     {
;;;98         cnt_t Count;
;;;99         for(Count=0;Count<10000;Count++)
;;;100        {
;;;101            RMP_Yield();
;;;102            /* Read counter here */
;;;103            End=COUNTER_READ();
000002  2601              MOVS     r6,#1
000004  2500              MOVS     r5,#0                 ;99
000006  07b6              LSLS     r6,r6,#30
000008  4c08              LDR      r4,|L17.44|
00000a  4f09              LDR      r7,|L17.48|
                  |L17.12|
00000c  f7fffffe          BL       RMP_Yield
000010  6a70              LDR      r0,[r6,#0x24]
000012  8060              STRH     r0,[r4,#2]
;;;104            Total+=(tim_t)(End-Start);
000014  8860              LDRH     r0,[r4,#2]  ; End
000016  8821              LDRH     r1,[r4,#0]  ; Start
000018  1a40              SUBS     r0,r0,r1
00001a  6861              LDR      r1,[r4,#4]  ; Total
00001c  b280              UXTH     r0,r0
00001e  1840              ADDS     r0,r0,r1
000020  6060              STR      r0,[r4,#4]  ; Total
000022  1c6d              ADDS     r5,r5,#1
000024  42bd              CMP      r5,r7                 ;99
000026  dbf1              BLT      |L17.12|
;;;105        };
;;;106    }
000028  bdf8              POP      {r3-r7,pc}
;;;107    
                          ENDP

00002a  0000              DCW      0x0000
                  |L17.44|
                          DCD      ||.data||
                  |L17.48|
                          DCD      0x00002710

                          AREA ||i.Timer_Init||, CODE, READONLY, ALIGN=2

                  Timer_Init PROC
;;;40     ******************************************************************************/
;;;41     void Timer_Init(void)
000000  b510              PUSH     {r4,lr}
;;;42     {
;;;43         /* TIM2 clock = CPU clock */
;;;44         TIM2_Handle.Instance=TIM2;
000002  4c0b              LDR      r4,|L18.48|
;;;45         TIM2_Handle.Init.Prescaler=0;
000004  2100              MOVS     r1,#0
000006  2001              MOVS     r0,#1                 ;44
;;;46         TIM2_Handle.Init.CounterMode=TIM_COUNTERMODE_UP;
000008  6061              STR      r1,[r4,#4]  ; TIM2_Handle
00000a  0780              LSLS     r0,r0,#30             ;44
;;;47         TIM2_Handle.Init.Period=(u16)(-1);
00000c  60a1              STR      r1,[r4,#8]  ; TIM2_Handle
00000e  6020              STR      r0,[r4,#0]  ; TIM2_Handle
000010  4808              LDR      r0,|L18.52|
;;;48         TIM2_Handle.Init.ClockDivision=TIM_CLOCKDIVISION_DIV1;
;;;49         HAL_TIM_Base_Init(&TIM2_Handle);
000012  6121              STR      r1,[r4,#0x10]  ; TIM2_Handle
000014  60e0              STR      r0,[r4,#0xc]  ; TIM2_Handle
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       HAL_TIM_Base_Init
;;;50         __HAL_RCC_TIM2_CLK_ENABLE();
00001c  4906              LDR      r1,|L18.56|
00001e  6b8a              LDR      r2,[r1,#0x38]
000020  2001              MOVS     r0,#1
000022  4302              ORRS     r2,r2,r0
000024  638a              STR      r2,[r1,#0x38]
;;;51         __HAL_TIM_ENABLE(&TIM2_Handle);
000026  6821              LDR      r1,[r4,#0]  ; TIM2_Handle
000028  680a              LDR      r2,[r1,#0]
00002a  4302              ORRS     r2,r2,r0
00002c  600a              STR      r2,[r1,#0]
;;;52     }
00002e  bd10              POP      {r4,pc}
;;;53     /* End Function:Timer_Init ***************************************************/
                          ENDP

                  |L18.48|
                          DCD      ||.bss||
                  |L18.52|
                          DCD      0x0000ffff
                  |L18.56|
                          DCD      0x40021000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TIM2_Handle
                          %        60
                  TIM21_Handle
                          %        60
                  Stack_1
                          %        1024
                  Stack_2
                          %        1024
                  Thd_1
                          %        60
                  Thd_2
                          %        60
                  Sem_1
                          %        16

                          AREA ||.data||, DATA, ALIGN=2

                  Start
000000  0000              DCW      0x0000
                  End
000002  0000              DCW      0x0000
                  Total
                          DCD      0x00000000
                  Temp
                          DCD      0x00000000
                  Yield_Time
                          DCD      0x00000000
                  Mailbox_Time
                          DCD      0x00000000
                  Semaphore_Time
                          DCD      0x00000000
                  Mailbox_ISR_Time
                          DCD      0x00000000
                  Semaphore_ISR_Time
                          DCD      0x00000000
                  Count
                          DCD      0x00000000
                  |symbol_number.60|
                          DCD      0x00000000
                  |symbol_number.61|
                          DCD      0x00000000
                  |symbol_number.62|
                          DCD      0x00000000

                          AREA ||area_number.23||, DATA, ALIGN=2

                          EXPORTAS ||area_number.23||, ||.data||
                  count
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\MProkaron\\Benchmark\\test.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_test_c_db099e62____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_L0_V1.10.0\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_test_c_db099e62____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_test_c_db099e62____REVSH|
#line 402
|__asm___6_test_c_db099e62____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
