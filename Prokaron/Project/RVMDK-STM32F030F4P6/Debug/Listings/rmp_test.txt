; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\rmp_test.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\rmp_test.d --cpu=Cortex-M0 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F0_V1.9.0\Drivers\STM32F0xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32Cube_FW_F0_V1.9.0\Drivers\CMSIS\Device\ST\STM32L0xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F0_V1.9.0\Drivers\CMSIS\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F0_V1.9.0\Drivers\STM32F0xx_HAL_Driver\Inc\Conf -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F030F4P6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F030x6 -DSTM32F030x6 -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\rmp_test.crf ..\..\MProkaron\Benchmark\rmp_test.c]
                          THUMB

                          AREA ||i.Func_1||, CODE, READONLY, ALIGN=2

                  Func_1 PROC
;;;84     
;;;85     void Func_1(void)
000000  4d14              LDR      r5,|L1.84|
000002  4c15              LDR      r4,|L1.88|
000004  4e15              LDR      r6,|L1.92|
000006  2700              MOVS     r7,#0
                  |L1.8|
000008  6a68              LDR      r0,[r5,#0x24]
00000a  8020              STRH     r0,[r4,#0]
00000c  f7fffffe          BL       RMP_Yield
000010  1c7f              ADDS     r7,r7,#1
000012  42b7              CMP      r7,r6
000014  dbf8              BLT      |L1.8|
;;;86     {
;;;87         Test_Yield_1();
;;;88         /* Change priority of thread 2 */
;;;89         RMP_Thd_Set(&Thd_2,2,RMP_MAX_SLICES);
000016  4f12              LDR      r7,|L1.96|
000018  2102              MOVS     r1,#2
00001a  463a              MOV      r2,r7
00001c  4811              LDR      r0,|L1.100|
00001e  f7fffffe          BL       RMP_Thd_Set
000022  2000              MOVS     r0,#0
000024  6220              STR      r0,[r4,#0x20]  ; Count
                  |L1.38|
000026  6a68              LDR      r0,[r5,#0x24]
000028  8020              STRH     r0,[r4,#0]
00002a  463a              MOV      r2,r7
00002c  2101              MOVS     r1,#1
00002e  480d              LDR      r0,|L1.100|
000030  f7fffffe          BL       RMP_Thd_Snd
000034  6a20              LDR      r0,[r4,#0x20]  ; Count
000036  1c40              ADDS     r0,r0,#1
000038  6220              STR      r0,[r4,#0x20]  ; Count
00003a  42b0              CMP      r0,r6
00003c  dbf3              BLT      |L1.38|
00003e  2700              MOVS     r7,#0
                  |L1.64|
000040  6a68              LDR      r0,[r5,#0x24]
000042  8020              STRH     r0,[r4,#0]
000044  2101              MOVS     r1,#1
000046  4808              LDR      r0,|L1.104|
000048  f7fffffe          BL       RMP_Sem_Post
00004c  1c7f              ADDS     r7,r7,#1
00004e  42b7              CMP      r7,r6
000050  dbf6              BLT      |L1.64|
                  |L1.82|
;;;90         Test_Mail_1();
;;;91         Test_Sem_1();
;;;92         while(1);
000052  e7fe              B        |L1.82|
;;;93     }
;;;94     /* End Function:Test_Yield ***************************************************/
                          ENDP

                  |L1.84|
                          DCD      0x40000400
                  |L1.88|
                          DCD      ||.data||
                  |L1.92|
                          DCD      0x00002710
                  |L1.96|
                          DCD      0x000186a0
                  |L1.100|
                          DCD      ||.bss||+0x4c4
                  |L1.104|
                          DCD      ||.bss||+0x500

                          AREA ||i.Func_2||, CODE, READONLY, ALIGN=2

                  Func_2 PROC
;;;769    
;;;770    void Func_2(void)
000000  4c6c              LDR      r4,|L2.436|
;;;771    {
000002  b082              SUB      sp,sp,#8
;;;772        /* Yield tests */
;;;773        Total=0;
000004  2000              MOVS     r0,#0
000006  6060              STR      r0,[r4,#4]  ; Total
000008  4606              MOV      r6,r0
00000a  4d6b              LDR      r5,|L2.440|
00000c  4f6b              LDR      r7,|L2.444|
                  |L2.14|
00000e  f7fffffe          BL       RMP_Yield
000012  6a68              LDR      r0,[r5,#0x24]
000014  8060              STRH     r0,[r4,#2]
000016  8860              LDRH     r0,[r4,#2]  ; End
000018  8821              LDRH     r1,[r4,#0]  ; Start
00001a  1a40              SUBS     r0,r0,r1
00001c  6861              LDR      r1,[r4,#4]  ; Total
00001e  b280              UXTH     r0,r0
000020  1840              ADDS     r0,r0,r1
000022  6060              STR      r0,[r4,#4]  ; Total
000024  1c76              ADDS     r6,r6,#1
000026  42be              CMP      r6,r7
000028  dbf1              BLT      |L2.14|
;;;774        Test_Yield_2();
;;;775        RMP_PRINTK_S("Yield: ");
00002a  a065              ADR      r0,|L2.448|
00002c  f7fffffe          BL       RMP_Print_String
;;;776    
;;;777        Yield_Time=Total/10000;
000030  4639              MOV      r1,r7
000032  6860              LDR      r0,[r4,#4]  ; Total
000034  f7fffffe          BL       __aeabi_uidivmod
000038  60e0              STR      r0,[r4,#0xc]  ; Yield_Time
;;;778        RMP_PRINTK_I(Yield_Time);
00003a  68e0              LDR      r0,[r4,#0xc]  ; Yield_Time
00003c  f7fffffe          BL       RMP_Print_Int
;;;779        RMP_PRINTK_S(" cycles.\r\n");
000040  a061              ADR      r0,|L2.456|
000042  f7fffffe          BL       RMP_Print_String
;;;780        /* Change priority of thread 2, just in case */
;;;781        RMP_Thd_Set(&Thd_2,2,RMP_MAX_SLICES);
000046  4a63              LDR      r2,|L2.468|
000048  2102              MOVS     r1,#2
00004a  4863              LDR      r0,|L2.472|
00004c  f7fffffe          BL       RMP_Thd_Set
;;;782        
;;;783        /* Mailbox tests */
;;;784        Total=0;
000050  2000              MOVS     r0,#0
000052  6060              STR      r0,[r4,#4]  ; Total
000054  4e5f              LDR      r6,|L2.468|
000056  4607              MOV      r7,r0                 ;781
                  |L2.88|
000058  4631              MOV      r1,r6                 ;781
00005a  4668              MOV      r0,sp                 ;781
00005c  f7fffffe          BL       RMP_Thd_Rcv
000060  6a68              LDR      r0,[r5,#0x24]         ;781
000062  8060              STRH     r0,[r4,#2]            ;781
000064  8860              LDRH     r0,[r4,#2]            ;781  ; End
000066  8821              LDRH     r1,[r4,#0]            ;781  ; Start
000068  1a40              SUBS     r0,r0,r1              ;781
00006a  6861              LDR      r1,[r4,#4]            ;781  ; Total
00006c  b280              UXTH     r0,r0                 ;781
00006e  1840              ADDS     r0,r0,r1              ;781
000070  6060              STR      r0,[r4,#4]            ;781  ; Total
000072  4852              LDR      r0,|L2.444|
000074  1c7f              ADDS     r7,r7,#1              ;781
000076  4287              CMP      r7,r0                 ;781
000078  dbee              BLT      |L2.88|
;;;785        Test_Mail_2();
;;;786        RMP_PRINTK_S("Mailbox: ");
00007a  a058              ADR      r0,|L2.476|
00007c  f7fffffe          BL       RMP_Print_String
;;;787        Mailbox_Time=Total/10000;
000080  494e              LDR      r1,|L2.444|
000082  6860              LDR      r0,[r4,#4]  ; Total
000084  f7fffffe          BL       __aeabi_uidivmod
000088  6120              STR      r0,[r4,#0x10]  ; Mailbox_Time
;;;788        RMP_PRINTK_I(Mailbox_Time);
00008a  6920              LDR      r0,[r4,#0x10]  ; Mailbox_Time
00008c  f7fffffe          BL       RMP_Print_Int
;;;789        RMP_PRINTK_S(" cycles.\r\n");
000090  a04d              ADR      r0,|L2.456|
000092  f7fffffe          BL       RMP_Print_String
;;;790        
;;;791        /* Semaphore tests */
;;;792        Total=0;
000096  2000              MOVS     r0,#0
000098  6060              STR      r0,[r4,#4]  ; Total
00009a  4607              MOV      r7,r0
                  |L2.156|
00009c  4631              MOV      r1,r6
00009e  4852              LDR      r0,|L2.488|
0000a0  f7fffffe          BL       RMP_Sem_Pend
0000a4  6a68              LDR      r0,[r5,#0x24]
0000a6  8060              STRH     r0,[r4,#2]
0000a8  8860              LDRH     r0,[r4,#2]  ; End
0000aa  8821              LDRH     r1,[r4,#0]  ; Start
0000ac  1a40              SUBS     r0,r0,r1
0000ae  6861              LDR      r1,[r4,#4]  ; Total
0000b0  b280              UXTH     r0,r0
0000b2  1840              ADDS     r0,r0,r1
0000b4  6060              STR      r0,[r4,#4]  ; Total
0000b6  4841              LDR      r0,|L2.444|
0000b8  1c7f              ADDS     r7,r7,#1
0000ba  4287              CMP      r7,r0
0000bc  dbee              BLT      |L2.156|
;;;793        Test_Sem_2();
;;;794        RMP_PRINTK_S("Semaphore: ");
0000be  a04b              ADR      r0,|L2.492|
0000c0  f7fffffe          BL       RMP_Print_String
;;;795        Semaphore_Time=Total/10000;
0000c4  493d              LDR      r1,|L2.444|
0000c6  6860              LDR      r0,[r4,#4]  ; Total
0000c8  f7fffffe          BL       __aeabi_uidivmod
0000cc  6160              STR      r0,[r4,#0x14]  ; Semaphore_Time
;;;796        RMP_PRINTK_I(Semaphore_Time);
0000ce  6960              LDR      r0,[r4,#0x14]  ; Semaphore_Time
0000d0  f7fffffe          BL       RMP_Print_Int
;;;797        RMP_PRINTK_S(" cycles.\r\n");
0000d4  a03c              ADR      r0,|L2.456|
0000d6  f7fffffe          BL       RMP_Print_String
;;;798        
;;;799        /* Memory pool tests */
;;;800    #ifdef TEST_MEM_POOL
;;;801        Test_Mem_Pool();
;;;802    #endif
;;;803    
;;;804        /* Mailbox from interrupt tests */
;;;805        Total=0;
0000da  2000              MOVS     r0,#0
0000dc  6060              STR      r0,[r4,#4]  ; Total
0000de  4f47              LDR      r7,|L2.508|
0000e0  4845              LDR      r0,|L2.504|
0000e2  6038              STR      r0,[r7,#0]  ; TIM14_Handle
0000e4  2000              MOVS     r0,#0
0000e6  6078              STR      r0,[r7,#4]  ; TIM14_Handle
0000e8  2010              MOVS     r0,#0x10
0000ea  60b8              STR      r0,[r7,#8]  ; TIM14_Handle
0000ec  20e1              MOVS     r0,#0xe1
0000ee  0100              LSLS     r0,r0,#4
0000f0  60f8              STR      r0,[r7,#0xc]  ; TIM14_Handle
0000f2  2000              MOVS     r0,#0
0000f4  6138              STR      r0,[r7,#0x10]  ; TIM14_Handle
0000f6  4638              MOV      r0,r7
0000f8  f7fffffe          BL       HAL_TIM_Base_Init
0000fc  4840              LDR      r0,|L2.512|
0000fe  69c2              LDR      r2,[r0,#0x1c]
000100  1581              ASRS     r1,r0,#22
000102  430a              ORRS     r2,r2,r1
000104  61c2              STR      r2,[r0,#0x1c]
000106  69c0              LDR      r0,[r0,#0x1c]
000108  4008              ANDS     r0,r0,r1
00010a  9000              STR      r0,[sp,#0]
00010c  6838              LDR      r0,[r7,#0]  ; TIM14_Handle
00010e  6801              LDR      r1,[r0,#0]
000110  2201              MOVS     r2,#1
000112  4311              ORRS     r1,r1,r2
000114  6001              STR      r1,[r0,#0]
000116  6839              LDR      r1,[r7,#0]  ; TIM14_Handle
000118  1ed0              SUBS     r0,r2,#3
00011a  6108              STR      r0,[r1,#0x10]
00011c  4638              MOV      r0,r7
00011e  f7fffffe          BL       HAL_TIM_Base_Start_IT
000122  2000              MOVS     r0,#0
000124  4f25              LDR      r7,|L2.444|
000126  6260              STR      r0,[r4,#0x24]  ; Count
                  |L2.296|
000128  4631              MOV      r1,r6
00012a  4668              MOV      r0,sp
00012c  f7fffffe          BL       RMP_Thd_Rcv
000130  6a68              LDR      r0,[r5,#0x24]
000132  8060              STRH     r0,[r4,#2]
000134  8860              LDRH     r0,[r4,#2]  ; End
000136  8821              LDRH     r1,[r4,#0]  ; Start
000138  1a40              SUBS     r0,r0,r1
00013a  6861              LDR      r1,[r4,#4]  ; Total
00013c  b280              UXTH     r0,r0
00013e  1840              ADDS     r0,r0,r1
000140  6060              STR      r0,[r4,#4]  ; Total
000142  6a60              LDR      r0,[r4,#0x24]  ; Count
000144  1c40              ADDS     r0,r0,#1
000146  6260              STR      r0,[r4,#0x24]  ; Count
000148  42b8              CMP      r0,r7
00014a  dbed              BLT      |L2.296|
;;;806        Int_Init();
;;;807        Test_Mail_ISR();
;;;808        
;;;809        /* Semaphore from interrupt tests */
;;;810        Temp=Total;
00014c  6860              LDR      r0,[r4,#4]  ; Total
00014e  60a0              STR      r0,[r4,#8]  ; Temp
;;;811        Total=0;
000150  2000              MOVS     r0,#0
000152  6060              STR      r0,[r4,#4]  ; Total
000154  62a0              STR      r0,[r4,#0x28]  ; Count
                  |L2.342|
000156  4631              MOV      r1,r6
000158  4823              LDR      r0,|L2.488|
00015a  f7fffffe          BL       RMP_Sem_Pend
00015e  6a68              LDR      r0,[r5,#0x24]
000160  8060              STRH     r0,[r4,#2]
000162  8860              LDRH     r0,[r4,#2]  ; End
000164  8821              LDRH     r1,[r4,#0]  ; Start
000166  1a40              SUBS     r0,r0,r1
000168  6861              LDR      r1,[r4,#4]  ; Total
00016a  b280              UXTH     r0,r0
00016c  1840              ADDS     r0,r0,r1
00016e  6060              STR      r0,[r4,#4]  ; Total
000170  6aa0              LDR      r0,[r4,#0x28]  ; Count
000172  1c40              ADDS     r0,r0,#1
000174  62a0              STR      r0,[r4,#0x28]  ; Count
000176  42b8              CMP      r0,r7
000178  dbed              BLT      |L2.342|
;;;812        Test_Sem_ISR();
;;;813        
;;;814        RMP_PRINTK_S("Mailbox-ISR: ");
00017a  a022              ADR      r0,|L2.516|
00017c  f7fffffe          BL       RMP_Print_String
;;;815        Mailbox_ISR_Time=Temp/10000;
000180  4639              MOV      r1,r7
000182  68a0              LDR      r0,[r4,#8]  ; Temp
000184  f7fffffe          BL       __aeabi_uidivmod
000188  61a0              STR      r0,[r4,#0x18]  ; Mailbox_ISR_Time
;;;816        RMP_PRINTK_I(Mailbox_ISR_Time);
00018a  69a0              LDR      r0,[r4,#0x18]  ; Mailbox_ISR_Time
00018c  f7fffffe          BL       RMP_Print_Int
;;;817        RMP_PRINTK_S(" cycles.\r\n");
000190  a00d              ADR      r0,|L2.456|
000192  f7fffffe          BL       RMP_Print_String
;;;818        RMP_PRINTK_S("Semaphore-ISR: ");
000196  a01f              ADR      r0,|L2.532|
000198  f7fffffe          BL       RMP_Print_String
;;;819        Semaphore_ISR_Time=Total/10000;
00019c  4639              MOV      r1,r7
00019e  6860              LDR      r0,[r4,#4]  ; Total
0001a0  f7fffffe          BL       __aeabi_uidivmod
0001a4  61e0              STR      r0,[r4,#0x1c]  ; Semaphore_ISR_Time
;;;820        RMP_PRINTK_I(Semaphore_ISR_Time);
0001a6  69e0              LDR      r0,[r4,#0x1c]  ; Semaphore_ISR_Time
0001a8  f7fffffe          BL       RMP_Print_Int
;;;821        RMP_PRINTK_S(" cycles.\r\n");
0001ac  a006              ADR      r0,|L2.456|
0001ae  f7fffffe          BL       RMP_Print_String
                  |L2.434|
;;;822    
;;;823    #ifdef RMP_COVERAGE
;;;824        Test_Coverage_2();
;;;825        RMP_Print_Coverage();
;;;826    #endif
;;;827        
;;;828        while(1);
0001b2  e7fe              B        |L2.434|
;;;829    }
;;;830    /* End Function:Func_2 *******************************************************/
                          ENDP

                  |L2.436|
                          DCD      ||.data||
                  |L2.440|
                          DCD      0x40000400
                  |L2.444|
                          DCD      0x00002710
                  |L2.448|
0001c0  5969656c          DCB      "Yield: ",0
0001c4  643a2000
                  |L2.456|
0001c8  20637963          DCB      " cycles.\r\n",0
0001cc  6c65732e
0001d0  0d0a00  
0001d3  00                DCB      0
                  |L2.468|
                          DCD      0x000186a0
                  |L2.472|
                          DCD      ||.bss||+0x4c4
                  |L2.476|
0001dc  4d61696c          DCB      "Mailbox: ",0
0001e0  626f783a
0001e4  2000    
0001e6  00                DCB      0
0001e7  00                DCB      0
                  |L2.488|
                          DCD      ||.bss||+0x500
                  |L2.492|
0001ec  53656d61          DCB      "Semaphore: ",0
0001f0  70686f72
0001f4  653a2000
                  |L2.504|
                          DCD      0x40002000
                  |L2.508|
                          DCD      ||.bss||+0x44
                  |L2.512|
                          DCD      0x40021000
                  |L2.516|
000204  4d61696c          DCB      "Mailbox-ISR: ",0
000208  626f782d
00020c  4953523a
000210  2000    
000212  00                DCB      0
000213  00                DCB      0
                  |L2.532|
000214  53656d61          DCB      "Semaphore-ISR: ",0
000218  70686f72
00021c  652d4953
000220  523a2000

                          AREA ||i.HAL_TIM_Base_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_TIM_Base_MspInit PROC
;;;77     
;;;78     void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
000000  6800              LDR      r0,[r0,#0]
;;;79     {
;;;80         if(htim->Instance==TIM14) 
000002  490d              LDR      r1,|L3.56|
000004  b081              SUB      sp,sp,#4              ;79
000006  4288              CMP      r0,r1
000008  d113              BNE      |L3.50|
00000a  480c              LDR      r0,|L3.60|
00000c  6801              LDR      r1,[r0,#0]            ;79
00000e  2203              MOVS     r2,#3                 ;79
000010  0209              LSLS     r1,r1,#8              ;79
000012  0a09              LSRS     r1,r1,#8              ;79
000014  0792              LSLS     r2,r2,#30             ;79
000016  4311              ORRS     r1,r1,r2              ;79
000018  6001              STR      r1,[r0,#0]            ;79
00001a  2001              MOVS     r0,#1                 ;79
00001c  4908              LDR      r1,|L3.64|
00001e  04c0              LSLS     r0,r0,#19             ;79
000020  6008              STR      r0,[r1,#0]            ;79
;;;81         {
;;;82             /* Set the interrupt priority */
;;;83             NVIC_SetPriority(TIM14_IRQn,0xFF);
;;;84             /* Enable timer 21 interrupt */
;;;85             NVIC_EnableIRQ(TIM14_IRQn);
;;;86             /* Enable timer 21 clock */
;;;87             __HAL_RCC_TIM14_CLK_ENABLE();
000022  4808              LDR      r0,|L3.68|
000024  69c2              LDR      r2,[r0,#0x1c]
000026  1581              ASRS     r1,r0,#22
000028  430a              ORRS     r2,r2,r1
00002a  61c2              STR      r2,[r0,#0x1c]
00002c  69c0              LDR      r0,[r0,#0x1c]
00002e  4008              ANDS     r0,r0,r1
000030  9000              STR      r0,[sp,#0]
                  |L3.50|
;;;88         }
;;;89     }
000032  b001              ADD      sp,sp,#4
000034  4770              BX       lr
;;;90     
                          ENDP

000036  0000              DCW      0x0000
                  |L3.56|
                          DCD      0x40002000
                  |L3.60|
                          DCD      0xe000e410
                  |L3.64|
                          DCD      0xe000e100
                  |L3.68|
                          DCD      0x40021000

                          AREA ||i.Int_Disable||, CODE, READONLY, ALIGN=2

                  Int_Disable PROC
;;;105    ******************************************************************************/
;;;106    void Int_Disable(void)
000000  2001              MOVS     r0,#1
000002  4902              LDR      r1,|L4.12|
000004  04c0              LSLS     r0,r0,#19
000006  6008              STR      r0,[r1,#0]
;;;107    {
;;;108        /* Disable timer 14 interrupt */
;;;109        NVIC_DisableIRQ(TIM14_IRQn);
;;;110    }
000008  4770              BX       lr
;;;111    #endif
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0xe000e180

                          AREA ||i.Int_Handler||, CODE, READONLY, ALIGN=2

                  Int_Handler PROC
;;;837    ******************************************************************************/
;;;838    void Int_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;839    {
;;;840        static rmp_cnt_t Count=0;
;;;841        
;;;842        if(Count<10000)
000002  4c1a              LDR      r4,|L5.108|
000004  4b1a              LDR      r3,|L5.112|
;;;843        {
;;;844            Count++;
;;;845            Start=COUNTER_READ();
000006  6ae1              LDR      r1,[r4,#0x2c]  ; Count
000008  4a1a              LDR      r2,|L5.116|
00000a  1c48              ADDS     r0,r1,#1
00000c  4299              CMP      r1,r3                 ;842
00000e  da12              BGE      |L5.54|
000010  62e0              STR      r0,[r4,#0x2c]  ; Count
000012  6a50              LDR      r0,[r2,#0x24]
000014  8020              STRH     r0,[r4,#0]
;;;846            if(RMP_Thd_Snd_ISR(&Thd_2, 1)<0)
000016  2101              MOVS     r1,#1
000018  4817              LDR      r0,|L5.120|
00001a  f7fffffe          BL       RMP_Thd_Snd_ISR
00001e  2800              CMP      r0,#0
000020  da23              BGE      |L5.106|
;;;847            {
;;;848                RMP_PRINTK_S("ISR Mailbox send failure: ");
000022  a016              ADR      r0,|L5.124|
000024  f7fffffe          BL       RMP_Print_String
;;;849                RMP_PRINTK_I(Count);
000028  6ae0              LDR      r0,[r4,#0x2c]  ; Count
00002a  f7fffffe          BL       RMP_Print_Int
;;;850                RMP_PRINTK_S(" sends.\r\n");
00002e  a01a              ADR      r0,|L5.152|
000030  f7fffffe          BL       RMP_Print_String
                  |L5.52|
;;;851                while(1);
000034  e7fe              B        |L5.52|
                  |L5.54|
;;;852            }
;;;853        }
;;;854        else if(Count<20000)
000036  4b1b              LDR      r3,|L5.164|
000038  4299              CMP      r1,r3
00003a  da12              BGE      |L5.98|
;;;855        {
;;;856            Count++;
;;;857            Start=COUNTER_READ();
00003c  62e0              STR      r0,[r4,#0x2c]  ; Count
00003e  6a50              LDR      r0,[r2,#0x24]
000040  8020              STRH     r0,[r4,#0]
;;;858            if(RMP_Sem_Post_ISR(&Sem_1, 1)<0)
000042  2101              MOVS     r1,#1
000044  4818              LDR      r0,|L5.168|
000046  f7fffffe          BL       RMP_Sem_Post_ISR
00004a  2800              CMP      r0,#0
00004c  da0d              BGE      |L5.106|
;;;859            {
;;;860                RMP_PRINTK_S("ISR semaphore post failure: ");
00004e  a017              ADR      r0,|L5.172|
000050  f7fffffe          BL       RMP_Print_String
;;;861                RMP_PRINTK_I(Count);
000054  6ae0              LDR      r0,[r4,#0x2c]  ; Count
000056  f7fffffe          BL       RMP_Print_Int
;;;862                RMP_PRINTK_S(" posts.\r\n");
00005a  a01c              ADR      r0,|L5.204|
00005c  f7fffffe          BL       RMP_Print_String
                  |L5.96|
;;;863                while(1);
000060  e7fe              B        |L5.96|
                  |L5.98|
000062  2001              MOVS     r0,#1
000064  491c              LDR      r1,|L5.216|
000066  04c0              LSLS     r0,r0,#19
000068  6008              STR      r0,[r1,#0]
                  |L5.106|
;;;864            }
;;;865        }
;;;866        else
;;;867            Int_Disable();
;;;868    }
00006a  bd10              POP      {r4,pc}
;;;869    #endif
                          ENDP

                  |L5.108|
                          DCD      ||.data||
                  |L5.112|
                          DCD      0x00002710
                  |L5.116|
                          DCD      0x40000400
                  |L5.120|
                          DCD      ||.bss||+0x4c4
                  |L5.124|
00007c  49535220          DCB      "ISR Mailbox send failure: ",0
000080  4d61696c
000084  626f7820
000088  73656e64
00008c  20666169
000090  6c757265
000094  3a2000  
000097  00                DCB      0
                  |L5.152|
000098  2073656e          DCB      " sends.\r\n",0
00009c  64732e0d
0000a0  0a00    
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L5.164|
                          DCD      0x00004e20
                  |L5.168|
                          DCD      ||.bss||+0x500
                  |L5.172|
0000ac  49535220          DCB      "ISR semaphore post failure: ",0
0000b0  73656d61
0000b4  70686f72
0000b8  6520706f
0000bc  73742066
0000c0  61696c75
0000c4  72653a20
0000c8  00      
0000c9  00                DCB      0
0000ca  00                DCB      0
0000cb  00                DCB      0
                  |L5.204|
0000cc  20706f73          DCB      " posts.\r\n",0
0000d0  74732e0d
0000d4  0a00    
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L5.216|
                          DCD      0xe000e180

                          AREA ||i.Int_Init||, CODE, READONLY, ALIGN=2

                  Int_Init PROC
;;;61     ******************************************************************************/
;;;62     void Int_Init(void)
000000  b538              PUSH     {r3-r5,lr}
;;;63     {
;;;64         /* TIM14 clock = CPU clock */
;;;65         TIM14_Handle.Instance=TIM14;
000002  4c12              LDR      r4,|L6.76|
000004  4810              LDR      r0,|L6.72|
;;;66         TIM14_Handle.Init.Prescaler=0;
000006  6020              STR      r0,[r4,#0]  ; TIM14_Handle
;;;67         TIM14_Handle.Init.CounterMode=TIM_COUNTERMODE_DOWN;
000008  2110              MOVS     r1,#0x10
;;;68         TIM14_Handle.Init.Period=3600;
00000a  60a1              STR      r1,[r4,#8]  ; TIM14_Handle
00000c  2000              MOVS     r0,#0                 ;66
00000e  21e1              MOVS     r1,#0xe1
000010  6060              STR      r0,[r4,#4]  ; TIM14_Handle
000012  0109              LSLS     r1,r1,#4
;;;69         TIM14_Handle.Init.ClockDivision=TIM_CLOCKDIVISION_DIV1;
;;;70         HAL_TIM_Base_Init(&TIM14_Handle);
000014  60e1              STR      r1,[r4,#0xc]  ; TIM14_Handle
000016  6120              STR      r0,[r4,#0x10]  ; TIM14_Handle
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       HAL_TIM_Base_Init
;;;71         __HAL_RCC_TIM14_CLK_ENABLE();
00001e  480c              LDR      r0,|L6.80|
000020  69c2              LDR      r2,[r0,#0x1c]
000022  1581              ASRS     r1,r0,#22
000024  430a              ORRS     r2,r2,r1
000026  61c2              STR      r2,[r0,#0x1c]
000028  69c0              LDR      r0,[r0,#0x1c]
00002a  4008              ANDS     r0,r0,r1
;;;72         __HAL_TIM_ENABLE(&TIM14_Handle);
00002c  9000              STR      r0,[sp,#0]
00002e  6820              LDR      r0,[r4,#0]  ; TIM14_Handle
000030  6801              LDR      r1,[r0,#0]
000032  2201              MOVS     r2,#1
000034  4311              ORRS     r1,r1,r2
000036  6001              STR      r1,[r0,#0]
;;;73         /* Clear interrupt pending bit, because we used EGR to update the registers */
;;;74         __HAL_TIM_CLEAR_IT(&TIM14_Handle, TIM_IT_UPDATE);
000038  6821              LDR      r1,[r4,#0]  ; TIM14_Handle
00003a  1ed0              SUBS     r0,r2,#3
00003c  6108              STR      r0,[r1,#0x10]
;;;75         HAL_TIM_Base_Start_IT(&TIM14_Handle);
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       HAL_TIM_Base_Start_IT
;;;76     }
000044  bd38              POP      {r3-r5,pc}
;;;77     
                          ENDP

000046  0000              DCW      0x0000
                  |L6.72|
                          DCD      0x40002000
                  |L6.76|
                          DCD      ||.bss||+0x44
                  |L6.80|
                          DCD      0x40021000

                          AREA ||i.RMP_Init_Hook||, CODE, READONLY, ALIGN=2

                  RMP_Init_Hook PROC
;;;877    ******************************************************************************/
;;;878    void RMP_Init_Hook(void)
000000  b510              PUSH     {r4,lr}
000002  4c20              LDR      r4,|L7.132|
;;;879    {
000004  b082              SUB      sp,sp,#8
000006  2100              MOVS     r1,#0
000008  6061              STR      r1,[r4,#4]  ; TIM3_Handle
00000a  481d              LDR      r0,|L7.128|
00000c  60a1              STR      r1,[r4,#8]  ; TIM3_Handle
00000e  6020              STR      r0,[r4,#0]  ; TIM3_Handle
000010  481d              LDR      r0,|L7.136|
000012  6121              STR      r1,[r4,#0x10]  ; TIM3_Handle
000014  60e0              STR      r0,[r4,#0xc]  ; TIM3_Handle
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       HAL_TIM_Base_Init
00001c  481b              LDR      r0,|L7.140|
00001e  69c2              LDR      r2,[r0,#0x1c]
000020  2102              MOVS     r1,#2
000022  430a              ORRS     r2,r2,r1
000024  61c2              STR      r2,[r0,#0x1c]
000026  69c0              LDR      r0,[r0,#0x1c]
000028  4008              ANDS     r0,r0,r1
00002a  9000              STR      r0,[sp,#0]
00002c  6820              LDR      r0,[r4,#0]  ; TIM3_Handle
00002e  6801              LDR      r1,[r0,#0]
000030  2401              MOVS     r4,#1
000032  4321              ORRS     r1,r1,r4
000034  6001              STR      r1,[r0,#0]
;;;880    #ifndef MINIMAL_SIZE
;;;881        /* Init the timer */
;;;882        Timer_Init();
;;;883        /* Clean up the structures */
;;;884        RMP_Clear(&Thd_1,sizeof(struct RMP_Thd));
000036  213c              MOVS     r1,#0x3c
000038  4815              LDR      r0,|L7.144|
00003a  f7fffffe          BL       RMP_Clear
;;;885        RMP_Clear(&Thd_2,sizeof(struct RMP_Thd));
00003e  213c              MOVS     r1,#0x3c
000040  4814              LDR      r0,|L7.148|
000042  f7fffffe          BL       RMP_Clear
;;;886        RMP_Clear(&Sem_1,sizeof(struct RMP_Sem));
000046  2110              MOVS     r1,#0x10
000048  4813              LDR      r0,|L7.152|
00004a  f7fffffe          BL       RMP_Clear
;;;887        /* Create counting semaphore */
;;;888        RMP_Sem_Crt(&Sem_1,0);
00004e  2100              MOVS     r1,#0
000050  4811              LDR      r0,|L7.152|
000052  f7fffffe          BL       RMP_Sem_Crt
;;;889        /* Start threads */
;;;890        RMP_Thd_Crt(&Thd_1, Func_1, THD1_STACK, (void*)0x1234, 1, 5);
000056  2005              MOVS     r0,#5
000058  9001              STR      r0,[sp,#4]
00005a  4b10              LDR      r3,|L7.156|
00005c  4a10              LDR      r2,|L7.160|
00005e  4911              LDR      r1,|L7.164|
000060  9400              STR      r4,[sp,#0]
000062  480b              LDR      r0,|L7.144|
000064  f7fffffe          BL       RMP_Thd_Crt
;;;891        RMP_Thd_Crt(&Thd_2, Func_2, THD2_STACK, (void*)0x4321, 1, 1000);
000068  207d              MOVS     r0,#0x7d
00006a  00c0              LSLS     r0,r0,#3
00006c  9001              STR      r0,[sp,#4]
00006e  4b0e              LDR      r3,|L7.168|
000070  4a0e              LDR      r2,|L7.172|
000072  490f              LDR      r1,|L7.176|
000074  9400              STR      r4,[sp,#0]
000076  4807              LDR      r0,|L7.148|
000078  f7fffffe          BL       RMP_Thd_Crt
;;;892    #endif
;;;893    }
00007c  b002              ADD      sp,sp,#8
00007e  bd10              POP      {r4,pc}
;;;894    
                          ENDP

                  |L7.128|
                          DCD      0x40000400
                  |L7.132|
                          DCD      ||.bss||
                  |L7.136|
                          DCD      0x0000ffff
                  |L7.140|
                          DCD      0x40021000
                  |L7.144|
                          DCD      ||.bss||+0x488
                  |L7.148|
                          DCD      ||.bss||+0x4c4
                  |L7.152|
                          DCD      ||.bss||+0x500
                  |L7.156|
                          DCD      0x00001234
                  |L7.160|
                          DCD      ||.bss||+0x218
                  |L7.164|
                          DCD      Func_1
                  |L7.168|
                          DCD      0x00004321
                  |L7.172|
                          DCD      ||.bss||+0x418
                  |L7.176|
                          DCD      Func_2

                          AREA ||i.RMP_Init_Idle||, CODE, READONLY, ALIGN=1

                  RMP_Init_Idle PROC
;;;894    
;;;895    void RMP_Init_Idle(void)
000000  4770              BX       lr
;;;896    {
;;;897        return;
;;;898    }
;;;899    /* End Function:RMP_Init *****************************************************/
                          ENDP


                          AREA ||i.TIM14_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM14_IRQHandler PROC
;;;91     /* The interrupt handler */
;;;92     void TIM14_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;93     {
;;;94         TIM14->SR=~TIM_FLAG_UPDATE;
000002  2001              MOVS     r0,#1
000004  4902              LDR      r1,|L9.16|
000006  43c0              MVNS     r0,r0
000008  6108              STR      r0,[r1,#0x10]
;;;95         Int_Handler();
00000a  f7fffffe          BL       Int_Handler
;;;96     }
00000e  bd10              POP      {r4,pc}
;;;97     /* End Function:Int_Init *****************************************************/
                          ENDP

                  |L9.16|
                          DCD      0x40002000

                          AREA ||i.Test_Mail_1||, CODE, READONLY, ALIGN=2

                  Test_Mail_1 PROC
;;;62     
;;;63     void Test_Mail_1(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;64     {
;;;65         static rmp_cnt_t Count;
;;;66         for(Count=0;Count<10000;Count++)
000002  4c09              LDR      r4,|L10.40|
000004  2000              MOVS     r0,#0
;;;67         {
;;;68             /* Read counter here */
;;;69             Start=COUNTER_READ();
000006  4d09              LDR      r5,|L10.44|
;;;70             RMP_Thd_Snd(&Thd_2, 1, RMP_MAX_SLICES);
000008  4f09              LDR      r7,|L10.48|
00000a  4e0a              LDR      r6,|L10.52|
00000c  6220              STR      r0,[r4,#0x20]         ;66  ; Count
                  |L10.14|
00000e  6a68              LDR      r0,[r5,#0x24]         ;69
000010  8020              STRH     r0,[r4,#0]            ;69
000012  463a              MOV      r2,r7
000014  2101              MOVS     r1,#1
000016  4808              LDR      r0,|L10.56|
000018  f7fffffe          BL       RMP_Thd_Snd
00001c  6a20              LDR      r0,[r4,#0x20]         ;66  ; Count
00001e  1c40              ADDS     r0,r0,#1              ;66
000020  6220              STR      r0,[r4,#0x20]         ;66  ; Count
000022  42b0              CMP      r0,r6                 ;66
000024  dbf3              BLT      |L10.14|
;;;71         }
;;;72     }
000026  bdf8              POP      {r3-r7,pc}
;;;73     
                          ENDP

                  |L10.40|
                          DCD      ||.data||
                  |L10.44|
                          DCD      0x40000400
                  |L10.48|
                          DCD      0x000186a0
                  |L10.52|
                          DCD      0x00002710
                  |L10.56|
                          DCD      ||.bss||+0x4c4

                          AREA ||i.Test_Mail_2||, CODE, READONLY, ALIGN=2

                  Test_Mail_2 PROC
;;;112    }
;;;113    void Test_Mail_2(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;114    {
;;;115        rmp_ptr_t Data;
;;;116        rmp_cnt_t Count;
;;;117        for(Count=0;Count<10000;Count++)
;;;118        {
;;;119            RMP_Thd_Rcv(&Data, RMP_MAX_SLICES);
;;;120            /* Read counter here */
;;;121            End=COUNTER_READ();
000002  4e0a              LDR      r6,|L11.44|
000004  4c0a              LDR      r4,|L11.48|
000006  4f0b              LDR      r7,|L11.52|
000008  2500              MOVS     r5,#0                 ;117
                  |L11.10|
00000a  490b              LDR      r1,|L11.56|
00000c  4668              MOV      r0,sp                 ;119
00000e  f7fffffe          BL       RMP_Thd_Rcv
000012  6a70              LDR      r0,[r6,#0x24]
000014  8060              STRH     r0,[r4,#2]
;;;122            Total+=(rmp_tim_t)(End-Start);
000016  8860              LDRH     r0,[r4,#2]  ; End
000018  8821              LDRH     r1,[r4,#0]  ; Start
00001a  1a40              SUBS     r0,r0,r1
00001c  6861              LDR      r1,[r4,#4]  ; Total
00001e  b280              UXTH     r0,r0
000020  1840              ADDS     r0,r0,r1
000022  6060              STR      r0,[r4,#4]  ; Total
000024  1c6d              ADDS     r5,r5,#1
000026  42bd              CMP      r5,r7                 ;117
000028  dbef              BLT      |L11.10|
;;;123        }
;;;124    }
00002a  bdf8              POP      {r3-r7,pc}
;;;125    
                          ENDP

                  |L11.44|
                          DCD      0x40000400
                  |L11.48|
                          DCD      ||.data||
                  |L11.52|
                          DCD      0x00002710
                  |L11.56|
                          DCD      0x000186a0

                          AREA ||i.Test_Mail_ISR||, CODE, READONLY, ALIGN=2

                  Test_Mail_ISR PROC
;;;137    
;;;138    void Test_Mail_ISR(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;139    {
;;;140        rmp_ptr_t Data;
;;;141        static rmp_cnt_t Count;
;;;142        for(Count=0;Count<10000;Count++)
000002  4c0c              LDR      r4,|L12.52|
000004  2000              MOVS     r0,#0
;;;143        {
;;;144            RMP_Thd_Rcv(&Data, RMP_MAX_SLICES);
000006  4f0c              LDR      r7,|L12.56|
;;;145            /* Read counter here */
;;;146            End=COUNTER_READ();
000008  4d0c              LDR      r5,|L12.60|
00000a  4e0d              LDR      r6,|L12.64|
00000c  6260              STR      r0,[r4,#0x24]         ;142  ; Count
                  |L12.14|
00000e  4639              MOV      r1,r7                 ;144
000010  4668              MOV      r0,sp                 ;144
000012  f7fffffe          BL       RMP_Thd_Rcv
000016  6a68              LDR      r0,[r5,#0x24]
000018  8060              STRH     r0,[r4,#2]
;;;147            Total+=(rmp_tim_t)(End-Start);
00001a  8860              LDRH     r0,[r4,#2]  ; End
00001c  8821              LDRH     r1,[r4,#0]  ; Start
00001e  1a40              SUBS     r0,r0,r1
000020  6861              LDR      r1,[r4,#4]  ; Total
000022  b280              UXTH     r0,r0
000024  1840              ADDS     r0,r0,r1
000026  6060              STR      r0,[r4,#4]  ; Total
000028  6a60              LDR      r0,[r4,#0x24]         ;142  ; Count
00002a  1c40              ADDS     r0,r0,#1              ;142
00002c  6260              STR      r0,[r4,#0x24]         ;142  ; Count
00002e  42b0              CMP      r0,r6                 ;142
000030  dbed              BLT      |L12.14|
;;;148        }
;;;149    }
000032  bdf8              POP      {r3-r7,pc}
;;;150    
                          ENDP

                  |L12.52|
                          DCD      ||.data||
                  |L12.56|
                          DCD      0x000186a0
                  |L12.60|
                          DCD      0x40000400
                  |L12.64|
                          DCD      0x00002710

                          AREA ||i.Test_Sem_1||, CODE, READONLY, ALIGN=2

                  Test_Sem_1 PROC
;;;73     
;;;74     void Test_Sem_1(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;75     {
;;;76         rmp_cnt_t Count;
;;;77         for(Count=0;Count<10000;Count++)
;;;78         {
;;;79             /* Read counter here */
;;;80             Start=COUNTER_READ();
000002  4d07              LDR      r5,|L13.32|
000004  4e07              LDR      r6,|L13.36|
000006  4f08              LDR      r7,|L13.40|
000008  2400              MOVS     r4,#0                 ;77
                  |L13.10|
00000a  6a68              LDR      r0,[r5,#0x24]
00000c  8030              STRH     r0,[r6,#0]
;;;81             RMP_Sem_Post(&Sem_1, 1);
00000e  2101              MOVS     r1,#1
000010  4806              LDR      r0,|L13.44|
000012  f7fffffe          BL       RMP_Sem_Post
000016  1c64              ADDS     r4,r4,#1
000018  42bc              CMP      r4,r7                 ;77
00001a  dbf6              BLT      |L13.10|
;;;82         }
;;;83     }
00001c  bdf8              POP      {r3-r7,pc}
;;;84     
                          ENDP

00001e  0000              DCW      0x0000
                  |L13.32|
                          DCD      0x40000400
                  |L13.36|
                          DCD      ||.data||
                  |L13.40|
                          DCD      0x00002710
                  |L13.44|
                          DCD      ||.bss||+0x500

                          AREA ||i.Test_Sem_2||, CODE, READONLY, ALIGN=2

                  Test_Sem_2 PROC
;;;125    
;;;126    void Test_Sem_2(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;127    {
;;;128        rmp_cnt_t Count;
;;;129        for(Count=0;Count<10000;Count++)
;;;130        {
;;;131            RMP_Sem_Pend(&Sem_1, RMP_MAX_SLICES);
;;;132            /* Read counter here */
;;;133            End=COUNTER_READ();
000002  4e0a              LDR      r6,|L14.44|
000004  4c0a              LDR      r4,|L14.48|
000006  4f0b              LDR      r7,|L14.52|
000008  2500              MOVS     r5,#0                 ;129
                  |L14.10|
00000a  490b              LDR      r1,|L14.56|
00000c  480b              LDR      r0,|L14.60|
00000e  f7fffffe          BL       RMP_Sem_Pend
000012  6a70              LDR      r0,[r6,#0x24]
000014  8060              STRH     r0,[r4,#2]
;;;134            Total+=(rmp_tim_t)(End-Start);
000016  8860              LDRH     r0,[r4,#2]  ; End
000018  8821              LDRH     r1,[r4,#0]  ; Start
00001a  1a40              SUBS     r0,r0,r1
00001c  6861              LDR      r1,[r4,#4]  ; Total
00001e  b280              UXTH     r0,r0
000020  1840              ADDS     r0,r0,r1
000022  6060              STR      r0,[r4,#4]  ; Total
000024  1c6d              ADDS     r5,r5,#1
000026  42bd              CMP      r5,r7                 ;129
000028  dbef              BLT      |L14.10|
;;;135        }
;;;136    }
00002a  bdf8              POP      {r3-r7,pc}
;;;137    
                          ENDP

                  |L14.44|
                          DCD      0x40000400
                  |L14.48|
                          DCD      ||.data||
                  |L14.52|
                          DCD      0x00002710
                  |L14.56|
                          DCD      0x000186a0
                  |L14.60|
                          DCD      ||.bss||+0x500

                          AREA ||i.Test_Sem_ISR||, CODE, READONLY, ALIGN=2

                  Test_Sem_ISR PROC
;;;150    
;;;151    void Test_Sem_ISR(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;152    {
;;;153        static rmp_cnt_t Count;
;;;154        for(Count=0;Count<10000;Count++)
000002  4c0c              LDR      r4,|L15.52|
000004  2000              MOVS     r0,#0
;;;155        {
;;;156            RMP_Sem_Pend(&Sem_1, RMP_MAX_SLICES);
000006  4f0c              LDR      r7,|L15.56|
;;;157            /* Read counter here */
;;;158            End=COUNTER_READ();
000008  4d0c              LDR      r5,|L15.60|
00000a  4e0d              LDR      r6,|L15.64|
00000c  62a0              STR      r0,[r4,#0x28]         ;154  ; Count
                  |L15.14|
00000e  4639              MOV      r1,r7                 ;156
000010  480c              LDR      r0,|L15.68|
000012  f7fffffe          BL       RMP_Sem_Pend
000016  6a68              LDR      r0,[r5,#0x24]
000018  8060              STRH     r0,[r4,#2]
;;;159            Total+=(rmp_tim_t)(End-Start);
00001a  8860              LDRH     r0,[r4,#2]  ; End
00001c  8821              LDRH     r1,[r4,#0]  ; Start
00001e  1a40              SUBS     r0,r0,r1
000020  6861              LDR      r1,[r4,#4]  ; Total
000022  b280              UXTH     r0,r0
000024  1840              ADDS     r0,r0,r1
000026  6060              STR      r0,[r4,#4]  ; Total
000028  6aa0              LDR      r0,[r4,#0x28]         ;154  ; Count
00002a  1c40              ADDS     r0,r0,#1              ;154
00002c  62a0              STR      r0,[r4,#0x28]         ;154  ; Count
00002e  42b0              CMP      r0,r6                 ;154
000030  dbed              BLT      |L15.14|
;;;160        }
;;;161    }
000032  bdf8              POP      {r3-r7,pc}
;;;162    
                          ENDP

                  |L15.52|
                          DCD      ||.data||
                  |L15.56|
                          DCD      0x000186a0
                  |L15.60|
                          DCD      0x40000400
                  |L15.64|
                          DCD      0x00002710
                  |L15.68|
                          DCD      ||.bss||+0x500

                          AREA ||i.Test_Yield_1||, CODE, READONLY, ALIGN=2

                  Test_Yield_1 PROC
;;;51     ******************************************************************************/
;;;52     void Test_Yield_1(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;53     {
;;;54         rmp_cnt_t Count;
;;;55         for(Count=0;Count<10000;Count++)
;;;56         {
;;;57             /* Read counter here */
;;;58             Start=COUNTER_READ();
000002  4d06              LDR      r5,|L16.28|
000004  4e06              LDR      r6,|L16.32|
000006  4f07              LDR      r7,|L16.36|
000008  2400              MOVS     r4,#0                 ;55
                  |L16.10|
00000a  6a68              LDR      r0,[r5,#0x24]
00000c  8030              STRH     r0,[r6,#0]
;;;59             RMP_Yield();
00000e  f7fffffe          BL       RMP_Yield
000012  1c64              ADDS     r4,r4,#1
000014  42bc              CMP      r4,r7                 ;55
000016  dbf8              BLT      |L16.10|
;;;60         }
;;;61     }
000018  bdf8              POP      {r3-r7,pc}
;;;62     
                          ENDP

00001a  0000              DCW      0x0000
                  |L16.28|
                          DCD      0x40000400
                  |L16.32|
                          DCD      ||.data||
                  |L16.36|
                          DCD      0x00002710

                          AREA ||i.Test_Yield_2||, CODE, READONLY, ALIGN=2

                  Test_Yield_2 PROC
;;;101    ******************************************************************************/
;;;102    void Test_Yield_2(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;103    {
;;;104        rmp_cnt_t Count;
;;;105        for(Count=0;Count<10000;Count++)
000002  2500              MOVS     r5,#0
;;;106        {
;;;107            RMP_Yield();
;;;108            /* Read counter here */
;;;109            End=COUNTER_READ();
000004  4e08              LDR      r6,|L17.40|
000006  4c09              LDR      r4,|L17.44|
000008  4f09              LDR      r7,|L17.48|
                  |L17.10|
00000a  f7fffffe          BL       RMP_Yield
00000e  6a70              LDR      r0,[r6,#0x24]
000010  8060              STRH     r0,[r4,#2]
;;;110            Total+=(rmp_tim_t)(End-Start);
000012  8860              LDRH     r0,[r4,#2]  ; End
000014  8821              LDRH     r1,[r4,#0]  ; Start
000016  1a40              SUBS     r0,r0,r1
000018  6861              LDR      r1,[r4,#4]  ; Total
00001a  b280              UXTH     r0,r0
00001c  1840              ADDS     r0,r0,r1
00001e  6060              STR      r0,[r4,#4]  ; Total
000020  1c6d              ADDS     r5,r5,#1
000022  42bd              CMP      r5,r7                 ;105
000024  dbf1              BLT      |L17.10|
;;;111        };
;;;112    }
000026  bdf8              POP      {r3-r7,pc}
;;;113    void Test_Mail_2(void)
                          ENDP

                  |L17.40|
                          DCD      0x40000400
                  |L17.44|
                          DCD      ||.data||
                  |L17.48|
                          DCD      0x00002710

                          AREA ||i.Timer_Init||, CODE, READONLY, ALIGN=2

                  Timer_Init PROC
;;;40     ******************************************************************************/
;;;41     void Timer_Init(void)
000000  b538              PUSH     {r3-r5,lr}
;;;42     {
;;;43         /* TIM3 clock = CPU clock */
;;;44         TIM3_Handle.Instance=TIM3;
000002  4c0e              LDR      r4,|L18.60|
;;;45         TIM3_Handle.Init.Prescaler=0;
000004  2100              MOVS     r1,#0
;;;46         TIM3_Handle.Init.CounterMode=TIM_COUNTERMODE_UP;
000006  6061              STR      r1,[r4,#4]  ; TIM3_Handle
000008  480b              LDR      r0,|L18.56|
;;;47         TIM3_Handle.Init.Period=(rmp_u16_t)(-1);
00000a  60a1              STR      r1,[r4,#8]  ; TIM3_Handle
00000c  6020              STR      r0,[r4,#0]  ; TIM3_Handle
00000e  480c              LDR      r0,|L18.64|
;;;48         TIM3_Handle.Init.ClockDivision=TIM_CLOCKDIVISION_DIV1;
;;;49         HAL_TIM_Base_Init(&TIM3_Handle);
000010  6121              STR      r1,[r4,#0x10]  ; TIM3_Handle
000012  60e0              STR      r0,[r4,#0xc]  ; TIM3_Handle
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       HAL_TIM_Base_Init
;;;50         __HAL_RCC_TIM3_CLK_ENABLE();
00001a  480a              LDR      r0,|L18.68|
00001c  69c2              LDR      r2,[r0,#0x1c]
00001e  2102              MOVS     r1,#2
000020  430a              ORRS     r2,r2,r1
000022  61c2              STR      r2,[r0,#0x1c]
000024  69c0              LDR      r0,[r0,#0x1c]
000026  4008              ANDS     r0,r0,r1
;;;51         __HAL_TIM_ENABLE(&TIM3_Handle);
000028  9000              STR      r0,[sp,#0]
00002a  6820              LDR      r0,[r4,#0]  ; TIM3_Handle
00002c  6801              LDR      r1,[r0,#0]
00002e  2201              MOVS     r2,#1
000030  4311              ORRS     r1,r1,r2
000032  6001              STR      r1,[r0,#0]
;;;52     }
000034  bd38              POP      {r3-r5,pc}
;;;53     /* End Function:Timer_Init ***************************************************/
                          ENDP

000036  0000              DCW      0x0000
                  |L18.56|
                          DCD      0x40000400
                  |L18.60|
                          DCD      ||.bss||
                  |L18.64|
                          DCD      0x0000ffff
                  |L18.68|
                          DCD      0x40021000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TIM3_Handle
                          %        68
                  TIM14_Handle
                          %        68
                  Stack_1
                          %        512
                  Stack_2
                          %        512
                  Thd_1
                          %        60
                  Thd_2
                          %        60
                  Sem_1
                          %        16

                          AREA ||area_number.21||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.bss||
                  Thd_Test
                          %        60

                          AREA ||.data||, DATA, ALIGN=2

                  Start
000000  0000              DCW      0x0000
                  End
000002  0000              DCW      0x0000
                  Total
                          DCD      0x00000000
                  Temp
                          DCD      0x00000000
                  Yield_Time
                          DCD      0x00000000
                  Mailbox_Time
                          DCD      0x00000000
                  Semaphore_Time
                          DCD      0x00000000
                  Mailbox_ISR_Time
                          DCD      0x00000000
                  Semaphore_ISR_Time
                          DCD      0x00000000
                  Count
                          DCD      0x00000000
                  |symbol_number.60|
                          DCD      0x00000000
                  |symbol_number.61|
                          DCD      0x00000000
                  |symbol_number.62|
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\MProkaron\\Benchmark\\rmp_test.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_rmp_test_c_17a39efc____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F0_V1.9.0\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_rmp_test_c_17a39efc____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_rmp_test_c_17a39efc____REVSH|
#line 402
|__asm___10_rmp_test_c_17a39efc____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
