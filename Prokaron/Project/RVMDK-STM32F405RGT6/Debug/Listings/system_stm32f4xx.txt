; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\output\system_stm32f4xx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\system_stm32f4xx.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F4_V1.21.0\Drivers\STM32F4xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32Cube_FW_F4_V1.21.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F4_V1.21.0\Drivers\CMSIS\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F4_V1.21.0\Drivers\STM32F4xx_HAL_Driver\Inc\Conf -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F405RGT6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F405xx -DSTM32F405xx -DUSE_HAL_DRIVER -DHSE_VALUE=8000000 -DPLL_M=8 --enum_is_int --signed_chars --omf_browse=.\debug\output\system_stm32f4xx.crf ..\..\..\M0P0_Library\STM32Cube_FW_F4_V1.21.0\Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\system_stm32f4xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;238      */
;;;239    void SystemCoreClockUpdate(void)
000000  f8dfc06c          LDR      r12,|L1.112|
;;;240    {
000004  b430              PUSH     {r4,r5}
;;;241      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
;;;242      
;;;243      /* Get SYSCLK source -------------------------------------------------------*/
;;;244      tmp = RCC->CFGR & RCC_CFGR_SWS;
000006  f8dc0000          LDR      r0,[r12,#0]
;;;245    
;;;246      switch (tmp)
;;;247      {
;;;248        case 0x00:  /* HSI used as system clock source */
;;;249          SystemCoreClock = HSI_VALUE;
00000a  4b1a              LDR      r3,|L1.116|
00000c  f010010c          ANDS     r1,r0,#0xc            ;244
000010  4819              LDR      r0,|L1.120|
000012  d006              BEQ      |L1.34|
;;;250          break;
;;;251        case 0x04:  /* HSE used as system clock source */
;;;252          SystemCoreClock = HSE_VALUE;
000014  105c              ASRS     r4,r3,#1
000016  2904              CMP      r1,#4                 ;246
000018  bf08              IT       EQ
00001a  6004              STREQ    r4,[r0,#0]  ; SystemCoreClock
00001c  d002              BEQ      |L1.36|
00001e  2908              CMP      r1,#8                 ;246
000020  d00c              BEQ      |L1.60|
                  |L1.34|
000022  6003              STR      r3,[r0,#0]            ;249  ; SystemCoreClock
                  |L1.36|
;;;253          break;
;;;254        case 0x08:  /* PLL used as system clock source */
;;;255    
;;;256          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;257             SYSCLK = PLL_VCO / PLL_P
;;;258             */    
;;;259          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
;;;260          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
;;;261          
;;;262          if (pllsource != 0)
;;;263          {
;;;264            /* HSE used as PLL clock source */
;;;265            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
;;;266          }
;;;267          else
;;;268          {
;;;269            /* HSI used as PLL clock source */
;;;270            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
;;;271          }
;;;272    
;;;273          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
;;;274          SystemCoreClock = pllvco/pllp;
;;;275          break;
;;;276        default:
;;;277          SystemCoreClock = HSI_VALUE;
;;;278          break;
;;;279      }
;;;280      /* Compute HCLK frequency --------------------------------------------------*/
;;;281      /* Get HCLK prescaler */
;;;282      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000024  f8dc1000          LDR      r1,[r12,#0]
000028  4a14              LDR      r2,|L1.124|
00002a  f3c11103          UBFX     r1,r1,#4,#4
00002e  5c51              LDRB     r1,[r2,r1]
;;;283      /* HCLK frequency */
;;;284      SystemCoreClock >>= tmp;
000030  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
000032  fa22f101          LSR      r1,r2,r1
;;;285    }
000036  6001              STR      r1,[r0,#0]  ; SystemCoreClock
000038  bc30              POP      {r4,r5}
00003a  4770              BX       lr
                  |L1.60|
00003c  4910              LDR      r1,|L1.128|
00003e  680a              LDR      r2,[r1,#0]            ;259
000040  f3c25580          UBFX     r5,r2,#22,#1          ;259
000044  680a              LDR      r2,[r1,#0]            ;260
000046  2d00              CMP      r5,#0                 ;262
000048  f002023f          AND      r2,r2,#0x3f           ;260
00004c  bf14              ITE      NE                    ;265
00004e  fbb4f2f2          UDIVNE   r2,r4,r2              ;265
000052  fbb3f2f2          UDIVEQ   r2,r3,r2              ;270
000056  680b              LDR      r3,[r1,#0]            ;270
000058  6809              LDR      r1,[r1,#0]            ;273
00005a  f3c31388          UBFX     r3,r3,#6,#9           ;270
00005e  435a              MULS     r2,r3,r2              ;270
000060  f3c14101          UBFX     r1,r1,#16,#2          ;273
000064  1c49              ADDS     r1,r1,#1              ;273
000066  0049              LSLS     r1,r1,#1              ;273
000068  fbb2f1f1          UDIV     r1,r2,r1              ;274
00006c  6001              STR      r1,[r0,#0]            ;262  ; SystemCoreClock
00006e  e7d9              B        |L1.36|
;;;286    
                          ENDP

                  |L1.112|
                          DCD      0x40023808
                  |L1.116|
                          DCD      0x00f42400
                  |L1.120|
                          DCD      ||.data||
                  |L1.124|
                          DCD      ||.constdata||
                  |L1.128|
                          DCD      0x40023804

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;165      */
;;;166    void SystemInit(void)
000000  480f              LDR      r0,|L2.64|
;;;167    {
;;;168      /* FPU settings ------------------------------------------------------------*/
;;;169      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;170        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
000002  6801              LDR      r1,[r0,#0]
000004  f4410170          ORR      r1,r1,#0xf00000
000008  6001              STR      r1,[r0,#0]
;;;171      #endif
;;;172      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;173      /* Set HSION bit */
;;;174      RCC->CR |= (uint32_t)0x00000001;
00000a  480e              LDR      r0,|L2.68|
00000c  6801              LDR      r1,[r0,#0]
00000e  f0410101          ORR      r1,r1,#1
000012  6001              STR      r1,[r0,#0]
;;;175    
;;;176      /* Reset CFGR register */
;;;177      RCC->CFGR = 0x00000000;
000014  4a0c              LDR      r2,|L2.72|
000016  2100              MOVS     r1,#0
000018  6011              STR      r1,[r2,#0]
;;;178    
;;;179      /* Reset HSEON, CSSON and PLLON bits */
;;;180      RCC->CR &= (uint32_t)0xFEF6FFFF;
00001a  6802              LDR      r2,[r0,#0]
00001c  f4222210          BIC      r2,r2,#0x90000
000020  f0227280          BIC      r2,r2,#0x1000000
000024  6002              STR      r2,[r0,#0]
;;;181    
;;;182      /* Reset PLLCFGR register */
;;;183      RCC->PLLCFGR = 0x24003010;
000026  1d03              ADDS     r3,r0,#4
000028  4a08              LDR      r2,|L2.76|
00002a  601a              STR      r2,[r3,#0]
;;;184    
;;;185      /* Reset HSEBYP bit */
;;;186      RCC->CR &= (uint32_t)0xFFFBFFFF;
00002c  6802              LDR      r2,[r0,#0]
00002e  f4222280          BIC      r2,r2,#0x40000
000032  6002              STR      r2,[r0,#0]
;;;187    
;;;188      /* Disable all interrupts */
;;;189      RCC->CIR = 0x00000000;
000034  4806              LDR      r0,|L2.80|
000036  6001              STR      r1,[r0,#0]
;;;190    
;;;191    #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
;;;192      SystemInit_ExtMemCtl(); 
;;;193    #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
;;;194    
;;;195      /* Configure the Vector Table location add offset address ------------------*/
;;;196    #ifdef VECT_TAB_SRAM
;;;197      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;198    #else
;;;199      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
000038  4906              LDR      r1,|L2.84|
00003a  0658              LSLS     r0,r3,#25
00003c  6008              STR      r0,[r1,#0]
;;;200    #endif
;;;201    }
00003e  4770              BX       lr
;;;202    
                          ENDP

                  |L2.64|
                          DCD      0xe000ed88
                  |L2.68|
                          DCD      0x40023800
                  |L2.72|
                          DCD      0x40023808
                  |L2.76|
                          DCD      0x24003010
                  |L2.80|
                          DCD      0x4002380c
                  |L2.84|
                          DCD      0xe000ed08

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09

                          AREA ||area_number.6||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.6||, ||.constdata||
                  APBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  01020304          DCB      0x01,0x02,0x03,0x04

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00f42400

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F4_V1.21.0\\Drivers\\CMSIS\\Device\\ST\\STM32F4xx\\Source\\Templates\\system_stm32f4xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F4_V1.21.0\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_system_stm32f4xx_c_5d646a67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REVSH|
#line 402
|__asm___18_system_stm32f4xx_c_5d646a67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____RRX|
#line 587
|__asm___18_system_stm32f4xx_c_5d646a67____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
