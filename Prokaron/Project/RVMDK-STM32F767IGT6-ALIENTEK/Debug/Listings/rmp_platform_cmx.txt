; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\rmp_platform_cmx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\rmp_platform_cmx.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Core -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Inc -I.\Source -I.\Drivers -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F767IGT6-ALIENTEK\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\rmp_platform_cmx.crf ..\..\MProkaron\Platform\CortexM\rmp_platform_cmx.c]
                          THUMB

                          AREA ||i.RMP_Putchar||, CODE, READONLY, ALIGN=2

                  RMP_Putchar PROC
;;;91     ******************************************************************************/
;;;92     void RMP_Putchar(char Char)
000000  4902              LDR      r1,|L1.12|
;;;93     {
;;;94         RMP_CMX_PUTCHAR(Char);
000002  6288              STR      r0,[r1,#0x28]
                  |L1.4|
000004  69c8              LDR      r0,[r1,#0x1c]
000006  0640              LSLS     r0,r0,#25
000008  d5fc              BPL      |L1.4|
;;;95     }
00000a  4770              BX       lr
;;;96     /* End Function:RMP_Putchar **************************************************/
                          ENDP

                  |L1.12|
                          DCD      0x40011000

                          AREA ||i._RMP_Low_Level_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Low_Level_Init PROC
;;;65     ******************************************************************************/
;;;66     void _RMP_Low_Level_Init(void)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;67     {    
000004  b0b9              SUB      sp,sp,#0xe4
;;;68         RMP_CMX_LOW_LEVEL_INIT();
000006  2134              MOVS     r1,#0x34
000008  a81f              ADD      r0,sp,#0x7c
00000a  f7fffffe          BL       RMP_Clear
00000e  2114              MOVS     r1,#0x14
000010  a82c              ADD      r0,sp,#0xb0
000012  f7fffffe          BL       RMP_Clear
000016  2114              MOVS     r1,#0x14
000018  a831              ADD      r0,sp,#0xc4
00001a  f7fffffe          BL       RMP_Clear
00001e  2178              MOVS     r1,#0x78
000020  4668              MOV      r0,sp
000022  f7fffffe          BL       RMP_Clear
000026  489c              LDR      r0,|L2.664|
000028  6801              LDR      r1,[r0,#0]
00002a  f0415180          ORR      r1,r1,#0x10000000
00002e  6001              STR      r1,[r0,#0]
000030  6800              LDR      r0,[r0,#0]
000032  f0005080          AND      r0,r0,#0x10000000
000036  901e              STR      r0,[sp,#0x78]
000038  4898              LDR      r0,|L2.668|
00003a  6801              LDR      r1,[r0,#0]
00003c  f4414140          ORR      r1,r1,#0xc000
000040  6001              STR      r1,[r0,#0]
000042  6800              LDR      r0,[r0,#0]
000044  2502              MOVS     r5,#2
000046  f04f0901          MOV      r9,#1
00004a  03e9              LSLS     r1,r5,#15
00004c  9120              STR      r1,[sp,#0x80]
00004e  f4004040          AND      r0,r0,#0xc000
000052  018a              LSLS     r2,r1,#6
000054  a927              ADD      r1,sp,#0x9c
000056  2319              MOVS     r3,#0x19
000058  e9cd5225          STRD     r5,r2,[sp,#0x94]
00005c  e9cd091e          STRD     r0,r9,[sp,#0x78]
000060  2609              MOVS     r6,#9
000062  f44f74d8          MOV      r4,#0x1b0
000066  e8810078          STM      r1,{r3-r6}
00006a  a81f              ADD      r0,sp,#0x7c
00006c  f7fffffe          BL       HAL_RCC_OscConfig
000070  2800              CMP      r0,#0
000072  d01b              BEQ      |L2.172|
000074  a08a              ADR      r0,|L2.672|
000076  f7fffffe          BL       RMP_Print_String
00007a  a093              ADR      r0,|L2.712|
00007c  f7fffffe          BL       RMP_Print_String
000080  a09e              ADR      r0,|L2.764|
000082  f7fffffe          BL       RMP_Print_String
000086  2044              MOVS     r0,#0x44
000088  f7fffffe          BL       RMP_Print_Int
00008c  a09e              ADR      r0,|L2.776|
00008e  f7fffffe          BL       RMP_Print_String
000092  a09e              ADR      r0,|L2.780|
000094  f7fffffe          BL       RMP_Print_String
000098  a09f              ADR      r0,|L2.792|
00009a  f7fffffe          BL       RMP_Print_String
00009e  a09f              ADR      r0,|L2.796|
0000a0  f7fffffe          BL       RMP_Print_String
0000a4  a098              ADR      r0,|L2.776|
0000a6  f7fffffe          BL       RMP_Print_String
                  |L2.170|
0000aa  e7fe              B        |L2.170|
                  |L2.172|
0000ac  f7fffffe          BL       HAL_PWREx_EnableOverDrive
0000b0  2800              CMP      r0,#0
0000b2  d01b              BEQ      |L2.236|
0000b4  a07a              ADR      r0,|L2.672|
0000b6  f7fffffe          BL       RMP_Print_String
0000ba  a083              ADR      r0,|L2.712|
0000bc  f7fffffe          BL       RMP_Print_String
0000c0  a08e              ADR      r0,|L2.764|
0000c2  f7fffffe          BL       RMP_Print_String
0000c6  2044              MOVS     r0,#0x44
0000c8  f7fffffe          BL       RMP_Print_Int
0000cc  a08e              ADR      r0,|L2.776|
0000ce  f7fffffe          BL       RMP_Print_String
0000d2  a08e              ADR      r0,|L2.780|
0000d4  f7fffffe          BL       RMP_Print_String
0000d8  a08f              ADR      r0,|L2.792|
0000da  f7fffffe          BL       RMP_Print_String
0000de  a08f              ADR      r0,|L2.796|
0000e0  f7fffffe          BL       RMP_Print_String
0000e4  a088              ADR      r0,|L2.776|
0000e6  f7fffffe          BL       RMP_Print_String
                  |L2.234|
0000ea  e7fe              B        |L2.234|
                  |L2.236|
0000ec  f44f5280          MOV      r2,#0x1000
0000f0  2400              MOVS     r4,#0
0000f2  942e              STR      r4,[sp,#0xb8]
0000f4  f44f51a0          MOV      r1,#0x1400
0000f8  e9cd122f          STRD     r1,r2,[sp,#0xbc]
0000fc  200f              MOVS     r0,#0xf
0000fe  e9cd052c          STRD     r0,r5,[sp,#0xb0]
000102  2107              MOVS     r1,#7
000104  a82c              ADD      r0,sp,#0xb0
000106  f7fffffe          BL       HAL_RCC_ClockConfig
00010a  2800              CMP      r0,#0
00010c  d01b              BEQ      |L2.326|
00010e  a064              ADR      r0,|L2.672|
000110  f7fffffe          BL       RMP_Print_String
000114  a06c              ADR      r0,|L2.712|
000116  f7fffffe          BL       RMP_Print_String
00011a  a078              ADR      r0,|L2.764|
00011c  f7fffffe          BL       RMP_Print_String
000120  2044              MOVS     r0,#0x44
000122  f7fffffe          BL       RMP_Print_Int
000126  a078              ADR      r0,|L2.776|
000128  f7fffffe          BL       RMP_Print_String
00012c  a077              ADR      r0,|L2.780|
00012e  f7fffffe          BL       RMP_Print_String
000132  a079              ADR      r0,|L2.792|
000134  f7fffffe          BL       RMP_Print_String
000138  a078              ADR      r0,|L2.796|
00013a  f7fffffe          BL       RMP_Print_String
00013e  a072              ADR      r0,|L2.776|
000140  f7fffffe          BL       RMP_Print_String
                  |L2.324|
000144  e7fe              B        |L2.324|
                  |L2.326|
000146  f3bf8f4f          DSB      
00014a  f3bf8f6f          ISB      
00014e  4876              LDR      r0,|L2.808|
000150  6004              STR      r4,[r0,#0]
000152  f3bf8f4f          DSB      
000156  f3bf8f6f          ISB      
00015a  4974              LDR      r1,|L2.812|
00015c  6808              LDR      r0,[r1,#0]
00015e  f4403000          ORR      r0,r0,#0x20000
000162  6008              STR      r0,[r1,#0]
000164  f3bf8f4f          DSB      
000168  f3bf8f6f          ISB      
00016c  486f              LDR      r0,|L2.812|
00016e  3070              ADDS     r0,r0,#0x70
000170  6004              STR      r4,[r0,#0]
000172  f3bf8f4f          DSB      
000176  1f00              SUBS     r0,r0,#4
000178  f64378ff          MOV      r8,#0x3fff
00017c  6800              LDR      r0,[r0,#0]
00017e  4e6a              LDR      r6,|L2.808|
000180  3610              ADDS     r6,r6,#0x10
000182  f3c0324e          UBFX     r2,r0,#13,#15
000186  f3c003c9          UBFX     r3,r0,#3,#10
                  |L2.394|
00018a  ea081742          AND      r7,r8,r2,LSL #5
00018e  4618              MOV      r0,r3
                  |L2.400|
000190  ea477c80          ORR      r12,r7,r0,LSL #30
000194  f8c6c000          STR      r12,[r6,#0]
000198  1e40              SUBS     r0,r0,#1
00019a  d2f9              BCS      |L2.400|
00019c  1e52              SUBS     r2,r2,#1
00019e  d2f4              BCS      |L2.394|
0001a0  f3bf8f4f          DSB      
0001a4  6808              LDR      r0,[r1,#0]
0001a6  f4403080          ORR      r0,r0,#0x10000
0001aa  6008              STR      r0,[r1,#0]
0001ac  f3bf8f4f          DSB      
0001b0  f3bf8f6f          ISB      
0001b4  485e              LDR      r0,|L2.816|
0001b6  6801              LDR      r1,[r0,#0]
0001b8  f4417100          ORR      r1,r1,#0x200
0001bc  6001              STR      r1,[r0,#0]
0001be  4836              LDR      r0,|L2.664|
0001c0  3810              SUBS     r0,r0,#0x10
0001c2  6801              LDR      r1,[r0,#0]
0001c4  f0410101          ORR      r1,r1,#1
0001c8  6001              STR      r1,[r0,#0]
0001ca  6800              LDR      r0,[r0,#0]
0001cc  f0000001          AND      r0,r0,#1
0001d0  901e              STR      r0,[sp,#0x78]
0001d2  4831              LDR      r0,|L2.664|
0001d4  1d00              ADDS     r0,r0,#4
0001d6  6801              LDR      r1,[r0,#0]
0001d8  f0410110          ORR      r1,r1,#0x10
0001dc  6001              STR      r1,[r0,#0]
0001de  6800              LDR      r0,[r0,#0]
0001e0  ab31              ADD      r3,sp,#0xc4
0001e2  f44f7100          MOV      r1,#0x200
0001e6  f0000010          AND      r0,r0,#0x10
0001ea  901e              STR      r0,[sp,#0x78]
0001ec  2607              MOVS     r6,#7
0001ee  4851              LDR      r0,|L2.820|
0001f0  e8830222          STM      r3,{r1,r5,r9}
0001f4  2203              MOVS     r2,#3
0001f6  e9cd2634          STRD     r2,r6,[sp,#0xd0]
0001fa  a931              ADD      r1,sp,#0xc4
0001fc  f7fffffe          BL       HAL_GPIO_Init
000200  484d              LDR      r0,|L2.824|
000202  f44f31e1          MOV      r1,#0x1c200
000206  2208              MOVS     r2,#8
000208  e88d0013          STM      sp,{r0,r1,r4}
00020c  9403              STR      r4,[sp,#0xc]
00020e  4668              MOV      r0,sp
000210  9404              STR      r4,[sp,#0x10]
000212  e9cd2405          STRD     r2,r4,[sp,#0x14]
000216  f7fffffe          BL       HAL_UART_Init
00021a  4844              LDR      r0,|L2.812|
00021c  3010              ADDS     r0,r0,#0x10
00021e  6801              LDR      r1,[r0,#0]
000220  f44121e0          ORR      r1,r1,#0x70000
000224  6001              STR      r1,[r0,#0]
000226  4941              LDR      r1,|L2.812|
000228  f64f03ff          MOV      r3,#0xf8ff
00022c  4a43              LDR      r2,|L2.828|
00022e  3908              SUBS     r1,r1,#8
000230  6808              LDR      r0,[r1,#0]
000232  4018              ANDS     r0,r0,r3
000234  f44060a0          ORR      r0,r0,#0x500
000238  4310              ORRS     r0,r0,r2
00023a  6008              STR      r0,[r1,#0]
00023c  21ff              MOVS     r1,#0xff
00023e  f06f0004          MVN      r0,#4
000242  f7fffffe          BL       __NVIC_SetPriority
000246  21ff              MOVS     r1,#0xff
000248  f06f0001          MVN      r0,#1
00024c  f7fffffe          BL       __NVIC_SetPriority
000250  f04f37ff          MOV      r7,#0xffffffff
000254  21ff              MOVS     r1,#0xff
000256  4638              MOV      r0,r7
000258  f7fffffe          BL       __NVIC_SetPriority
00025c  21ff              MOVS     r1,#0xff
00025e  f06f000a          MVN      r0,#0xa
000262  f7fffffe          BL       __NVIC_SetPriority
000266  21ff              MOVS     r1,#0xff
000268  f06f0009          MVN      r0,#9
00026c  f7fffffe          BL       __NVIC_SetPriority
000270  21ff              MOVS     r1,#0xff
000272  00b8              LSLS     r0,r7,#2
000274  f7fffffe          BL       __NVIC_SetPriority
000278  f04f25e0          MOV      r5,#0xe000e000
;;;69       
;;;70         RMP_Disable_Int();
;;;71     }
00027c  f245405f          MOV      r0,#0x545f
000280  6168              STR      r0,[r5,#0x14]
000282  210f              MOVS     r1,#0xf
000284  4638              MOV      r0,r7
000286  f7fffffe          BL       __NVIC_SetPriority
00028a  61ac              STR      r4,[r5,#0x18]
00028c  612e              STR      r6,[r5,#0x10]
00028e  b039              ADD      sp,sp,#0xe4           ;70
000290  e8bd43f0          POP      {r4-r9,lr}            ;70
000294  f7ffbffe          B.W      RMP_Disable_Int
;;;72     /* End Function:_RMP_Low_Level_Init ******************************************/
                          ENDP

                  |L2.664|
                          DCD      0x40023840
                  |L2.668|
                          DCD      0x40007000
                  |L2.672|
0002a0  0d0a2a2a          DCB      "\r\n***\r\nKernel panic - not syncing:\r\n",0
0002a4  2a0d0a4b
0002a8  65726e65
0002ac  6c207061
0002b0  6e696320
0002b4  2d206e6f
0002b8  74207379
0002bc  6e63696e
0002c0  673a0d0a
0002c4  00      
0002c5  00                DCB      0
0002c6  00                DCB      0
0002c7  00                DCB      0
                  |L2.712|
0002c8  2e2e5c2e          DCB      "..\\..\\MProkaron\\Platform\\CortexM\\rmp_platform_cmx."
0002cc  2e5c4d50
0002d0  726f6b61
0002d4  726f6e5c
0002d8  506c6174
0002dc  666f726d
0002e0  5c436f72
0002e4  7465784d
0002e8  5c726d70
0002ec  5f706c61
0002f0  74666f72
0002f4  6d5f636d
0002f8  782e    
0002fa  6300              DCB      "c",0
                  |L2.764|
0002fc  202c204c          DCB      " , Line ",0
000300  696e6520
000304  00      
000305  00                DCB      0
000306  00                DCB      0
000307  00                DCB      0
                  |L2.776|
000308  0d0a00            DCB      "\r\n",0
00030b  00                DCB      0
                  |L2.780|
00030c  4f637420          DCB      "Oct  9 2018",0
000310  20392032
000314  30313800
                  |L2.792|
000318  202c2000          DCB      " , ",0
                  |L2.796|
00031c  32333a35          DCB      "23:50:40",0
000320  303a3430
000324  00      
000325  00                DCB      0
000326  00                DCB      0
000327  00                DCB      0
                  |L2.808|
                          DCD      0xe000ef50
                  |L2.812|
                          DCD      0xe000ed14
                  |L2.816|
                          DCD      0x40023c00
                  |L2.820|
                          DCD      0x40020000
                  |L2.824|
                          DCD      0x40011000
                  |L2.828|
                          DCD      0x05fa0000

                          AREA ||i._RMP_Plat_Hook||, CODE, READONLY, ALIGN=1

                  _RMP_Plat_Hook PROC
;;;79     ******************************************************************************/
;;;80     void _RMP_Plat_Hook(void)
000000  f7ffbffe          B.W      RMP_Enable_Int
;;;81     {
;;;82         RMP_Enable_Int();
;;;83     }
;;;84     /* End Function:_RMP_Plat_Hook ***********************************************/
                          ENDP


                          AREA ||i._RMP_Stack_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Stack_Init PROC
;;;45     ******************************************************************************/
;;;46     void _RMP_Stack_Init(rmp_ptr_t Entry, rmp_ptr_t Stack, rmp_ptr_t Arg)
000000  63c8              STR      r0,[r1,#0x3c]
;;;47     {
;;;48         /* The "9" here is because we also pushed other registers to PSP */
;;;49         /* This is the LR value indicating that we never used the FPU */
;;;50         ((rmp_ptr_t*)Stack)[0+8]=0xFFFFFFFD;    
000002  f06f0302          MVN      r3,#2
;;;51         /* CM3:Pass the parameter */                            
;;;52         ((rmp_ptr_t*)Stack)[0+9]=Arg;       
;;;53         /* CM3:for xPSR. fill the T bit,or an INVSTATE will happen */
;;;54         ((rmp_ptr_t*)Stack)[6+9]=Entry;
;;;55         /* CM3:Set the process entrance */                            
;;;56         ((rmp_ptr_t*)Stack)[7+9]=0x01000200;      
000006  4802              LDR      r0,|L4.16|
000008  6408              STR      r0,[r1,#0x40]
00000a  e9c13208          STRD     r3,r2,[r1,#0x20]
;;;57     }
00000e  4770              BX       lr
;;;58     /* End Function:_RMP_Stack_Init **********************************************/
                          ENDP

                  |L4.16|
                          DCD      0x01000200

                          AREA ||i.__NVIC_SetPriority||, CODE, READONLY, ALIGN=1

                  __NVIC_SetPriority PROC
;;;2012    */
;;;2013   __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000000  0709              LSLS     r1,r1,#28
;;;2014   {
;;;2015     if ((int32_t)(IRQn) >= 0)
000002  2800              CMP      r0,#0
;;;2016     {
;;;2017       NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
000004  ea4f6111          LSR      r1,r1,#24
000008  db04              BLT      |L5.20|
00000a  f10020e0          ADD      r0,r0,#0xe000e000     ;2014
00000e  f8801400          STRB     r1,[r0,#0x400]
;;;2018     }
;;;2019     else
;;;2020     {
;;;2021       SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
;;;2022     }
;;;2023   }
000012  4770              BX       lr
                  |L5.20|
000014  f000000f          AND      r0,r0,#0xf            ;2021
000018  f10020e0          ADD      r0,r0,#0xe000e000     ;2021
00001c  f8801d14          STRB     r1,[r0,#0xd14]        ;2021
000020  4770              BX       lr
;;;2024   
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\MProkaron\\Platform\\CortexM\\rmp_platform_cmx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_rmp_platform_cmx_c_203ac359____REV16|
#line 468 "D:\\Program_Files_x86\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.3.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_rmp_platform_cmx_c_203ac359____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_rmp_platform_cmx_c_203ac359____REVSH|
#line 483
|__asm___18_rmp_platform_cmx_c_203ac359____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_rmp_platform_cmx_c_203ac359____RRX|
#line 670
|__asm___18_rmp_platform_cmx_c_203ac359____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
