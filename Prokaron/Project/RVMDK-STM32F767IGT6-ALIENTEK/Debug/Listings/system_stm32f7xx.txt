; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\system_stm32f7xx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\system_stm32f7xx.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Core -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Inc -I.\Source -I.\Drivers -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F767IGT6-ALIENTEK\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\system_stm32f7xx.crf ..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\CMSIS\Device\ST\STM32F7xx\Source\Templates\system_stm32f7xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;218      */
;;;219    void SystemCoreClockUpdate(void)
000000  b570              PUSH     {r4-r6,lr}
;;;220    {
;;;221      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
;;;222      
;;;223      /* Get SYSCLK source -------------------------------------------------------*/
;;;224      tmp = RCC->CFGR & RCC_CFGR_SWS;
000002  4c1b              LDR      r4,|L1.112|
;;;225    
;;;226      switch (tmp)
;;;227      {
;;;228        case 0x00:  /* HSI used as system clock source */
;;;229          SystemCoreClock = HSI_VALUE;
000004  4a1b              LDR      r2,|L1.116|
000006  481c              LDR      r0,|L1.120|
000008  6821              LDR      r1,[r4,#0]            ;224
00000a  f011010c          ANDS     r1,r1,#0xc            ;224
00000e  d004              BEQ      |L1.26|
;;;230          break;
;;;231        case 0x04:  /* HSE used as system clock source */
;;;232          SystemCoreClock = HSE_VALUE;
000010  4d1a              LDR      r5,|L1.124|
000012  2904              CMP      r1,#4                 ;226
000014  d003              BEQ      |L1.30|
000016  2908              CMP      r1,#8                 ;226
000018  d003              BEQ      |L1.34|
                  |L1.26|
00001a  6002              STR      r2,[r0,#0]            ;230  ; SystemCoreClock
00001c  e01e              B        |L1.92|
                  |L1.30|
;;;233          break;
00001e  6005              STR      r5,[r0,#0]  ; SystemCoreClock
000020  e01c              B        |L1.92|
                  |L1.34|
;;;234        case 0x08:  /* PLL used as system clock source */
;;;235    
;;;236          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;237             SYSCLK = PLL_VCO / PLL_P
;;;238             */    
;;;239          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
000022  4913              LDR      r1,|L1.112|
000024  1f09              SUBS     r1,r1,#4
000026  680e              LDR      r6,[r1,#0]
;;;240          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
000028  680b              LDR      r3,[r1,#0]
00002a  f003033f          AND      r3,r3,#0x3f
00002e  f3c65680          UBFX     r6,r6,#22,#1          ;239
;;;241          
;;;242          if (pllsource != 0)
000032  b12e              CBZ      r6,|L1.64|
;;;243          {
;;;244            /* HSE used as PLL clock source */
;;;245            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
000034  680e              LDR      r6,[r1,#0]
000036  fbb5f2f3          UDIV     r2,r5,r3
00003a  f3c61388          UBFX     r3,r6,#6,#9
00003e  e004              B        |L1.74|
                  |L1.64|
;;;246          }
;;;247          else
;;;248          {
;;;249            /* HSI used as PLL clock source */
;;;250            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
000040  680d              LDR      r5,[r1,#0]
000042  fbb2f2f3          UDIV     r2,r2,r3
000046  f3c51388          UBFX     r3,r5,#6,#9
                  |L1.74|
;;;251          }
;;;252    
;;;253          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
00004a  6809              LDR      r1,[r1,#0]
00004c  435a              MULS     r2,r3,r2              ;250
00004e  f3c14101          UBFX     r1,r1,#16,#2
000052  1c49              ADDS     r1,r1,#1
000054  0049              LSLS     r1,r1,#1
;;;254          SystemCoreClock = pllvco/pllp;
000056  fbb2f1f1          UDIV     r1,r2,r1
00005a  6001              STR      r1,[r0,#0]  ; SystemCoreClock
                  |L1.92|
;;;255          break;
;;;256        default:
;;;257          SystemCoreClock = HSI_VALUE;
;;;258          break;
;;;259      }
;;;260      /* Compute HCLK frequency --------------------------------------------------*/
;;;261      /* Get HCLK prescaler */
;;;262      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
00005c  6821              LDR      r1,[r4,#0]
00005e  4b08              LDR      r3,|L1.128|
;;;263      /* HCLK frequency */
;;;264      SystemCoreClock >>= tmp;
000060  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
000062  f3c11103          UBFX     r1,r1,#4,#4           ;262
000066  5c59              LDRB     r1,[r3,r1]            ;262
000068  40ca              LSRS     r2,r2,r1
00006a  6002              STR      r2,[r0,#0]  ; SystemCoreClock
;;;265    }
00006c  bd70              POP      {r4-r6,pc}
;;;266    
                          ENDP

00006e  0000              DCW      0x0000
                  |L1.112|
                          DCD      0x40023808
                  |L1.116|
                          DCD      0x00f42400
                  |L1.120|
                          DCD      ||.data||
                  |L1.124|
                          DCD      0x017d7840
                  |L1.128|
                          DCD      ||.constdata||

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;149      */
;;;150    void SystemInit(void)
000000  4a10              LDR      r2,|L2.68|
;;;151    {
000002  b530              PUSH     {r4,r5,lr}
;;;152      /* FPU settings ------------------------------------------------------------*/
;;;153      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;154        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
;;;155      #endif
;;;156      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;157      /* Set HSION bit */
;;;158      RCC->CR |= (uint32_t)0x00000001;
000004  4810              LDR      r0,|L2.72|
000006  6814              LDR      r4,[r2,#0]            ;154
;;;159    
;;;160      /* Reset CFGR register */
;;;161      RCC->CFGR = 0x00000000;
000008  2100              MOVS     r1,#0
00000a  4b0f              LDR      r3,|L2.72|
00000c  f4440470          ORR      r4,r4,#0xf00000       ;154
000010  6014              STR      r4,[r2,#0]            ;154
000012  3308              ADDS     r3,r3,#8
000014  6805              LDR      r5,[r0,#0]            ;158
;;;162    
;;;163      /* Reset HSEON, CSSON and PLLON bits */
;;;164      RCC->CR &= (uint32_t)0xFEF6FFFF;
000016  4a0d              LDR      r2,|L2.76|
;;;165    
;;;166      /* Reset PLLCFGR register */
;;;167      RCC->PLLCFGR = 0x24003010;
000018  4c0d              LDR      r4,|L2.80|
00001a  f0450501          ORR      r5,r5,#1              ;158
00001e  6005              STR      r5,[r0,#0]            ;158
000020  6019              STR      r1,[r3,#0]            ;161
000022  6803              LDR      r3,[r0,#0]            ;164
000024  1d05              ADDS     r5,r0,#4
000026  4013              ANDS     r3,r3,r2              ;164
;;;168    
;;;169      /* Reset HSEBYP bit */
;;;170      RCC->CR &= (uint32_t)0xFFFBFFFF;
;;;171    
;;;172      /* Disable all interrupts */
;;;173      RCC->CIR = 0x00000000;
000028  4a07              LDR      r2,|L2.72|
00002a  6003              STR      r3,[r0,#0]            ;164
00002c  320c              ADDS     r2,r2,#0xc
00002e  602c              STR      r4,[r5,#0]            ;167
000030  6805              LDR      r5,[r0,#0]            ;170
;;;174    
;;;175      /* Configure the Vector Table location add offset address ------------------*/
;;;176    #ifdef VECT_TAB_SRAM
;;;177      SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;178    #else
;;;179      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
000032  05e3              LSLS     r3,r4,#23
000034  4c03              LDR      r4,|L2.68|
000036  f4252580          BIC      r5,r5,#0x40000        ;170
00003a  6005              STR      r5,[r0,#0]            ;170
00003c  3c80              SUBS     r4,r4,#0x80
00003e  6011              STR      r1,[r2,#0]            ;173
000040  6023              STR      r3,[r4,#0]
;;;180    #endif
;;;181    }
000042  bd30              POP      {r4,r5,pc}
;;;182    
                          ENDP

                  |L2.68|
                          DCD      0xe000ed88
                  |L2.72|
                          DCD      0x40023800
                  |L2.76|
                          DCD      0xfef6ffff
                  |L2.80|
                          DCD      0x24003010

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09

                          AREA ||area_number.6||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.6||, ||.constdata||
                  APBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  01020304          DCB      0x01,0x02,0x03,0x04

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00f42400

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F7_V1.11.0\\Drivers\\CMSIS\\Device\\ST\\STM32F7xx\\Source\\Templates\\system_stm32f7xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f7xx_c_5d646a67____REV16|
#line 468 "D:\\Program_Files_x86\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.3.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_system_stm32f7xx_c_5d646a67____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f7xx_c_5d646a67____REVSH|
#line 483
|__asm___18_system_stm32f7xx_c_5d646a67____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f7xx_c_5d646a67____RRX|
#line 670
|__asm___18_system_stm32f7xx_c_5d646a67____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
