; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\sdram.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\sdram.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O3 --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Core -I..\..\..\M0P0_Library\STM32Cube_FW_F7_V1.11.0\Drivers\STM32F7xx_HAL_Driver\Inc -I.\Source -I.\Drivers -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F767IGT6-ALIENTEK\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\sdram.crf Drivers\sdram.c]
                          THUMB

                          AREA ||i.FMC_SDRAM_ReadBuffer||, CODE, READONLY, ALIGN=1

                  FMC_SDRAM_ReadBuffer PROC
;;;108    
;;;109    void FMC_SDRAM_ReadBuffer(u8 *pBuffer,u32 ReadAddr,u32 n)
000000  2a00              CMP      r2,#0
;;;110    {
000002  d007              BEQ      |L1.20|
                  |L1.4|
;;;111        for(;n!=0;n--)
;;;112        {
;;;113            *pBuffer++=*(vu8*)(Bank5_SDRAM_ADDR+ReadAddr);
000004  f1a14380          SUB      r3,r1,#0x40000000
000008  781b              LDRB     r3,[r3,#0]
00000a  1c49              ADDS     r1,r1,#1
00000c  1e52              SUBS     r2,r2,#1
00000e  f8003b01          STRB     r3,[r0],#1
000012  d1f7              BNE      |L1.4|
                  |L1.20|
;;;114            ReadAddr++;
;;;115        }
;;;116    }
000014  4770              BX       lr
                          ENDP


                          AREA ||i.FMC_SDRAM_WriteBuffer||, CODE, READONLY, ALIGN=2

                  FMC_SDRAM_WriteBuffer PROC
;;;98     
;;;99     void FMC_SDRAM_WriteBuffer(u8 *pBuffer,u32 WriteAddr,u32 n)
000000  2a00              CMP      r2,#0
;;;100    {
000002  b510              PUSH     {r4,lr}
000004  d008              BEQ      |L2.24|
;;;101        for(;n!=0;n--)
;;;102        {
;;;103            *(vu8*)(Bank5_SDRAM_ADDR+WriteAddr)=*pBuffer;
000006  bf00              NOP      
                  |L2.8|
000008  f1a14480          SUB      r4,r1,#0x40000000
00000c  f8103b01          LDRB     r3,[r0],#1
000010  7023              STRB     r3,[r4,#0]
000012  1c49              ADDS     r1,r1,#1
000014  1e52              SUBS     r2,r2,#1
000016  d1f7              BNE      |L2.8|
                  |L2.24|
;;;104            WriteAddr++;
;;;105            pBuffer++;
;;;106        }
;;;107    }
000018  bd10              POP      {r4,pc}
;;;108    
                          ENDP


                          AREA ||i.HAL_SDRAM_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_SDRAM_MspInit PROC
;;;49     
;;;50     void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef *hsdram)
000000  482e              LDR      r0,|L3.188|
;;;51     {
000002  b510              PUSH     {r4,lr}
000004  b086              SUB      sp,sp,#0x18
;;;52         GPIO_InitTypeDef GPIO_Initure;
;;;53         
;;;54         __HAL_RCC_FMC_CLK_ENABLE();
000006  6801              LDR      r1,[r0,#0]
000008  f0410101          ORR      r1,r1,#1
00000c  6001              STR      r1,[r0,#0]
00000e  6800              LDR      r0,[r0,#0]
000010  f0000001          AND      r0,r0,#1
;;;55         __HAL_RCC_GPIOC_CLK_ENABLE();
000014  9005              STR      r0,[sp,#0x14]
000016  4829              LDR      r0,|L3.188|
000018  3808              SUBS     r0,r0,#8
00001a  6801              LDR      r1,[r0,#0]
00001c  f0410104          ORR      r1,r1,#4
000020  6001              STR      r1,[r0,#0]
000022  6801              LDR      r1,[r0,#0]
000024  f0010104          AND      r1,r1,#4
;;;56         __HAL_RCC_GPIOD_CLK_ENABLE();
000028  9105              STR      r1,[sp,#0x14]
00002a  6801              LDR      r1,[r0,#0]
00002c  f0410108          ORR      r1,r1,#8
000030  6001              STR      r1,[r0,#0]
000032  6801              LDR      r1,[r0,#0]
000034  f0010108          AND      r1,r1,#8
;;;57         __HAL_RCC_GPIOE_CLK_ENABLE();
000038  9105              STR      r1,[sp,#0x14]
00003a  6801              LDR      r1,[r0,#0]
00003c  f0410110          ORR      r1,r1,#0x10
000040  6001              STR      r1,[r0,#0]
000042  6801              LDR      r1,[r0,#0]
000044  f0010110          AND      r1,r1,#0x10
;;;58         __HAL_RCC_GPIOF_CLK_ENABLE();
000048  9105              STR      r1,[sp,#0x14]
00004a  6801              LDR      r1,[r0,#0]
00004c  f0410120          ORR      r1,r1,#0x20
000050  6001              STR      r1,[r0,#0]
000052  6801              LDR      r1,[r0,#0]
000054  f0010120          AND      r1,r1,#0x20
;;;59         __HAL_RCC_GPIOG_CLK_ENABLE();
000058  9105              STR      r1,[sp,#0x14]
00005a  6801              LDR      r1,[r0,#0]
00005c  f0410140          ORR      r1,r1,#0x40
000060  6001              STR      r1,[r0,#0]
000062  6800              LDR      r0,[r0,#0]
;;;60         
;;;61         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;  
;;;62         GPIO_Initure.Mode=GPIO_MODE_AF_PP;
000064  2102              MOVS     r1,#2
;;;63         GPIO_Initure.Pull=GPIO_PULLUP;
000066  2201              MOVS     r2,#1
000068  f0000040          AND      r0,r0,#0x40           ;59
00006c  9005              STR      r0,[sp,#0x14]         ;61
00006e  200d              MOVS     r0,#0xd               ;61
;;;64         GPIO_Initure.Speed=GPIO_SPEED_HIGH;
000070  2303              MOVS     r3,#3
;;;65         GPIO_Initure.Alternate=GPIO_AF12_FMC;
000072  240c              MOVS     r4,#0xc
000074  e88d001f          STM      sp,{r0-r4}
;;;66         HAL_GPIO_Init(GPIOC,&GPIO_Initure);
000078  4811              LDR      r0,|L3.192|
00007a  4669              MOV      r1,sp
00007c  f7fffffe          BL       HAL_GPIO_Init
;;;67         
;;;68         
;;;69         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14|GPIO_PIN_15;              
000080  f24c7003          MOV      r0,#0xc703
;;;70         HAL_GPIO_Init(GPIOD,&GPIO_Initure);
000084  9000              STR      r0,[sp,#0]
000086  480f              LDR      r0,|L3.196|
000088  4669              MOV      r1,sp
00008a  f7fffffe          BL       HAL_GPIO_Init
;;;71         
;;;72         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;              
00008e  f64f7083          MOV      r0,#0xff83
;;;73         HAL_GPIO_Init(GPIOE,&GPIO_Initure);
000092  9000              STR      r0,[sp,#0]
000094  480c              LDR      r0,|L3.200|
000096  4669              MOV      r1,sp
000098  f7fffffe          BL       HAL_GPIO_Init
;;;74         
;;;75         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;              
00009c  f64f003f          MOV      r0,#0xf83f
;;;76         HAL_GPIO_Init(GPIOF,&GPIO_Initure);
0000a0  9000              STR      r0,[sp,#0]
0000a2  480a              LDR      r0,|L3.204|
0000a4  4669              MOV      r1,sp
0000a6  f7fffffe          BL       HAL_GPIO_Init
;;;77         
;;;78         GPIO_Initure.Pin=GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_15;              
0000aa  f2481037          MOV      r0,#0x8137
;;;79         HAL_GPIO_Init(GPIOG,&GPIO_Initure);
0000ae  9000              STR      r0,[sp,#0]
0000b0  4807              LDR      r0,|L3.208|
0000b2  4669              MOV      r1,sp
0000b4  f7fffffe          BL       HAL_GPIO_Init
;;;80     }
0000b8  b006              ADD      sp,sp,#0x18
0000ba  bd10              POP      {r4,pc}
;;;81     
                          ENDP

                  |L3.188|
                          DCD      0x40023838
                  |L3.192|
                          DCD      0x40020800
                  |L3.196|
                          DCD      0x40020c00
                  |L3.200|
                          DCD      0x40021000
                  |L3.204|
                          DCD      0x40021400
                  |L3.208|
                          DCD      0x40021800

                          AREA ||i.SDRAM_Init||, CODE, READONLY, ALIGN=2

                  SDRAM_Init PROC
;;;4      SDRAM_HandleTypeDef SDRAM_Handler;
;;;5      void SDRAM_Init(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;6      {
;;;7          FMC_SDRAM_TimingTypeDef SDRAM_Timing;
;;;8                                                           
;;;9          SDRAM_Handler.Instance=FMC_SDRAM_DEVICE;
000002  4815              LDR      r0,|L4.88|
;;;10         SDRAM_Handler.Init.SDBank=FMC_SDRAM_BANK1;
000004  2700              MOVS     r7,#0
;;;11         SDRAM_Handler.Init.ColumnBitsNumber=FMC_SDRAM_COLUMN_BITS_NUM_9;
;;;12         SDRAM_Handler.Init.RowBitsNumber=FMC_SDRAM_ROW_BITS_NUM_13;
000006  2208              MOVS     r2,#8
000008  4e12              LDR      r6,|L4.84|
00000a  b087              SUB      sp,sp,#0x1c           ;6
;;;13         SDRAM_Handler.Init.MemoryDataWidth=FMC_SDRAM_MEM_BUS_WIDTH_16;
;;;14         SDRAM_Handler.Init.InternalBankNumber=FMC_SDRAM_INTERN_BANKS_NUM_4;
00000c  f04f0e40          MOV      lr,#0x40
;;;15         SDRAM_Handler.Init.CASLatency=FMC_SDRAM_CAS_LATENCY_3;
;;;16         SDRAM_Handler.Init.WriteProtection=FMC_SDRAM_WRITE_PROTECTION_DISABLE;
;;;17         SDRAM_Handler.Init.SDClockPeriod=FMC_SDRAM_CLOCK_PERIOD_2;
;;;18         SDRAM_Handler.Init.ReadBurst=FMC_SDRAM_RBURST_ENABLE;
;;;19         SDRAM_Handler.Init.ReadPipeDelay=FMC_SDRAM_RPIPE_DELAY_1;
;;;20         
;;;21         SDRAM_Timing.LoadToActiveDelay=2;
000010  2102              MOVS     r1,#2
000012  2501              MOVS     r5,#1                 ;11
000014  e9c06700          STRD     r6,r7,[r0,#0]         ;15
000018  2410              MOVS     r4,#0x10              ;13
00001a  e9c05202          STRD     r5,r2,[r0,#8]         ;17
00001e  6104              STR      r4,[r0,#0x10]         ;19  ; SDRAM_Handler
000020  030c              LSLS     r4,r1,#12             ;19
000022  028e              LSLS     r6,r1,#10             ;17
000024  02cd              LSLS     r5,r1,#11             ;18
000026  f44f7cc0          MOV      r12,#0x180            ;15
00002a  e9c05409          STRD     r5,r4,[r0,#0x24]      ;19
00002e  e9c07607          STRD     r7,r6,[r0,#0x1c]      ;19
;;;22         SDRAM_Timing.ExitSelfRefreshDelay=8;
;;;23         SDRAM_Timing.SelfRefreshTime=6;
000032  2306              MOVS     r3,#6
000034  e9c0ec05          STRD     lr,r12,[r0,#0x14]     ;19
000038  e88d000e          STM      sp,{r1-r3}            ;19
00003c  e9cd3103          STRD     r3,r1,[sp,#0xc]       ;19
;;;24         SDRAM_Timing.RowCycleDelay=6;
;;;25         SDRAM_Timing.WriteRecoveryTime=2;
;;;26         SDRAM_Timing.RPDelay=2;
;;;27         SDRAM_Timing.RCDDelay=2;
000040  9105              STR      r1,[sp,#0x14]
;;;28         HAL_SDRAM_Init(&SDRAM_Handler,&SDRAM_Timing);
000042  9106              STR      r1,[sp,#0x18]
000044  4669              MOV      r1,sp
000046  f7fffffe          BL       HAL_SDRAM_Init
;;;29         SDRAM_Initialization_Sequence(&SDRAM_Handler);
00004a  4803              LDR      r0,|L4.88|
00004c  f7fffffe          BL       SDRAM_Initialization_Sequence
;;;30     }
000050  b007              ADD      sp,sp,#0x1c
000052  bdf0              POP      {r4-r7,pc}
;;;31     
                          ENDP

                  |L4.84|
                          DCD      0xa0000140
                  |L4.88|
                          DCD      ||.bss||

                          AREA ||i.SDRAM_Initialization_Sequence||, CODE, READONLY, ALIGN=2

                  SDRAM_Initialization_Sequence PROC
;;;31     
;;;32     void SDRAM_Initialization_Sequence(SDRAM_HandleTypeDef *hsdram)
000000  2300              MOVS     r3,#0
;;;33     {
;;;34         u32 temp=0;
;;;35         SDRAM_Send_Cmd(0,FMC_SDRAM_CMD_CLK_ENABLE,1,0);
000002  2201              MOVS     r2,#1
000004  4618              MOV      r0,r3
000006  4611              MOV      r1,r2
000008  b510              PUSH     {r4,lr}               ;33
00000a  f7fffffe          BL       SDRAM_Send_Cmd
;;;36         RMP_Thd_Delay(500);
00000e  f44f70fa          MOV      r0,#0x1f4
000012  f7fffffe          BL       RMP_Thd_Delay
;;;37         SDRAM_Send_Cmd(0,FMC_SDRAM_CMD_PALL,1,0);
000016  2300              MOVS     r3,#0
000018  2201              MOVS     r2,#1
00001a  4618              MOV      r0,r3
00001c  2102              MOVS     r1,#2
00001e  f7fffffe          BL       SDRAM_Send_Cmd
;;;38         SDRAM_Send_Cmd(0,FMC_SDRAM_CMD_AUTOREFRESH_MODE,8,0);
000022  2300              MOVS     r3,#0
000024  2208              MOVS     r2,#8
000026  4618              MOV      r0,r3
000028  2103              MOVS     r1,#3
00002a  f7fffffe          BL       SDRAM_Send_Cmd
;;;39     
;;;40         temp=(u32)SDRAM_MODEREG_BURST_LENGTH_1          |
;;;41                   SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |
;;;42                   SDRAM_MODEREG_CAS_LATENCY_3           |
;;;43                   SDRAM_MODEREG_OPERATING_MODE_STANDARD |
;;;44                   SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;
;;;45         SDRAM_Send_Cmd(0,FMC_SDRAM_CMD_LOAD_MODE,1,temp);
00002e  2201              MOVS     r2,#1
000030  2104              MOVS     r1,#4
000032  2000              MOVS     r0,#0
000034  f44f730c          MOV      r3,#0x230             ;40
000038  f7fffffe          BL       SDRAM_Send_Cmd
;;;46         HAL_SDRAM_ProgramRefreshRate(&SDRAM_Handler,823);    
00003c  e8bd4010          POP      {r4,lr}
000040  4802              LDR      r0,|L5.76|
000042  f2403137          MOV      r1,#0x337
000046  f7ffbffe          B.W      HAL_SDRAM_ProgramRefreshRate
;;;47     
;;;48     }
;;;49     
                          ENDP

00004a  0000              DCW      0x0000
                  |L5.76|
                          DCD      ||.bss||

                          AREA ||i.SDRAM_Send_Cmd||, CODE, READONLY, ALIGN=2

                  SDRAM_Send_Cmd PROC
;;;81     
;;;82     u8 SDRAM_Send_Cmd(u8 bankx,u8 cmd,u8 refresh,u16 regval)
000000  b51f              PUSH     {r0-r4,lr}
;;;83     {
;;;84         u32 target_bank=0;
000002  f04f0400          MOV      r4,#0
000006  b110              CBZ      r0,|L6.14|
;;;85         FMC_SDRAM_CommandTypeDef Command;
;;;86         
;;;87         if(bankx==0) target_bank=FMC_SDRAM_CMD_TARGET_BANK1;       
;;;88         else if(bankx==1) target_bank=FMC_SDRAM_CMD_TARGET_BANK2;   
000008  2801              CMP      r0,#1
00000a  d002              BEQ      |L6.18|
00000c  e002              B        |L6.20|
                  |L6.14|
00000e  2410              MOVS     r4,#0x10              ;87
000010  e000              B        |L6.20|
                  |L6.18|
000012  2408              MOVS     r4,#8
                  |L6.20|
;;;89         Command.CommandMode=cmd;
;;;90         Command.CommandTarget=target_bank;
;;;91         Command.AutoRefreshNumber=refresh;
;;;92         Command.ModeRegisterDefinition=regval;
;;;93         if(HAL_SDRAM_SendCommand(&SDRAM_Handler,&Command,0X1000)==HAL_OK)
000014  4807              LDR      r0,|L6.52|
000016  e9cd2302          STRD     r2,r3,[sp,#8]         ;88
00001a  f44f5280          MOV      r2,#0x1000
00001e  e9cd1400          STRD     r1,r4,[sp,#0]
000022  4669              MOV      r1,sp
000024  f7fffffe          BL       HAL_SDRAM_SendCommand
000028  2800              CMP      r0,#0
00002a  d000              BEQ      |L6.46|
;;;94             return 0;
;;;95         else 
;;;96             return 1;    
00002c  2001              MOVS     r0,#1
                  |L6.46|
;;;97     }
00002e  b004              ADD      sp,sp,#0x10
000030  bd10              POP      {r4,pc}
;;;98     
                          ENDP

000032  0000              DCW      0x0000
                  |L6.52|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  SDRAM_Handler
                          %        56

;*** Start embedded assembler ***

#line 1 "Drivers\\sdram.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_sdram_c_892f58be____REV16|
#line 468 "D:\\Program_Files_x86\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.3.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___7_sdram_c_892f58be____REV16| PROC
#line 469

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_sdram_c_892f58be____REVSH|
#line 483
|__asm___7_sdram_c_892f58be____REVSH| PROC
#line 484

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_sdram_c_892f58be____RRX|
#line 670
|__asm___7_sdram_c_892f58be____RRX| PROC
#line 671

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
