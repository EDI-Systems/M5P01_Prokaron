; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\output\system_stm32f0xx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\system_stm32f0xx.d --cpu=Cortex-M0 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F0_V1.9.0\Drivers\STM32F0xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32Cube_FW_F0_V1.9.0\Drivers\CMSIS\Device\ST\STM32L0xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F0_V1.9.0\Drivers\CMSIS\Include -I..\..\..\M0P0_Library\STM32Cube_FW_F0_V1.9.0\Drivers\STM32F0xx_HAL_Driver\Inc\Conf -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F030F4P6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32F0xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F030x6 -DSTM32F030x6 -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\system_stm32f0xx.crf ..\..\..\M0P0_Library\STM32Cube_FW_F0_V1.9.0\Drivers\CMSIS\Device\ST\STM32F0xx\Source\Templates\system_stm32f0xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;259      */
;;;260    void SystemCoreClockUpdate (void)
000000  b570              PUSH     {r4-r6,lr}
;;;261    {
;;;262      uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
;;;263    
;;;264      /* Get SYSCLK source -------------------------------------------------------*/
;;;265      tmp = RCC->CFGR & RCC_CFGR_SWS;
000002  4e16              LDR      r6,|L1.92|
000004  6871              LDR      r1,[r6,#4]
000006  200c              MOVS     r0,#0xc
000008  4001              ANDS     r1,r1,r0
;;;266    
;;;267      switch (tmp)
;;;268      {
;;;269        case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
;;;270          SystemCoreClock = HSI_VALUE;
00000a  4815              LDR      r0,|L1.96|
00000c  4c15              LDR      r4,|L1.100|
00000e  d003              BEQ      |L1.24|
000010  2904              CMP      r1,#4                 ;267
000012  d001              BEQ      |L1.24|
000014  2908              CMP      r1,#8                 ;267
000016  d001              BEQ      |L1.28|
                  |L1.24|
;;;271          break;
000018  6020              STR      r0,[r4,#0]  ; SystemCoreClock
00001a  e015              B        |L1.72|
                  |L1.28|
;;;272        case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
;;;273          SystemCoreClock = HSE_VALUE;
;;;274          break;
;;;275        case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
;;;276          /* Get PLL clock source and multiplication factor ----------------------*/
;;;277          pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
00001c  6871              LDR      r1,[r6,#4]
;;;278          pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
00001e  6872              LDR      r2,[r6,#4]
000020  2301              MOVS     r3,#1
000022  041b              LSLS     r3,r3,#16
000024  401a              ANDS     r2,r2,r3
;;;279          pllmull = ( pllmull >> 18) + 2;
;;;280          predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
;;;281    
;;;282          if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
;;;283          {
;;;284            /* HSE used as PLL clock source : SystemCoreClock = HSE/PREDIV * PLLMUL */
;;;285            SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
;;;286          }
;;;287    #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F091xC) || defined(STM32F098xx)
;;;288          else if (pllsource == RCC_CFGR_PLLSRC_HSI48_PREDIV)
;;;289          {
;;;290            /* HSI48 used as PLL clock source : SystemCoreClock = HSI48/PREDIV * PLLMUL */
;;;291            SystemCoreClock = (HSI48_VALUE/predivfactor) * pllmull;
;;;292          }
;;;293    #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F091xC || STM32F098xx */
;;;294          else
;;;295          {
;;;296    #if defined(STM32F042x6) || defined(STM32F048xx)  || defined(STM32F070x6) \
;;;297     || defined(STM32F078xx) || defined(STM32F071xB)  || defined(STM32F072xB) \
;;;298     || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx)  || defined(STM32F030xC)
;;;299            /* HSI used as PLL clock source : SystemCoreClock = HSI/PREDIV * PLLMUL */
;;;300            SystemCoreClock = (HSI_VALUE/predivfactor) * pllmull;
;;;301    #else
;;;302            /* HSI used as PLL clock source : SystemCoreClock = HSI/2 * PLLMUL */
;;;303            SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
;;;304    #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
;;;305              STM32F071xB || STM32F072xB || STM32F078xx || STM32F070xB ||
;;;306              STM32F091xC || STM32F098xx || STM32F030xC */
;;;307          }
;;;308          break;
;;;309        default: /* HSI used as system clock */
;;;310          SystemCoreClock = HSI_VALUE;
;;;311          break;
;;;312      }
;;;313      /* Compute HCLK clock frequency ----------------*/
;;;314      /* Get HCLK prescaler */
;;;315      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
;;;316      /* HCLK clock frequency */
;;;317      SystemCoreClock >>= tmp;
;;;318    }
000026  0289              LSLS     r1,r1,#10
000028  0f0d              LSRS     r5,r1,#28
00002a  6af1              LDR      r1,[r6,#0x2c]         ;280
00002c  1cad              ADDS     r5,r5,#2              ;280
00002e  0709              LSLS     r1,r1,#28             ;280
000030  0f09              LSRS     r1,r1,#28             ;280
000032  1c49              ADDS     r1,r1,#1              ;280
000034  429a              CMP      r2,r3                 ;282
000036  d104              BNE      |L1.66|
000038  f7fffffe          BL       __aeabi_uidivmod
00003c  4368              MULS     r0,r5,r0              ;285
00003e  6020              STR      r0,[r4,#0]            ;285  ; SystemCoreClock
000040  e002              B        |L1.72|
                  |L1.66|
000042  4809              LDR      r0,|L1.104|
000044  4345              MULS     r5,r0,r5              ;303
000046  6025              STR      r5,[r4,#0]            ;303  ; SystemCoreClock
                  |L1.72|
000048  6870              LDR      r0,[r6,#4]            ;315
00004a  4908              LDR      r1,|L1.108|
00004c  0600              LSLS     r0,r0,#24             ;315
00004e  0f00              LSRS     r0,r0,#28             ;315
000050  5c08              LDRB     r0,[r1,r0]            ;315
000052  6821              LDR      r1,[r4,#0]            ;317  ; SystemCoreClock
000054  40c1              LSRS     r1,r1,r0              ;317
000056  6021              STR      r1,[r4,#0]            ;317  ; SystemCoreClock
000058  bd70              POP      {r4-r6,pc}
;;;319    
                          ENDP

00005a  0000              DCW      0x0000
                  |L1.92|
                          DCD      0x40021000
                  |L1.96|
                          DCD      0x007a1200
                  |L1.100|
                          DCD      ||.data||
                  |L1.104|
                          DCD      0x003d0900
                  |L1.108|
                          DCD      ||.constdata||

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;162      */
;;;163    void SystemInit(void)
000000  4813              LDR      r0,|L2.80|
;;;164    {
;;;165      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;166      /* Set HSION bit */
;;;167      RCC->CR |= (uint32_t)0x00000001U;
000002  6801              LDR      r1,[r0,#0]
000004  2201              MOVS     r2,#1
000006  4311              ORRS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;168    
;;;169    #if defined (STM32F051x8) || defined (STM32F058x8)
;;;170      /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
;;;171      RCC->CFGR &= (uint32_t)0xF8FFB80CU;
;;;172    #else
;;;173      /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE, MCOSEL[2:0], MCOPRE[2:0] and PLLNODIV bits */
;;;174      RCC->CFGR &= (uint32_t)0x08FFB80CU;
00000a  6841              LDR      r1,[r0,#4]
00000c  4a11              LDR      r2,|L2.84|
00000e  4011              ANDS     r1,r1,r2
000010  6041              STR      r1,[r0,#4]
;;;175    #endif /* STM32F051x8 or STM32F058x8 */
;;;176      
;;;177      /* Reset HSEON, CSSON and PLLON bits */
;;;178      RCC->CR &= (uint32_t)0xFEF6FFFFU;
000012  6801              LDR      r1,[r0,#0]
000014  4a10              LDR      r2,|L2.88|
000016  4011              ANDS     r1,r1,r2
000018  6001              STR      r1,[r0,#0]
;;;179    
;;;180      /* Reset HSEBYP bit */
;;;181      RCC->CR &= (uint32_t)0xFFFBFFFFU;
00001a  6801              LDR      r1,[r0,#0]
00001c  2201              MOVS     r2,#1
00001e  0492              LSLS     r2,r2,#18
000020  4391              BICS     r1,r1,r2
000022  6001              STR      r1,[r0,#0]
;;;182    
;;;183      /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
;;;184      RCC->CFGR &= (uint32_t)0xFFC0FFFFU;
000024  6841              LDR      r1,[r0,#4]
000026  223f              MOVS     r2,#0x3f
000028  0412              LSLS     r2,r2,#16
00002a  4391              BICS     r1,r1,r2
00002c  6041              STR      r1,[r0,#4]
;;;185    
;;;186      /* Reset PREDIV[3:0] bits */
;;;187      RCC->CFGR2 &= (uint32_t)0xFFFFFFF0U;
00002e  6ac1              LDR      r1,[r0,#0x2c]
000030  0909              LSRS     r1,r1,#4
000032  0109              LSLS     r1,r1,#4
000034  62c1              STR      r1,[r0,#0x2c]
;;;188    
;;;189    #if defined (STM32F072xB) || defined (STM32F078xx)
;;;190      /* Reset USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW, USBSW and ADCSW bits */
;;;191      RCC->CFGR3 &= (uint32_t)0xFFFCFE2CU;
;;;192    #elif defined (STM32F071xB)
;;;193      /* Reset USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
;;;194      RCC->CFGR3 &= (uint32_t)0xFFFFCEACU;
;;;195    #elif defined (STM32F091xC) || defined (STM32F098xx)
;;;196      /* Reset USART3SW[1:0], USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
;;;197      RCC->CFGR3 &= (uint32_t)0xFFF0FEACU;
;;;198    #elif defined (STM32F030x6) || defined (STM32F030x8) || defined (STM32F031x6) || defined (STM32F038xx) || defined (STM32F030xC)
;;;199      /* Reset USART1SW[1:0], I2C1SW and ADCSW bits */
;;;200      RCC->CFGR3 &= (uint32_t)0xFFFFFEECU;
000036  6b01              LDR      r1,[r0,#0x30]
000038  22ff              MOVS     r2,#0xff
00003a  3214              ADDS     r2,r2,#0x14
00003c  4391              BICS     r1,r1,r2
00003e  6301              STR      r1,[r0,#0x30]
;;;201    #elif defined (STM32F051x8) || defined (STM32F058xx)
;;;202      /* Reset USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
;;;203      RCC->CFGR3 &= (uint32_t)0xFFFFFEACU;
;;;204    #elif defined (STM32F042x6) || defined (STM32F048xx)
;;;205      /* Reset USART1SW[1:0], I2C1SW, CECSW, USBSW and ADCSW bits */
;;;206      RCC->CFGR3 &= (uint32_t)0xFFFFFE2CU;
;;;207    #elif defined (STM32F070x6) || defined (STM32F070xB)
;;;208      /* Reset USART1SW[1:0], I2C1SW, USBSW and ADCSW bits */
;;;209      RCC->CFGR3 &= (uint32_t)0xFFFFFE6CU;
;;;210      /* Set default USB clock to PLLCLK, since there is no HSI48 */
;;;211      RCC->CFGR3 |= (uint32_t)0x00000080U;  
;;;212    #else
;;;213     #warning "No target selected"
;;;214    #endif
;;;215    
;;;216      /* Reset HSI14 bit */
;;;217      RCC->CR2 &= (uint32_t)0xFFFFFFFEU;
000040  6b41              LDR      r1,[r0,#0x34]
000042  0849              LSRS     r1,r1,#1
000044  0049              LSLS     r1,r1,#1
000046  6341              STR      r1,[r0,#0x34]
;;;218    
;;;219      /* Disable all interrupts */
;;;220      RCC->CIR = 0x00000000U;
000048  2100              MOVS     r1,#0
00004a  6081              STR      r1,[r0,#8]
;;;221    
;;;222    }
00004c  4770              BX       lr
;;;223    
                          ENDP

00004e  0000              DCW      0x0000
                  |L2.80|
                          DCD      0x40021000
                  |L2.84|
                          DCD      0x08ffb80c
                  |L2.88|
                          DCD      0xfef6ffff

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09

                          AREA ||area_number.6||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.6||, ||.constdata||
                  APBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  01020304          DCB      0x01,0x02,0x03,0x04

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x007a1200

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F0_V1.9.0\\Drivers\\CMSIS\\Device\\ST\\STM32F0xx\\Source\\Templates\\system_stm32f0xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f0xx_c_5d646a67____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_F0_V1.9.0\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_system_stm32f0xx_c_5d646a67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f0xx_c_5d646a67____REVSH|
#line 402
|__asm___18_system_stm32f0xx_c_5d646a67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
