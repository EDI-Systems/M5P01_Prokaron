################################################################################
# Rewrited Makefile
# Author: WYH
# The orginal broken version is generated by eclipse
################################################################################


### 1. Set up global varibles. global varibles may subject to change.

RM := rm -rf
OPTMIZE_LEVEL = -O3
# CPU_FREQ := $(shell lscpu | grep "CPU max MHz" | awk '{print $$4 * 1e6}' | bc)
OVERFLOW_NUM := $(shell echo $$(( $(CPU_FREQ) / 3000 )) )
OVERFLOW_NUM_DEF := -DOVERFLOW_NUM=$(OVERFLOW_NUM)

OBJS = rmp_kernel.o rmp_platform_x86_linux.o rmp_test.o 
C_DEPS = rmp_kernel.d rmp_platform_x86_linux.d rmp_test.d

INCLUDE_DIRS = -I"." -I"/usr/include/x86_64-linux-gnu" -I"$(PROJECT_ROOT)/Include"
LIBS := -lpthread

ifeq ($(MAKECMDGOALS),)
  MAKECMDGOALS  = RMP
  .DEFAULT_GOAL = RMP
endif

ifeq ($(PROJECT_ROOT),)
  PROJECT_ROOT  = ../../
endif

ifeq ($(wildcard $(PROJECT_ROOT)),)
  $(error incorrect PROJECT_ROOT, please use export PROJECT_ROOT=<project root> to specify project root)
endif

ifneq ($(MAKECMDGOALS),clean)
  ifneq ($(strip $(C_DEPS)),)
    $(info adding cdeps: $(C_DEPS))
    -include $(C_DEPS)
  endif
endif

### 2. Print build infoss
ifneq ($(MAKECMDGOALS),clean)
  $(info )
  $(info -------------- Printing Build Infos ---------------------)
  $(info MAKECMDGOALS: $(MAKECMDGOALS))
  $(info Using PROJECT_ROOT =  $(PROJECT_ROOT))
  $(info Using OPTMIZE_LEVEL = $(OPTMIZE_LEVEL))
  $(info According to your CPU max Frequency: $(CPU_FREQ))
  $(info The OVERFLOW_NUM MACRO value should be: $(OVERFLOW_NUM))
  $(info -------------- Printing Build Infos Done ----------------)
  $(info )
endif

### 3. targets

rmp_platform_x86_linux.o: $(PROJECT_ROOT)/Source/Platform/X86_LINUX/rmp_platform_x86_linux.c
	@echo 'Building file: $<'
	@echo 'Invoking: GCC C Compiler'
	gcc $(INCLUDE_DIRS) $(OPTMIZE_LEVEL) -g3 -m32 -Wall -c -fmessage-length=0 -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

rmp_kernel.o: $(PROJECT_ROOT)/Source/Kernel/rmp_kernel.c 
	@echo 'Building file: $<'
	@echo 'Invoking: GCC C Compiler'
	gcc $(INCLUDE_DIRS) $(OPTMIZE_LEVEL) -g3 -m32 -Wall -c -fmessage-length=0 -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

rmp_test.o: $(PROJECT_ROOT)/Source/Test/rmp_benchmark.c
	@echo 'Building file: $<'
	@echo 'Invoking: GCC C Compiler'
	gcc $(INCLUDE_DIRS) $(OPTMIZE_LEVEL) $(OVERFLOW_NUM_DEF) -g3 -m32 -Wall -c -fmessage-length=0 -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

RMP: $(OBJS)
	@echo 'Building target: $@'
	@echo 'Invoking: GCC C Linker'
	gcc -static -m32 -o $@ $(OBJS) $(LIBS)
	@echo 'Finished building target: $@ ......'

run: RMP
	@./RMP

clean:
	-$(RM) $(EXECUTABLES)$(OBJS)$(C_DEPS) RMP

.PHONY: clean  

