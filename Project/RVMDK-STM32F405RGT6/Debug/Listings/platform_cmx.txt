; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\output\platform_cmx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\platform_cmx.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\M0P0_Library\STM32F4xx_StdPeriph_Driver\CMSIS\ST\STM32F4xx\Include -I..\..\..\M0P0_Library\STM32F4xx_StdPeriph_Driver\CMSIS\Include -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F405RGT6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F405xx -DSTM32F4XX -DUSE_STDPERIPH_DRIVER -DHSE_VALUE=8000000 -DPLL_M=8 --enum_is_int --signed_chars --omf_browse=.\debug\output\platform_cmx.crf ..\..\MProkaron\Platform\CortexM\platform_cmx.c]
                          THUMB

                          AREA ||i.RMP_Putchar||, CODE, READONLY, ALIGN=2

                  RMP_Putchar PROC
;;;91     ******************************************************************************/
;;;92     void RMP_Putchar(char Char)
000000  4903              LDR      r1,|L1.16|
;;;93     {
;;;94         RMP_CMX_PUTCHAR(Char);
000002  8088              STRH     r0,[r1,#4]
                  |L1.4|
000004  8808              LDRH     r0,[r1,#0]
000006  f0100f40          TST      r0,#0x40
00000a  d0fb              BEQ      |L1.4|
;;;95     }
00000c  4770              BX       lr
;;;96     /* End Function:RMP_Putchar **************************************************/
                          ENDP

00000e  0000              DCW      0x0000
                  |L1.16|
                          DCD      0x40011000

                          AREA ||i._RMP_Low_Level_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Low_Level_Init PROC
;;;65     ******************************************************************************/
;;;66     void _RMP_Low_Level_Init(void)
000000  b530              PUSH     {r4,r5,lr}
;;;67     {   
000002  b089              SUB      sp,sp,#0x24
;;;68         RMP_CMX_LOW_LEVEL_INIT();
000004  2110              MOVS     r1,#0x10
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       RMP_Clear
00000c  2114              MOVS     r1,#0x14
00000e  a804              ADD      r0,sp,#0x10
000010  f7fffffe          BL       RMP_Clear
000014  2002              MOVS     r0,#2
000016  2140              MOVS     r1,#0x40
000018  2400              MOVS     r4,#0
00001a  e9cd1004          STRD     r1,r0,[sp,#0x10]
00001e  e9cd0406          STRD     r0,r4,[sp,#0x18]
000022  2001              MOVS     r0,#1
000024  4601              MOV      r1,r0
000026  9008              STR      r0,[sp,#0x20]
000028  2002              MOVS     r0,#2
00002a  f7fffffe          BL       RCC_AHB1PeriphClockCmd
00002e  4d2a              LDR      r5,|L2.216|
000030  a904              ADD      r1,sp,#0x10
000032  4628              MOV      r0,r5
000034  f7fffffe          BL       GPIO_Init
000038  2207              MOVS     r2,#7
00003a  2106              MOVS     r1,#6
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       GPIO_PinAFConfig
000042  f44f30e1          MOV      r0,#0x1c200
000046  9000              STR      r0,[sp,#0]
000048  f8ad4008          STRH     r4,[sp,#8]
00004c  2008              MOVS     r0,#8
00004e  f8ad4004          STRH     r4,[sp,#4]
000052  f8ad000a          STRH     r0,[sp,#0xa]
000056  f8ad4006          STRH     r4,[sp,#6]
00005a  f8ad400c          STRH     r4,[sp,#0xc]
00005e  2101              MOVS     r1,#1
000060  2010              MOVS     r0,#0x10
000062  f7fffffe          BL       RCC_APB2PeriphClockCmd
000066  4c1d              LDR      r4,|L2.220|
000068  4669              MOV      r1,sp
00006a  4620              MOV      r0,r4
00006c  f7fffffe          BL       USART_Init
000070  2101              MOVS     r1,#1
000072  4620              MOV      r0,r4
000074  f7fffffe          BL       USART_Cmd
000078  200d              MOVS     r0,#0xd
00007a  80a0              STRH     r0,[r4,#4]
                  |L2.124|
00007c  8820              LDRH     r0,[r4,#0]
00007e  f0100f40          TST      r0,#0x40
000082  d0fb              BEQ      |L2.124|
000084  200a              MOVS     r0,#0xa
000086  80a0              STRH     r0,[r4,#4]
                  |L2.136|
000088  8820              LDRH     r0,[r4,#0]
00008a  f0100f40          TST      r0,#0x40
00008e  d0fb              BEQ      |L2.136|
000090  4813              LDR      r0,|L2.224|
000092  6801              LDR      r1,[r0,#0]
000094  f44121e0          ORR      r1,r1,#0x70000
000098  6001              STR      r1,[r0,#0]
00009a  4812              LDR      r0,|L2.228|
00009c  6801              LDR      r1,[r0,#0]
00009e  f64f02ff          MOV      r2,#0xf8ff
0000a2  4011              ANDS     r1,r1,r2
0000a4  f44161a0          ORR      r1,r1,#0x500
0000a8  f04171fd          ORR      r1,r1,#0x1fa0000
0000ac  f0416180          ORR      r1,r1,#0x4000000
0000b0  6001              STR      r1,[r0,#0]
0000b2  490d              LDR      r1,|L2.232|
0000b4  20f0              MOVS     r0,#0xf0
0000b6  7008              STRB     r0,[r1,#0]
0000b8  1cc9              ADDS     r1,r1,#3
0000ba  7008              STRB     r0,[r1,#0]
0000bc  1c49              ADDS     r1,r1,#1
0000be  7008              STRB     r0,[r1,#0]
0000c0  490a              LDR      r1,|L2.236|
0000c2  7008              STRB     r0,[r1,#0]
0000c4  1c49              ADDS     r1,r1,#1
0000c6  7008              STRB     r0,[r1,#0]
0000c8  1d89              ADDS     r1,r1,#6
0000ca  7008              STRB     r0,[r1,#0]
;;;69         
;;;70         RMP_Disable_Int();
0000cc  b009              ADD      sp,sp,#0x24
0000ce  e8bd4030          POP      {r4,r5,lr}
0000d2  f7ffbffe          B.W      RMP_Disable_Int
;;;71     }
;;;72     /* End Function:_RMP_Low_Level_Init ******************************************/
                          ENDP

0000d6  0000              DCW      0x0000
                  |L2.216|
                          DCD      0x40020400
                  |L2.220|
                          DCD      0x40011000
                  |L2.224|
                          DCD      0xe000ed24
                  |L2.228|
                          DCD      0xe000ed0c
                  |L2.232|
                          DCD      0xe000ed1f
                  |L2.236|
                          DCD      0xe000ed19

                          AREA ||i._RMP_Plat_Hook||, CODE, READONLY, ALIGN=1

                  _RMP_Plat_Hook PROC
;;;79     ******************************************************************************/
;;;80     void _RMP_Plat_Hook(void)
000000  f7ffbffe          B.W      RMP_Enable_Int
;;;81     {
;;;82         RMP_Enable_Int();
;;;83     }
;;;84     /* End Function:_RMP_Plat_Hook ***********************************************/
                          ENDP


                          AREA ||i._RMP_Stack_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Stack_Init PROC
;;;45     ******************************************************************************/
;;;46     void _RMP_Stack_Init(ptr_t Entry, ptr_t Stack, ptr_t Arg)
000000  63c8              STR      r0,[r1,#0x3c]
;;;47     {
;;;48         /* The "9" here is because we also pushed other registers to PSP */
;;;49         /* This is the LR value indicating that we never used the FPU */
;;;50         ((ptr_t*)Stack)[0+8]=0xFFFFFFFD;    
;;;51         /* CM3:Pass the parameter */                            
;;;52         ((ptr_t*)Stack)[0+9]=Arg;       
;;;53         /* CM3:for xPSR. fill the T bit,or an INVSTATE will happen */
;;;54         ((ptr_t*)Stack)[6+9]=Entry;
;;;55         /* CM3:Set the process entrance */                            
;;;56         ((ptr_t*)Stack)[7+9]=0x01000200;      
000002  4803              LDR      r0,|L4.16|
000004  f06f0302          MVN      r3,#2                 ;50
000008  6408              STR      r0,[r1,#0x40]
00000a  e9c13208          STRD     r3,r2,[r1,#0x20]
;;;57     }
00000e  4770              BX       lr
;;;58     /* End Function:_RMP_Stack_Init **********************************************/
                          ENDP

                  |L4.16|
                          DCD      0x01000200

;*** Start embedded assembler ***

#line 1 "..\\..\\MProkaron\\Platform\\CortexM\\platform_cmx.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____REV16|
#line 114 "..\\..\\..\\M0P0_Library\\STM32F4xx_StdPeriph_Driver\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_platform_cmx_c_203ac359____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____REVSH|
#line 128
|__asm___14_platform_cmx_c_203ac359____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
