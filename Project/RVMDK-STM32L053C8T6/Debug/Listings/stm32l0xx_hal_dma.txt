; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\output\stm32l0xx_hal_dma.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\stm32l0xx_hal_dma.d --cpu=Cortex-M0+ --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\STM32L0xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\CMSIS\Device\ST\STM32L0xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\CMSIS\Include -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\STM32L0xx_HAL_Driver\Inc\Conf -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32L053C8T6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32L0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32L0xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32L053xx -DSTM32L0xx -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\stm32l0xx_hal_dma.crf ..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\STM32L0xx_HAL_Driver\Src\stm32l0xx_hal_dma.c]
                          THUMB

                          AREA ||i.HAL_DMA_Abort||, CODE, READONLY, ALIGN=1

                  HAL_DMA_Abort PROC
;;;443      */
;;;444    HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
000000  b5f8              PUSH     {r3-r7,lr}
;;;445    {
000002  4604              MOV      r4,r0
;;;446      uint32_t tickstart = 0U;
;;;447      
;;;448      /* Disable the channel */
;;;449      __HAL_DMA_DISABLE(hdma);
000004  6800              LDR      r0,[r0,#0]
000006  6801              LDR      r1,[r0,#0]
000008  0849              LSRS     r1,r1,#1
00000a  0049              LSLS     r1,r1,#1
00000c  6001              STR      r1,[r0,#0]
;;;450      
;;;451      /* Get timeout */
;;;452      tickstart = HAL_GetTick();
00000e  f7fffffe          BL       HAL_GetTick
000012  4605              MOV      r5,r0
;;;453      
;;;454      /* Check if the DMA Channel is effectively disabled */
;;;455      while((hdma->Instance->CCR & DMA_CCR_EN) != 0U) 
000014  6820              LDR      r0,[r4,#0]
000016  6800              LDR      r0,[r0,#0]
000018  2600              MOVS     r6,#0
00001a  07c0              LSLS     r0,r0,#31
00001c  2800              CMP      r0,#0
00001e  d012              BEQ      |L1.70|
;;;456      {
;;;457        /* Check for the Timeout */
;;;458        if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
000020  277d              MOVS     r7,#0x7d
000022  00ff              LSLS     r7,r7,#3
                  |L1.36|
000024  f7fffffe          BL       HAL_GetTick
000028  1b40              SUBS     r0,r0,r5
00002a  42b8              CMP      r0,r7
00002c  d907              BLS      |L1.62|
;;;459        {
;;;460          /* Update error code */
;;;461          hdma->ErrorCode |= HAL_DMA_ERROR_TIMEOUT;
00002e  6c20              LDR      r0,[r4,#0x40]
000030  2120              MOVS     r1,#0x20
000032  4308              ORRS     r0,r0,r1
000034  6420              STR      r0,[r4,#0x40]
;;;462          
;;;463          /* Process Unlocked */
;;;464          __HAL_UNLOCK(hdma);
;;;465          
;;;466          /* Change the DMA state */
;;;467          hdma->State = HAL_DMA_STATE_TIMEOUT;
000036  2003              MOVS     r0,#3
000038  6266              STR      r6,[r4,#0x24]
00003a  62a0              STR      r0,[r4,#0x28]
;;;468          
;;;469          return HAL_TIMEOUT;
;;;470        }
;;;471      }
;;;472      /* Process Unlocked */
;;;473      __HAL_UNLOCK(hdma);
;;;474      
;;;475      /* Change the DMA state*/
;;;476      hdma->State = HAL_DMA_STATE_READY; 
;;;477      
;;;478      return HAL_OK; 
;;;479    }
00003c  bdf8              POP      {r3-r7,pc}
                  |L1.62|
00003e  6820              LDR      r0,[r4,#0]            ;469
000040  6800              LDR      r0,[r0,#0]            ;469
000042  07c0              LSLS     r0,r0,#31             ;469
000044  d1ee              BNE      |L1.36|
                  |L1.70|
000046  2001              MOVS     r0,#1                 ;476
000048  6266              STR      r6,[r4,#0x24]         ;476
00004a  62a0              STR      r0,[r4,#0x28]         ;476
00004c  2000              MOVS     r0,#0                 ;478
00004e  bdf8              POP      {r3-r7,pc}
;;;480    
                          ENDP


                          AREA ||i.HAL_DMA_Abort_IT||, CODE, READONLY, ALIGN=2

                  HAL_DMA_Abort_IT PROC
;;;486      */
;;;487    HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
000000  b510              PUSH     {r4,lr}
;;;488    {  
;;;489      HAL_StatusTypeDef status = HAL_OK;
;;;490      
;;;491      if(HAL_DMA_STATE_BUSY != hdma->State)
000002  6a81              LDR      r1,[r0,#0x28]
000004  2400              MOVS     r4,#0                 ;489
000006  2902              CMP      r1,#2
000008  d003              BEQ      |L2.18|
;;;492      {
;;;493        /* no transfer ongoing */
;;;494        hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
00000a  2104              MOVS     r1,#4
00000c  6401              STR      r1,[r0,#0x40]
;;;495            
;;;496        status = HAL_ERROR;
00000e  2401              MOVS     r4,#1
000010  e036              B        |L2.128|
                  |L2.18|
;;;497      }
;;;498      else
;;;499      { 
;;;500        /* Disable DMA IT */
;;;501        __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
000012  6801              LDR      r1,[r0,#0]
000014  680a              LDR      r2,[r1,#0]
000016  230e              MOVS     r3,#0xe
000018  439a              BICS     r2,r2,r3
00001a  600a              STR      r2,[r1,#0]
;;;502        
;;;503        /* Disable the channel */
;;;504        __HAL_DMA_DISABLE(hdma);
00001c  6801              LDR      r1,[r0,#0]
00001e  680a              LDR      r2,[r1,#0]
000020  0852              LSRS     r2,r2,#1
000022  0052              LSLS     r2,r2,#1
000024  600a              STR      r2,[r1,#0]
;;;505        
;;;506        /* Clear all flags */
;;;507        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_GI_FLAG_INDEX(hdma));
000026  4a17              LDR      r2,|L2.132|
000028  6801              LDR      r1,[r0,#0]
00002a  4291              CMP      r1,r2
00002c  d101              BNE      |L2.50|
00002e  2101              MOVS     r1,#1
000030  e01c              B        |L2.108|
                  |L2.50|
000032  4a15              LDR      r2,|L2.136|
000034  4291              CMP      r1,r2
000036  d101              BNE      |L2.60|
000038  2110              MOVS     r1,#0x10
00003a  e017              B        |L2.108|
                  |L2.60|
00003c  4a13              LDR      r2,|L2.140|
00003e  4291              CMP      r1,r2
000040  d101              BNE      |L2.70|
000042  1589              ASRS     r1,r1,#22
000044  e012              B        |L2.108|
                  |L2.70|
000046  4a12              LDR      r2,|L2.144|
000048  4291              CMP      r1,r2
00004a  d101              BNE      |L2.80|
00004c  1489              ASRS     r1,r1,#18
00004e  e00d              B        |L2.108|
                  |L2.80|
000050  4a10              LDR      r2,|L2.148|
000052  4291              CMP      r1,r2
000054  d102              BNE      |L2.92|
000056  2101              MOVS     r1,#1
000058  0409              LSLS     r1,r1,#16
00005a  e007              B        |L2.108|
                  |L2.92|
00005c  4a0e              LDR      r2,|L2.152|
00005e  4291              CMP      r1,r2
000060  d102              BNE      |L2.104|
000062  2101              MOVS     r1,#1
000064  0509              LSLS     r1,r1,#20
000066  e001              B        |L2.108|
                  |L2.104|
000068  2101              MOVS     r1,#1
00006a  0609              LSLS     r1,r1,#24
                  |L2.108|
00006c  4a0b              LDR      r2,|L2.156|
00006e  6051              STR      r1,[r2,#4]
;;;508        
;;;509        /* Change the DMA state */
;;;510        hdma->State = HAL_DMA_STATE_READY;
000070  2101              MOVS     r1,#1
000072  6281              STR      r1,[r0,#0x28]
;;;511        
;;;512        /* Process Unlocked */
;;;513        __HAL_UNLOCK(hdma);
000074  2100              MOVS     r1,#0
;;;514        
;;;515        /* Call User Abort callback */ 
;;;516        if(hdma->XferAbortCallback != NULL)
000076  6241              STR      r1,[r0,#0x24]
000078  6bc1              LDR      r1,[r0,#0x3c]
00007a  2900              CMP      r1,#0
00007c  d000              BEQ      |L2.128|
;;;517        {
;;;518          hdma->XferAbortCallback(hdma);
00007e  4788              BLX      r1
                  |L2.128|
;;;519        } 
;;;520      }
;;;521      return status;
000080  4620              MOV      r0,r4
;;;522    }
000082  bd10              POP      {r4,pc}
;;;523    
                          ENDP

                  |L2.132|
                          DCD      0x40020008
                  |L2.136|
                          DCD      0x4002001c
                  |L2.140|
                          DCD      0x40020030
                  |L2.144|
                          DCD      0x40020044
                  |L2.148|
                          DCD      0x40020058
                  |L2.152|
                          DCD      0x4002006c
                  |L2.156|
                          DCD      0x40020000

                          AREA ||i.HAL_DMA_DeInit||, CODE, READONLY, ALIGN=2

                  HAL_DMA_DeInit PROC
;;;256      */
;;;257    HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
000000  2800              CMP      r0,#0
;;;258    {
;;;259      /* Check the DMA peripheral state */
;;;260      if(hdma == NULL)
000002  d002              BEQ      |L3.10|
;;;261      {
;;;262        return HAL_ERROR;
;;;263      }
;;;264      
;;;265      /* Check the DMA peripheral state */
;;;266      if(hdma->State == HAL_DMA_STATE_BUSY)
000004  6a81              LDR      r1,[r0,#0x28]
000006  2902              CMP      r1,#2
000008  d101              BNE      |L3.14|
                  |L3.10|
;;;267      {
;;;268        return HAL_ERROR;
00000a  2001              MOVS     r0,#1
;;;269      }
;;;270    
;;;271      /* Disable the selected DMA Channelx */
;;;272      __HAL_DMA_DISABLE(hdma);
;;;273      
;;;274      /* Reset DMA Channel control register */
;;;275      hdma->Instance->CCR  = 0U;
;;;276      
;;;277      /* Reset DMA Channel Number of Data to Transfer register */
;;;278      hdma->Instance->CNDTR = 0U;
;;;279      
;;;280      /* Reset DMA Channel peripheral address register */
;;;281      hdma->Instance->CPAR  = 0U;
;;;282      
;;;283      /* Reset DMA Channel memory address register */
;;;284      hdma->Instance->CMAR = 0U;
;;;285    
;;;286      /* Clear all flags */
;;;287      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_GI_FLAG_INDEX(hdma));
;;;288      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
;;;289      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
;;;290      __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
;;;291      
;;;292      /* Reset DMA channel selection register */
;;;293      if (hdma->Instance == DMA1_Channel1)
;;;294      {
;;;295        /*Reset DMA request*/
;;;296        DMA1_CSELR->CSELR &= ~DMA_CSELR_C1S;
;;;297      }
;;;298      else if (hdma->Instance == DMA1_Channel2)
;;;299      {
;;;300        /*Reset DMA request*/
;;;301        DMA1_CSELR->CSELR &= ~DMA_CSELR_C2S;
;;;302      }
;;;303      else if (hdma->Instance == DMA1_Channel3)
;;;304      {
;;;305        /*Reset DMA request*/
;;;306        DMA1_CSELR->CSELR &= ~DMA_CSELR_C3S;
;;;307      }
;;;308      else if (hdma->Instance == DMA1_Channel4)
;;;309      {
;;;310        /*Reset DMA request*/
;;;311        DMA1_CSELR->CSELR &= ~DMA_CSELR_C4S;
;;;312      }
;;;313      else if (hdma->Instance == DMA1_Channel5)
;;;314      {
;;;315        /*Reset DMA request*/
;;;316        DMA1_CSELR->CSELR &= ~DMA_CSELR_C5S;
;;;317      }
;;;318    #if !defined (STM32L011xx) && !defined (STM32L021xx)
;;;319      else if (hdma->Instance == DMA1_Channel6)
;;;320      {
;;;321        /*Reset DMA request*/
;;;322        DMA1_CSELR->CSELR &= ~DMA_CSELR_C6S;
;;;323      }
;;;324      else if (hdma->Instance == DMA1_Channel7)
;;;325      {
;;;326        /*Reset DMA request*/
;;;327        DMA1_CSELR->CSELR &= ~DMA_CSELR_C7S;
;;;328      }
;;;329    #endif  
;;;330      /* Initialise the error code */
;;;331      hdma->ErrorCode = HAL_DMA_ERROR_NONE;
;;;332    
;;;333      /* Initialize the DMA state */
;;;334      hdma->State = HAL_DMA_STATE_RESET;
;;;335      
;;;336      /* Release Lock */
;;;337      __HAL_UNLOCK(hdma);
;;;338    
;;;339      return HAL_OK;
;;;340    }
00000c  4770              BX       lr
                  |L3.14|
00000e  b4f0              PUSH     {r4-r7}               ;258
000010  6801              LDR      r1,[r0,#0]            ;272
000012  680a              LDR      r2,[r1,#0]            ;272
000014  0852              LSRS     r2,r2,#1              ;272
000016  0052              LSLS     r2,r2,#1              ;272
000018  600a              STR      r2,[r1,#0]            ;272
00001a  6802              LDR      r2,[r0,#0]            ;275
00001c  2100              MOVS     r1,#0                 ;275
00001e  6011              STR      r1,[r2,#0]            ;275
000020  6802              LDR      r2,[r0,#0]            ;278
000022  6051              STR      r1,[r2,#4]            ;278
000024  6802              LDR      r2,[r0,#0]            ;281
000026  6091              STR      r1,[r2,#8]            ;281
000028  6802              LDR      r2,[r0,#0]            ;284
00002a  60d1              STR      r1,[r2,#0xc]          ;284
00002c  4e65              LDR      r6,|L3.452|
00002e  6801              LDR      r1,[r0,#0]            ;287
000030  4a65              LDR      r2,|L3.456|
000032  4b66              LDR      r3,|L3.460|
000034  4c66              LDR      r4,|L3.464|
000036  4d67              LDR      r5,|L3.468|
000038  42b1              CMP      r1,r6                 ;287
00003a  d101              BNE      |L3.64|
00003c  2701              MOVS     r7,#1                 ;287
00003e  e01a              B        |L3.118|
                  |L3.64|
000040  4291              CMP      r1,r2                 ;287
000042  d101              BNE      |L3.72|
000044  2710              MOVS     r7,#0x10              ;287
000046  e016              B        |L3.118|
                  |L3.72|
000048  4299              CMP      r1,r3                 ;287
00004a  d102              BNE      |L3.82|
00004c  27ff              MOVS     r7,#0xff              ;287
00004e  3701              ADDS     r7,#1                 ;287
000050  e011              B        |L3.118|
                  |L3.82|
000052  42a1              CMP      r1,r4                 ;287
000054  d102              BNE      |L3.92|
000056  2701              MOVS     r7,#1                 ;287
000058  033f              LSLS     r7,r7,#12             ;287
00005a  e00c              B        |L3.118|
                  |L3.92|
00005c  42a9              CMP      r1,r5                 ;287
00005e  d102              BNE      |L3.102|
000060  2701              MOVS     r7,#1                 ;287
000062  043f              LSLS     r7,r7,#16             ;287
000064  e007              B        |L3.118|
                  |L3.102|
000066  4f5c              LDR      r7,|L3.472|
000068  42b9              CMP      r1,r7                 ;287
00006a  d102              BNE      |L3.114|
00006c  2701              MOVS     r7,#1                 ;287
00006e  053f              LSLS     r7,r7,#20             ;287
000070  e001              B        |L3.118|
                  |L3.114|
000072  2701              MOVS     r7,#1                 ;287
000074  063f              LSLS     r7,r7,#24             ;287
                  |L3.118|
000076  4959              LDR      r1,|L3.476|
000078  604f              STR      r7,[r1,#4]            ;287
00007a  6801              LDR      r1,[r0,#0]            ;288
00007c  42b1              CMP      r1,r6                 ;288
00007e  d101              BNE      |L3.132|
000080  2102              MOVS     r1,#2                 ;288
000082  e01a              B        |L3.186|
                  |L3.132|
000084  4291              CMP      r1,r2                 ;288
000086  d101              BNE      |L3.140|
000088  2120              MOVS     r1,#0x20              ;288
00008a  e016              B        |L3.186|
                  |L3.140|
00008c  4299              CMP      r1,r3                 ;288
00008e  d102              BNE      |L3.150|
000090  2101              MOVS     r1,#1                 ;288
000092  0249              LSLS     r1,r1,#9              ;288
000094  e011              B        |L3.186|
                  |L3.150|
000096  42a1              CMP      r1,r4                 ;288
000098  d102              BNE      |L3.160|
00009a  2101              MOVS     r1,#1                 ;288
00009c  0349              LSLS     r1,r1,#13             ;288
00009e  e00c              B        |L3.186|
                  |L3.160|
0000a0  42a9              CMP      r1,r5                 ;288
0000a2  d102              BNE      |L3.170|
0000a4  2101              MOVS     r1,#1                 ;288
0000a6  0449              LSLS     r1,r1,#17             ;288
0000a8  e007              B        |L3.186|
                  |L3.170|
0000aa  4f4b              LDR      r7,|L3.472|
0000ac  42b9              CMP      r1,r7                 ;288
0000ae  d102              BNE      |L3.182|
0000b0  2101              MOVS     r1,#1                 ;288
0000b2  0549              LSLS     r1,r1,#21             ;288
0000b4  e001              B        |L3.186|
                  |L3.182|
0000b6  2101              MOVS     r1,#1                 ;288
0000b8  0649              LSLS     r1,r1,#25             ;288
                  |L3.186|
0000ba  4f48              LDR      r7,|L3.476|
0000bc  6079              STR      r1,[r7,#4]            ;288
0000be  4e41              LDR      r6,|L3.452|
0000c0  6801              LDR      r1,[r0,#0]            ;289
0000c2  42b1              CMP      r1,r6                 ;289
0000c4  d101              BNE      |L3.202|
0000c6  2108              MOVS     r1,#8                 ;289
0000c8  e01a              B        |L3.256|
                  |L3.202|
0000ca  4291              CMP      r1,r2                 ;289
0000cc  d101              BNE      |L3.210|
0000ce  2180              MOVS     r1,#0x80              ;289
0000d0  e016              B        |L3.256|
                  |L3.210|
0000d2  4299              CMP      r1,r3                 ;289
0000d4  d102              BNE      |L3.220|
0000d6  2101              MOVS     r1,#1                 ;289
0000d8  02c9              LSLS     r1,r1,#11             ;289
0000da  e011              B        |L3.256|
                  |L3.220|
0000dc  42a1              CMP      r1,r4                 ;289
0000de  d102              BNE      |L3.230|
0000e0  2101              MOVS     r1,#1                 ;289
0000e2  03c9              LSLS     r1,r1,#15             ;289
0000e4  e00c              B        |L3.256|
                  |L3.230|
0000e6  42a9              CMP      r1,r5                 ;289
0000e8  d102              BNE      |L3.240|
0000ea  2101              MOVS     r1,#1                 ;289
0000ec  04c9              LSLS     r1,r1,#19             ;289
0000ee  e007              B        |L3.256|
                  |L3.240|
0000f0  4e39              LDR      r6,|L3.472|
0000f2  42b1              CMP      r1,r6                 ;289
0000f4  d102              BNE      |L3.252|
0000f6  2101              MOVS     r1,#1                 ;289
0000f8  05c9              LSLS     r1,r1,#23             ;289
0000fa  e001              B        |L3.256|
                  |L3.252|
0000fc  2101              MOVS     r1,#1                 ;289
0000fe  06c9              LSLS     r1,r1,#27             ;289
                  |L3.256|
000100  6079              STR      r1,[r7,#4]            ;289
000102  4e30              LDR      r6,|L3.452|
000104  6801              LDR      r1,[r0,#0]            ;290
000106  42b1              CMP      r1,r6                 ;290
000108  d101              BNE      |L3.270|
00010a  2104              MOVS     r1,#4                 ;290
00010c  e01a              B        |L3.324|
                  |L3.270|
00010e  4291              CMP      r1,r2                 ;290
000110  d101              BNE      |L3.278|
000112  2140              MOVS     r1,#0x40              ;290
000114  e016              B        |L3.324|
                  |L3.278|
000116  4299              CMP      r1,r3                 ;290
000118  d102              BNE      |L3.288|
00011a  2101              MOVS     r1,#1                 ;290
00011c  0289              LSLS     r1,r1,#10             ;290
00011e  e011              B        |L3.324|
                  |L3.288|
000120  42a1              CMP      r1,r4                 ;290
000122  d102              BNE      |L3.298|
000124  2101              MOVS     r1,#1                 ;290
000126  0389              LSLS     r1,r1,#14             ;290
000128  e00c              B        |L3.324|
                  |L3.298|
00012a  42a9              CMP      r1,r5                 ;290
00012c  d102              BNE      |L3.308|
00012e  2101              MOVS     r1,#1                 ;290
000130  0489              LSLS     r1,r1,#18             ;290
000132  e007              B        |L3.324|
                  |L3.308|
000134  4e28              LDR      r6,|L3.472|
000136  42b1              CMP      r1,r6                 ;290
000138  d102              BNE      |L3.320|
00013a  2101              MOVS     r1,#1                 ;290
00013c  0589              LSLS     r1,r1,#22             ;290
00013e  e001              B        |L3.324|
                  |L3.320|
000140  2101              MOVS     r1,#1                 ;290
000142  0689              LSLS     r1,r1,#26             ;290
                  |L3.324|
000144  6079              STR      r1,[r7,#4]            ;290
000146  4f1f              LDR      r7,|L3.452|
000148  6806              LDR      r6,[r0,#0]            ;293
00014a  4925              LDR      r1,|L3.480|
00014c  42be              CMP      r6,r7                 ;293
00014e  d103              BNE      |L3.344|
000150  6a8a              LDR      r2,[r1,#0x28]         ;296
000152  0912              LSRS     r2,r2,#4              ;296
000154  0112              LSLS     r2,r2,#4              ;296
000156  e02d              B        |L3.436|
                  |L3.344|
000158  4296              CMP      r6,r2                 ;298
00015a  d104              BNE      |L3.358|
00015c  6a8a              LDR      r2,[r1,#0x28]         ;301
00015e  23f0              MOVS     r3,#0xf0              ;301
000160  439a              BICS     r2,r2,r3              ;301
000162  628a              STR      r2,[r1,#0x28]         ;301
000164  e027              B        |L3.438|
                  |L3.358|
000166  429e              CMP      r6,r3                 ;303
000168  d105              BNE      |L3.374|
00016a  6a8a              LDR      r2,[r1,#0x28]         ;306
00016c  230f              MOVS     r3,#0xf               ;306
00016e  021b              LSLS     r3,r3,#8              ;306
000170  439a              BICS     r2,r2,r3              ;306
000172  628a              STR      r2,[r1,#0x28]         ;306
000174  e01f              B        |L3.438|
                  |L3.374|
000176  42a6              CMP      r6,r4                 ;308
000178  d105              BNE      |L3.390|
00017a  6a8a              LDR      r2,[r1,#0x28]         ;311
00017c  230f              MOVS     r3,#0xf               ;311
00017e  031b              LSLS     r3,r3,#12             ;311
000180  439a              BICS     r2,r2,r3              ;311
000182  628a              STR      r2,[r1,#0x28]         ;311
000184  e017              B        |L3.438|
                  |L3.390|
000186  42ae              CMP      r6,r5                 ;313
000188  d105              BNE      |L3.406|
00018a  6a8a              LDR      r2,[r1,#0x28]         ;316
00018c  230f              MOVS     r3,#0xf               ;316
00018e  041b              LSLS     r3,r3,#16             ;316
000190  439a              BICS     r2,r2,r3              ;316
000192  628a              STR      r2,[r1,#0x28]         ;316
000194  e00f              B        |L3.438|
                  |L3.406|
000196  4a10              LDR      r2,|L3.472|
000198  4296              CMP      r6,r2                 ;319
00019a  d105              BNE      |L3.424|
00019c  6a8a              LDR      r2,[r1,#0x28]         ;322
00019e  230f              MOVS     r3,#0xf               ;322
0001a0  051b              LSLS     r3,r3,#20             ;322
0001a2  439a              BICS     r2,r2,r3              ;322
0001a4  628a              STR      r2,[r1,#0x28]         ;322
0001a6  e006              B        |L3.438|
                  |L3.424|
0001a8  428e              CMP      r6,r1                 ;324
0001aa  d104              BNE      |L3.438|
0001ac  6a8a              LDR      r2,[r1,#0x28]         ;327
0001ae  230f              MOVS     r3,#0xf               ;327
0001b0  061b              LSLS     r3,r3,#24             ;327
0001b2  439a              BICS     r2,r2,r3              ;327
                  |L3.436|
0001b4  628a              STR      r2,[r1,#0x28]         ;327
                  |L3.438|
0001b6  2100              MOVS     r1,#0                 ;331
0001b8  6401              STR      r1,[r0,#0x40]         ;331
0001ba  6281              STR      r1,[r0,#0x28]         ;334
0001bc  6241              STR      r1,[r0,#0x24]         ;339
0001be  bcf0              POP      {r4-r7}
0001c0  4608              MOV      r0,r1                 ;339
0001c2  4770              BX       lr
;;;341    
                          ENDP

                  |L3.452|
                          DCD      0x40020008
                  |L3.456|
                          DCD      0x4002001c
                  |L3.460|
                          DCD      0x40020030
                  |L3.464|
                          DCD      0x40020044
                  |L3.468|
                          DCD      0x40020058
                  |L3.472|
                          DCD      0x4002006c
                  |L3.476|
                          DCD      0x40020000
                  |L3.480|
                          DCD      0x40020080

                          AREA ||i.HAL_DMA_GetError||, CODE, READONLY, ALIGN=1

                  HAL_DMA_GetError PROC
;;;744      */
;;;745    uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
000000  6c00              LDR      r0,[r0,#0x40]
;;;746    {
;;;747      return hdma->ErrorCode;
;;;748    }
000002  4770              BX       lr
;;;749    
                          ENDP


                          AREA ||i.HAL_DMA_GetState||, CODE, READONLY, ALIGN=1

                  HAL_DMA_GetState PROC
;;;733      */
;;;734    HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
000000  6a80              LDR      r0,[r0,#0x28]
;;;735    {
;;;736      return hdma->State;
;;;737    }
000002  4770              BX       lr
;;;738    
                          ENDP


                          AREA ||i.HAL_DMA_IRQHandler||, CODE, READONLY, ALIGN=2

                  HAL_DMA_IRQHandler PROC
;;;621      */
;;;622    void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
000000  b5f8              PUSH     {r3-r7,lr}
;;;623    {        
000002  4604              MOV      r4,r0
;;;624      /* Transfer Error Interrupt management ***************************************/
;;;625      if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma)) != RESET)
000004  488c              LDR      r0,|L6.568|
000006  6801              LDR      r1,[r0,#0]
000008  4a8c              LDR      r2,|L6.572|
00000a  6820              LDR      r0,[r4,#0]
00000c  0413              LSLS     r3,r2,#16
00000e  4d8c              LDR      r5,|L6.576|
000010  4e8c              LDR      r6,|L6.580|
000012  4f8d              LDR      r7,|L6.584|
000014  4290              CMP      r0,r2
000016  d101              BNE      |L6.28|
000018  2208              MOVS     r2,#8
00001a  e01a              B        |L6.82|
                  |L6.28|
00001c  42a8              CMP      r0,r5
00001e  d101              BNE      |L6.36|
000020  2280              MOVS     r2,#0x80
000022  e016              B        |L6.82|
                  |L6.36|
000024  42b0              CMP      r0,r6
000026  d102              BNE      |L6.46|
000028  2201              MOVS     r2,#1
00002a  02d2              LSLS     r2,r2,#11
00002c  e011              B        |L6.82|
                  |L6.46|
00002e  42b8              CMP      r0,r7
000030  d102              BNE      |L6.56|
000032  2201              MOVS     r2,#1
000034  03d2              LSLS     r2,r2,#15
000036  e00c              B        |L6.82|
                  |L6.56|
000038  4a84              LDR      r2,|L6.588|
00003a  4290              CMP      r0,r2
00003c  d101              BNE      |L6.66|
00003e  461a              MOV      r2,r3
000040  e007              B        |L6.82|
                  |L6.66|
000042  4a83              LDR      r2,|L6.592|
000044  4290              CMP      r0,r2
000046  d102              BNE      |L6.78|
000048  2201              MOVS     r2,#1
00004a  05d2              LSLS     r2,r2,#23
00004c  e001              B        |L6.82|
                  |L6.78|
00004e  2201              MOVS     r2,#1
000050  06d2              LSLS     r2,r2,#27
                  |L6.82|
000052  4211              TST      r1,r2
000054  d036              BEQ      |L6.196|
;;;626      {
;;;627        if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
000056  6801              LDR      r1,[r0,#0]
000058  0709              LSLS     r1,r1,#28
00005a  d533              BPL      |L6.196|
;;;628        {
;;;629          /* Disable the transfer error interrupt */
;;;630          __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE);
00005c  6801              LDR      r1,[r0,#0]
00005e  2208              MOVS     r2,#8
000060  4391              BICS     r1,r1,r2
000062  6001              STR      r1,[r0,#0]
;;;631        
;;;632          /* Clear the transfer error flag */
;;;633          __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
000064  4975              LDR      r1,|L6.572|
000066  6820              LDR      r0,[r4,#0]
000068  4288              CMP      r0,r1
00006a  d101              BNE      |L6.112|
00006c  2008              MOVS     r0,#8
00006e  e01a              B        |L6.166|
                  |L6.112|
000070  42a8              CMP      r0,r5
000072  d101              BNE      |L6.120|
000074  2080              MOVS     r0,#0x80
000076  e016              B        |L6.166|
                  |L6.120|
000078  42b0              CMP      r0,r6
00007a  d102              BNE      |L6.130|
00007c  2001              MOVS     r0,#1
00007e  02c0              LSLS     r0,r0,#11
000080  e011              B        |L6.166|
                  |L6.130|
000082  42b8              CMP      r0,r7
000084  d102              BNE      |L6.140|
000086  2001              MOVS     r0,#1
000088  03c0              LSLS     r0,r0,#15
00008a  e00c              B        |L6.166|
                  |L6.140|
00008c  496f              LDR      r1,|L6.588|
00008e  4288              CMP      r0,r1
000090  d101              BNE      |L6.150|
000092  4618              MOV      r0,r3
000094  e007              B        |L6.166|
                  |L6.150|
000096  496e              LDR      r1,|L6.592|
000098  4288              CMP      r0,r1
00009a  d102              BNE      |L6.162|
00009c  2001              MOVS     r0,#1
00009e  05c0              LSLS     r0,r0,#23
0000a0  e001              B        |L6.166|
                  |L6.162|
0000a2  2001              MOVS     r0,#1
0000a4  06c0              LSLS     r0,r0,#27
                  |L6.166|
0000a6  4964              LDR      r1,|L6.568|
0000a8  6048              STR      r0,[r1,#4]
;;;634        
;;;635          /* Update error code */
;;;636          hdma->ErrorCode |= HAL_DMA_ERROR_TE;
0000aa  6c20              LDR      r0,[r4,#0x40]
0000ac  2101              MOVS     r1,#1
0000ae  4308              ORRS     r0,r0,r1
0000b0  6420              STR      r0,[r4,#0x40]
;;;637    
;;;638          /* Change the DMA state */
;;;639          hdma->State = HAL_DMA_STATE_ERROR;    
0000b2  2004              MOVS     r0,#4
0000b4  62a0              STR      r0,[r4,#0x28]
;;;640        
;;;641          /* Process Unlocked */
;;;642          __HAL_UNLOCK(hdma); 
0000b6  2000              MOVS     r0,#0
;;;643        
;;;644          if (hdma->XferErrorCallback != NULL)
0000b8  6260              STR      r0,[r4,#0x24]
0000ba  6ba1              LDR      r1,[r4,#0x38]
0000bc  2900              CMP      r1,#0
0000be  d001              BEQ      |L6.196|
;;;645          {
;;;646            /* Transfer error callback */
;;;647            hdma->XferErrorCallback(hdma);
0000c0  4620              MOV      r0,r4
0000c2  4788              BLX      r1
                  |L6.196|
;;;648          }
;;;649        }
;;;650      }
;;;651    
;;;652      /* Half Transfer Complete Interrupt management ******************************/
;;;653      if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma)) != RESET)
0000c4  485c              LDR      r0,|L6.568|
0000c6  6801              LDR      r1,[r0,#0]
0000c8  4a5c              LDR      r2,|L6.572|
0000ca  6820              LDR      r0,[r4,#0]
0000cc  1513              ASRS     r3,r2,#20
0000ce  4290              CMP      r0,r2
0000d0  d101              BNE      |L6.214|
0000d2  2204              MOVS     r2,#4
0000d4  e01a              B        |L6.268|
                  |L6.214|
0000d6  42a8              CMP      r0,r5
0000d8  d101              BNE      |L6.222|
0000da  2240              MOVS     r2,#0x40
0000dc  e016              B        |L6.268|
                  |L6.222|
0000de  42b0              CMP      r0,r6
0000e0  d101              BNE      |L6.230|
0000e2  461a              MOV      r2,r3
0000e4  e012              B        |L6.268|
                  |L6.230|
0000e6  42b8              CMP      r0,r7
0000e8  d102              BNE      |L6.240|
0000ea  2201              MOVS     r2,#1
0000ec  0392              LSLS     r2,r2,#14
0000ee  e00d              B        |L6.268|
                  |L6.240|
0000f0  4a56              LDR      r2,|L6.588|
0000f2  4290              CMP      r0,r2
0000f4  d102              BNE      |L6.252|
0000f6  2201              MOVS     r2,#1
0000f8  0492              LSLS     r2,r2,#18
0000fa  e007              B        |L6.268|
                  |L6.252|
0000fc  4a54              LDR      r2,|L6.592|
0000fe  4290              CMP      r0,r2
000100  d102              BNE      |L6.264|
000102  2201              MOVS     r2,#1
000104  0592              LSLS     r2,r2,#22
000106  e001              B        |L6.268|
                  |L6.264|
000108  2201              MOVS     r2,#1
00010a  0692              LSLS     r2,r2,#26
                  |L6.268|
00010c  4211              TST      r1,r2
00010e  d033              BEQ      |L6.376|
;;;654      {
;;;655        if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
000110  6801              LDR      r1,[r0,#0]
000112  0749              LSLS     r1,r1,#29
000114  d530              BPL      |L6.376|
;;;656        { 
;;;657          /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
;;;658          if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
000116  6801              LDR      r1,[r0,#0]
000118  0689              LSLS     r1,r1,#26
00011a  d403              BMI      |L6.292|
;;;659          {
;;;660            /* Disable the half transfer interrupt */
;;;661            __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
00011c  6802              LDR      r2,[r0,#0]
00011e  2104              MOVS     r1,#4
000120  438a              BICS     r2,r2,r1
000122  6002              STR      r2,[r0,#0]
                  |L6.292|
;;;662          }
;;;663          /* Clear the half transfer complete flag */
;;;664          __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
000124  4945              LDR      r1,|L6.572|
000126  6820              LDR      r0,[r4,#0]
000128  4288              CMP      r0,r1
00012a  d101              BNE      |L6.304|
00012c  2004              MOVS     r0,#4
00012e  e01a              B        |L6.358|
                  |L6.304|
000130  42a8              CMP      r0,r5
000132  d101              BNE      |L6.312|
000134  2040              MOVS     r0,#0x40
000136  e016              B        |L6.358|
                  |L6.312|
000138  42b0              CMP      r0,r6
00013a  d101              BNE      |L6.320|
00013c  4618              MOV      r0,r3
00013e  e012              B        |L6.358|
                  |L6.320|
000140  42b8              CMP      r0,r7
000142  d102              BNE      |L6.330|
000144  2001              MOVS     r0,#1
000146  0380              LSLS     r0,r0,#14
000148  e00d              B        |L6.358|
                  |L6.330|
00014a  4940              LDR      r1,|L6.588|
00014c  4288              CMP      r0,r1
00014e  d102              BNE      |L6.342|
000150  2001              MOVS     r0,#1
000152  0480              LSLS     r0,r0,#18
000154  e007              B        |L6.358|
                  |L6.342|
000156  493e              LDR      r1,|L6.592|
000158  4288              CMP      r0,r1
00015a  d102              BNE      |L6.354|
00015c  2001              MOVS     r0,#1
00015e  0580              LSLS     r0,r0,#22
000160  e001              B        |L6.358|
                  |L6.354|
000162  2001              MOVS     r0,#1
000164  0680              LSLS     r0,r0,#26
                  |L6.358|
000166  4934              LDR      r1,|L6.568|
000168  6048              STR      r0,[r1,#4]
;;;665    
;;;666          /* Change DMA peripheral state */
;;;667          hdma->State = HAL_DMA_STATE_READY_HALF;
00016a  2005              MOVS     r0,#5
00016c  62a0              STR      r0,[r4,#0x28]
;;;668    
;;;669          if(hdma->XferHalfCpltCallback != NULL)
00016e  6b61              LDR      r1,[r4,#0x34]
000170  2900              CMP      r1,#0
000172  d001              BEQ      |L6.376|
;;;670          {
;;;671            /* Half transfer callback */
;;;672            hdma->XferHalfCpltCallback(hdma);
000174  4620              MOV      r0,r4
000176  4788              BLX      r1
                  |L6.376|
;;;673          }
;;;674        }
;;;675      }
;;;676      
;;;677      /* Transfer Complete Interrupt management ***********************************/
;;;678      if(__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma)) != RESET)
000178  482f              LDR      r0,|L6.568|
00017a  6801              LDR      r1,[r0,#0]
00017c  4a2f              LDR      r2,|L6.572|
00017e  6820              LDR      r0,[r4,#0]
000180  1553              ASRS     r3,r2,#21
000182  4290              CMP      r0,r2
000184  d101              BNE      |L6.394|
000186  2202              MOVS     r2,#2
000188  e01a              B        |L6.448|
                  |L6.394|
00018a  42a8              CMP      r0,r5
00018c  d101              BNE      |L6.402|
00018e  2220              MOVS     r2,#0x20
000190  e016              B        |L6.448|
                  |L6.402|
000192  42b0              CMP      r0,r6
000194  d101              BNE      |L6.410|
000196  461a              MOV      r2,r3
000198  e012              B        |L6.448|
                  |L6.410|
00019a  42b8              CMP      r0,r7
00019c  d102              BNE      |L6.420|
00019e  2201              MOVS     r2,#1
0001a0  0352              LSLS     r2,r2,#13
0001a2  e00d              B        |L6.448|
                  |L6.420|
0001a4  4a29              LDR      r2,|L6.588|
0001a6  4290              CMP      r0,r2
0001a8  d102              BNE      |L6.432|
0001aa  2201              MOVS     r2,#1
0001ac  0452              LSLS     r2,r2,#17
0001ae  e007              B        |L6.448|
                  |L6.432|
0001b0  4a27              LDR      r2,|L6.592|
0001b2  4290              CMP      r0,r2
0001b4  d102              BNE      |L6.444|
0001b6  2201              MOVS     r2,#1
0001b8  0552              LSLS     r2,r2,#21
0001ba  e001              B        |L6.448|
                  |L6.444|
0001bc  2201              MOVS     r2,#1
0001be  0652              LSLS     r2,r2,#25
                  |L6.448|
0001c0  4211              TST      r1,r2
0001c2  d037              BEQ      |L6.564|
;;;679      {
;;;680        if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
0001c4  6801              LDR      r1,[r0,#0]
0001c6  0789              LSLS     r1,r1,#30
0001c8  d534              BPL      |L6.564|
;;;681        {
;;;682          if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
0001ca  6801              LDR      r1,[r0,#0]
0001cc  0689              LSLS     r1,r1,#26
0001ce  d403              BMI      |L6.472|
;;;683          {
;;;684            /* Disable the transfer complete interrupt */
;;;685            __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TC);
0001d0  6801              LDR      r1,[r0,#0]
0001d2  2202              MOVS     r2,#2
0001d4  4391              BICS     r1,r1,r2
0001d6  6001              STR      r1,[r0,#0]
                  |L6.472|
;;;686          }
;;;687          /* Clear the transfer complete flag */
;;;688          __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
0001d8  4918              LDR      r1,|L6.572|
0001da  6820              LDR      r0,[r4,#0]
0001dc  4288              CMP      r0,r1
0001de  d101              BNE      |L6.484|
0001e0  2002              MOVS     r0,#2
0001e2  e01a              B        |L6.538|
                  |L6.484|
0001e4  42a8              CMP      r0,r5
0001e6  d101              BNE      |L6.492|
0001e8  2020              MOVS     r0,#0x20
0001ea  e016              B        |L6.538|
                  |L6.492|
0001ec  42b0              CMP      r0,r6
0001ee  d101              BNE      |L6.500|
0001f0  4618              MOV      r0,r3
0001f2  e012              B        |L6.538|
                  |L6.500|
0001f4  42b8              CMP      r0,r7
0001f6  d102              BNE      |L6.510|
0001f8  2001              MOVS     r0,#1
0001fa  0340              LSLS     r0,r0,#13
0001fc  e00d              B        |L6.538|
                  |L6.510|
0001fe  4913              LDR      r1,|L6.588|
000200  4288              CMP      r0,r1
000202  d102              BNE      |L6.522|
000204  2001              MOVS     r0,#1
000206  0440              LSLS     r0,r0,#17
000208  e007              B        |L6.538|
                  |L6.522|
00020a  4911              LDR      r1,|L6.592|
00020c  4288              CMP      r0,r1
00020e  d102              BNE      |L6.534|
000210  2001              MOVS     r0,#1
000212  0540              LSLS     r0,r0,#21
000214  e001              B        |L6.538|
                  |L6.534|
000216  2001              MOVS     r0,#1
000218  0640              LSLS     r0,r0,#25
                  |L6.538|
00021a  4907              LDR      r1,|L6.568|
00021c  6048              STR      r0,[r1,#4]
;;;689        
;;;690          /* Update error code */
;;;691          hdma->ErrorCode |= HAL_DMA_ERROR_NONE;
00021e  6c20              LDR      r0,[r4,#0x40]
000220  6420              STR      r0,[r4,#0x40]
;;;692    
;;;693          /* Change the DMA state */
;;;694          hdma->State = HAL_DMA_STATE_READY;    
000222  2001              MOVS     r0,#1
000224  62a0              STR      r0,[r4,#0x28]
;;;695        
;;;696          /* Process Unlocked */
;;;697          __HAL_UNLOCK(hdma);
000226  2000              MOVS     r0,#0
;;;698        
;;;699          if(hdma->XferCpltCallback != NULL)
000228  6260              STR      r0,[r4,#0x24]
00022a  6b21              LDR      r1,[r4,#0x30]
00022c  2900              CMP      r1,#0
00022e  d001              BEQ      |L6.564|
;;;700          {       
;;;701            /* Transfer complete callback */
;;;702            hdma->XferCpltCallback(hdma);
000230  4620              MOV      r0,r4
000232  4788              BLX      r1
                  |L6.564|
;;;703          }
;;;704        }
;;;705      }
;;;706    }  
000234  bdf8              POP      {r3-r7,pc}
;;;707    
                          ENDP

000236  0000              DCW      0x0000
                  |L6.568|
                          DCD      0x40020000
                  |L6.572|
                          DCD      0x40020008
                  |L6.576|
                          DCD      0x4002001c
                  |L6.580|
                          DCD      0x40020030
                  |L6.584|
                          DCD      0x40020044
                  |L6.588|
                          DCD      0x40020058
                  |L6.592|
                          DCD      0x4002006c

                          AREA ||i.HAL_DMA_Init||, CODE, READONLY, ALIGN=2

                  HAL_DMA_Init PROC
;;;138      */
;;;139    HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
000000  2800              CMP      r0,#0
;;;140    { 
;;;141      uint32_t tmp = 0U;
;;;142      
;;;143      /* Check the DMA peripheral state */
;;;144      if(hdma == NULL)
000002  d004              BEQ      |L7.14|
;;;145      {
;;;146        return HAL_ERROR;
;;;147      }
;;;148    
;;;149      /* Check the parameters */
;;;150      assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
;;;151      assert_param(IS_DMA_ALL_REQUEST(hdma->Init.Request));
;;;152      assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
;;;153      assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
;;;154      assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
;;;155      assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
;;;156      assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
;;;157      assert_param(IS_DMA_MODE(hdma->Init.Mode));
;;;158      assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
;;;159      
;;;160      if(hdma->State == HAL_DMA_STATE_RESET)
000004  6a81              LDR      r1,[r0,#0x28]
000006  2900              CMP      r1,#0
000008  d103              BNE      |L7.18|
;;;161      {
;;;162        /* Allocate lock resource and initialize it */
;;;163        hdma->Lock = HAL_UNLOCKED;
00000a  6241              STR      r1,[r0,#0x24]
00000c  e001              B        |L7.18|
                  |L7.14|
00000e  2001              MOVS     r0,#1                 ;146
;;;164      }
;;;165    
;;;166      /* Change DMA peripheral state */
;;;167      hdma->State = HAL_DMA_STATE_BUSY;
;;;168    
;;;169      /* Get the CR register value */
;;;170      tmp = hdma->Instance->CCR;
;;;171      
;;;172      /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR bits */
;;;173      tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  | \
;;;174                          DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   | \
;;;175                          DMA_CCR_DIR));
;;;176      
;;;177      /* Prepare the DMA Channel configuration */
;;;178      tmp |=  hdma->Init.Direction        |
;;;179              hdma->Init.PeriphInc           | hdma->Init.MemInc           |
;;;180              hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
;;;181              hdma->Init.Mode                | hdma->Init.Priority;
;;;182    
;;;183      /* Write to DMA Channel CR register */
;;;184      hdma->Instance->CCR = tmp;  
;;;185      
;;;186      /* Write to DMA channel selection register */
;;;187      if (hdma->Instance == DMA1_Channel1)
;;;188      {
;;;189        /*Reset request selection for DMA1 Channel1*/
;;;190        DMA1_CSELR->CSELR &= ~DMA_CSELR_C1S;
;;;191        
;;;192        /* Configure request selection for DMA1 Channel1 */
;;;193        DMA1_CSELR->CSELR |= hdma->Init.Request;
;;;194      }
;;;195      else if (hdma->Instance == DMA1_Channel2)
;;;196      {
;;;197        /*Reset request selection for DMA1 Channel2*/
;;;198        DMA1_CSELR->CSELR &= ~DMA_CSELR_C2S;
;;;199        
;;;200        /* Configure request selection for DMA1 Channel2 */
;;;201        DMA1_CSELR->CSELR |= (uint32_t)(hdma->Init.Request << 4U);
;;;202      }
;;;203      else if (hdma->Instance == DMA1_Channel3)
;;;204      {
;;;205        /*Reset request selection for DMA1 Channel3*/
;;;206        DMA1_CSELR->CSELR &= ~DMA_CSELR_C3S;
;;;207        
;;;208        /* Configure request selection for DMA1 Channel3 */
;;;209        DMA1_CSELR->CSELR |= (uint32_t) (hdma->Init.Request << 8U);
;;;210      }
;;;211      else if (hdma->Instance == DMA1_Channel4)
;;;212      {
;;;213        /*Reset request selection for DMA1 Channel4*/
;;;214        DMA1_CSELR->CSELR &= ~DMA_CSELR_C4S;
;;;215        
;;;216        /* Configure request selection for DMA1 Channel4 */
;;;217        DMA1_CSELR->CSELR |= (uint32_t) (hdma->Init.Request << 12U);
;;;218      }
;;;219      else if (hdma->Instance == DMA1_Channel5)
;;;220      {
;;;221        /*Reset request selection for DMA1 Channel5*/
;;;222        DMA1_CSELR->CSELR &= ~DMA_CSELR_C5S;
;;;223        
;;;224        /* Configure request selection for DMA1 Channel5 */
;;;225        DMA1_CSELR->CSELR |= (uint32_t) (hdma->Init.Request << 16U);
;;;226      }
;;;227    #if !defined (STM32L011xx) && !defined (STM32L021xx)
;;;228      else if (hdma->Instance == DMA1_Channel6)
;;;229      {
;;;230        /*Reset request selection for DMA1 Channel6*/
;;;231        DMA1_CSELR->CSELR &= ~DMA_CSELR_C6S;
;;;232        
;;;233        /* Configure request selection for DMA1 Channel6 */
;;;234        DMA1_CSELR->CSELR |= (uint32_t) (hdma->Init.Request << 20U);
;;;235      }
;;;236      else if (hdma->Instance == DMA1_Channel7)
;;;237      {
;;;238        /*Reset request selection for DMA1 Channel7*/
;;;239        DMA1_CSELR->CSELR &= ~DMA_CSELR_C7S;
;;;240        
;;;241        /* Configure request selection for DMA1 Channel7 */
;;;242        DMA1_CSELR->CSELR |= (uint32_t) (hdma->Init.Request << 24U);
;;;243      }
;;;244    #endif   
;;;245      /* Initialize the DMA state*/
;;;246      hdma->State  = HAL_DMA_STATE_READY;
;;;247      
;;;248      return HAL_OK;
;;;249    }  
000010  4770              BX       lr
                  |L7.18|
000012  b430              PUSH     {r4,r5}               ;140
000014  2102              MOVS     r1,#2                 ;167
000016  6281              STR      r1,[r0,#0x28]         ;167
000018  6803              LDR      r3,[r0,#0]            ;170
00001a  6819              LDR      r1,[r3,#0]            ;170
00001c  4a3a              LDR      r2,|L7.264|
00001e  68c4              LDR      r4,[r0,#0xc]          ;178
000020  4011              ANDS     r1,r1,r2              ;173
000022  6882              LDR      r2,[r0,#8]            ;178
000024  6945              LDR      r5,[r0,#0x14]         ;178
000026  4322              ORRS     r2,r2,r4              ;178
000028  6904              LDR      r4,[r0,#0x10]         ;178
00002a  432c              ORRS     r4,r4,r5              ;178
00002c  4322              ORRS     r2,r2,r4              ;178
00002e  6984              LDR      r4,[r0,#0x18]         ;178
000030  4322              ORRS     r2,r2,r4              ;178
000032  69c4              LDR      r4,[r0,#0x1c]         ;178
000034  4322              ORRS     r2,r2,r4              ;178
000036  6a04              LDR      r4,[r0,#0x20]         ;178
000038  4322              ORRS     r2,r2,r4              ;178
00003a  430a              ORRS     r2,r2,r1              ;178
00003c  601a              STR      r2,[r3,#0]            ;184
00003e  4b33              LDR      r3,|L7.268|
000040  6802              LDR      r2,[r0,#0]            ;187
000042  4933              LDR      r1,|L7.272|
000044  429a              CMP      r2,r3                 ;187
000046  d108              BNE      |L7.90|
000048  6a8a              LDR      r2,[r1,#0x28]         ;190
00004a  0912              LSRS     r2,r2,#4              ;190
00004c  0112              LSLS     r2,r2,#4              ;190
00004e  628a              STR      r2,[r1,#0x28]         ;190
000050  6a8a              LDR      r2,[r1,#0x28]         ;193
000052  6843              LDR      r3,[r0,#4]            ;193
000054  431a              ORRS     r2,r2,r3              ;193
000056  628a              STR      r2,[r1,#0x28]         ;193
000058  e050              B        |L7.252|
                  |L7.90|
00005a  4b2e              LDR      r3,|L7.276|
00005c  429a              CMP      r2,r3                 ;195
00005e  d109              BNE      |L7.116|
000060  6a8a              LDR      r2,[r1,#0x28]         ;198
000062  23f0              MOVS     r3,#0xf0              ;198
000064  439a              BICS     r2,r2,r3              ;198
000066  628a              STR      r2,[r1,#0x28]         ;198
000068  6a8a              LDR      r2,[r1,#0x28]         ;201
00006a  6843              LDR      r3,[r0,#4]            ;201
00006c  011b              LSLS     r3,r3,#4              ;201
00006e  431a              ORRS     r2,r2,r3              ;201
000070  628a              STR      r2,[r1,#0x28]         ;201
000072  e043              B        |L7.252|
                  |L7.116|
000074  4b28              LDR      r3,|L7.280|
000076  429a              CMP      r2,r3                 ;203
000078  d10a              BNE      |L7.144|
00007a  6a8a              LDR      r2,[r1,#0x28]         ;206
00007c  230f              MOVS     r3,#0xf               ;206
00007e  021b              LSLS     r3,r3,#8              ;206
000080  439a              BICS     r2,r2,r3              ;206
000082  628a              STR      r2,[r1,#0x28]         ;206
000084  6a8a              LDR      r2,[r1,#0x28]         ;209
000086  6843              LDR      r3,[r0,#4]            ;209
000088  021b              LSLS     r3,r3,#8              ;209
00008a  431a              ORRS     r2,r2,r3              ;209
00008c  628a              STR      r2,[r1,#0x28]         ;209
00008e  e035              B        |L7.252|
                  |L7.144|
000090  4b22              LDR      r3,|L7.284|
000092  429a              CMP      r2,r3                 ;211
000094  d10a              BNE      |L7.172|
000096  6a8a              LDR      r2,[r1,#0x28]         ;214
000098  230f              MOVS     r3,#0xf               ;214
00009a  031b              LSLS     r3,r3,#12             ;214
00009c  439a              BICS     r2,r2,r3              ;214
00009e  628a              STR      r2,[r1,#0x28]         ;214
0000a0  6a8a              LDR      r2,[r1,#0x28]         ;217
0000a2  6843              LDR      r3,[r0,#4]            ;217
0000a4  031b              LSLS     r3,r3,#12             ;217
0000a6  431a              ORRS     r2,r2,r3              ;217
0000a8  628a              STR      r2,[r1,#0x28]         ;217
0000aa  e027              B        |L7.252|
                  |L7.172|
0000ac  4b1c              LDR      r3,|L7.288|
0000ae  429a              CMP      r2,r3                 ;219
0000b0  d10a              BNE      |L7.200|
0000b2  6a8a              LDR      r2,[r1,#0x28]         ;222
0000b4  230f              MOVS     r3,#0xf               ;222
0000b6  041b              LSLS     r3,r3,#16             ;222
0000b8  439a              BICS     r2,r2,r3              ;222
0000ba  628a              STR      r2,[r1,#0x28]         ;222
0000bc  6a8a              LDR      r2,[r1,#0x28]         ;225
0000be  8883              LDRH     r3,[r0,#4]            ;225
0000c0  041b              LSLS     r3,r3,#16             ;225
0000c2  431a              ORRS     r2,r2,r3              ;225
0000c4  628a              STR      r2,[r1,#0x28]         ;225
0000c6  e019              B        |L7.252|
                  |L7.200|
0000c8  4b16              LDR      r3,|L7.292|
0000ca  429a              CMP      r2,r3                 ;228
0000cc  d10a              BNE      |L7.228|
0000ce  6a8a              LDR      r2,[r1,#0x28]         ;231
0000d0  230f              MOVS     r3,#0xf               ;231
0000d2  051b              LSLS     r3,r3,#20             ;231
0000d4  439a              BICS     r2,r2,r3              ;231
0000d6  628a              STR      r2,[r1,#0x28]         ;231
0000d8  6a8a              LDR      r2,[r1,#0x28]         ;234
0000da  8883              LDRH     r3,[r0,#4]            ;234
0000dc  051b              LSLS     r3,r3,#20             ;234
0000de  431a              ORRS     r2,r2,r3              ;234
0000e0  628a              STR      r2,[r1,#0x28]         ;234
0000e2  e00b              B        |L7.252|
                  |L7.228|
0000e4  428a              CMP      r2,r1                 ;236
0000e6  d109              BNE      |L7.252|
0000e8  6a8a              LDR      r2,[r1,#0x28]         ;239
0000ea  230f              MOVS     r3,#0xf               ;239
0000ec  061b              LSLS     r3,r3,#24             ;239
0000ee  439a              BICS     r2,r2,r3              ;239
0000f0  628a              STR      r2,[r1,#0x28]         ;239
0000f2  6a8a              LDR      r2,[r1,#0x28]         ;242
0000f4  7903              LDRB     r3,[r0,#4]            ;242
0000f6  061b              LSLS     r3,r3,#24             ;242
0000f8  431a              ORRS     r2,r2,r3              ;242
0000fa  628a              STR      r2,[r1,#0x28]         ;242
                  |L7.252|
0000fc  2101              MOVS     r1,#1                 ;246
0000fe  6281              STR      r1,[r0,#0x28]         ;246
000100  bc30              POP      {r4,r5}
000102  2000              MOVS     r0,#0                 ;248
000104  4770              BX       lr
;;;250      
                          ENDP

000106  0000              DCW      0x0000
                  |L7.264|
                          DCD      0xffffc00f
                  |L7.268|
                          DCD      0x40020008
                  |L7.272|
                          DCD      0x40020080
                  |L7.276|
                          DCD      0x4002001c
                  |L7.280|
                          DCD      0x40020030
                  |L7.284|
                          DCD      0x40020044
                  |L7.288|
                          DCD      0x40020058
                  |L7.292|
                          DCD      0x4002006c

                          AREA ||i.HAL_DMA_PollForTransfer||, CODE, READONLY, ALIGN=2

                  HAL_DMA_PollForTransfer PROC
;;;531      */
;;;532    HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, uint32_t CompleteLevel, uint32_t Timeout)
000000  b5f7              PUSH     {r0-r2,r4-r7,lr}
;;;533    {
000002  b082              SUB      sp,sp,#8
;;;534      uint32_t temp;
;;;535      uint32_t tickstart = 0U;
;;;536      
;;;537      /* Get the level transfer complete flag */
;;;538      if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
;;;539      {
;;;540        /* Transfer Complete flag */
;;;541        temp = __HAL_DMA_GET_TC_FLAG_INDEX(hdma);
000004  9903              LDR      r1,[sp,#0xc]
000006  4604              MOV      r4,r0                 ;533
000008  2900              CMP      r1,#0                 ;538
00000a  6800              LDR      r0,[r0,#0]
;;;542      }
;;;543      else
;;;544      {
;;;545        /* Half Transfer Complete flag */
;;;546        temp = __HAL_DMA_GET_HT_FLAG_INDEX(hdma);
00000c  4989              LDR      r1,|L8.564|
00000e  4616              MOV      r6,r2                 ;533
000010  d003              BEQ      |L8.26|
000012  4288              CMP      r0,r1
000014  d124              BNE      |L8.96|
000016  2704              MOVS     r7,#4
000018  e040              B        |L8.156|
                  |L8.26|
00001a  4288              CMP      r0,r1                 ;541
00001c  d101              BNE      |L8.34|
00001e  2702              MOVS     r7,#2                 ;541
000020  e03c              B        |L8.156|
                  |L8.34|
000022  4985              LDR      r1,|L8.568|
000024  4288              CMP      r0,r1                 ;541
000026  d101              BNE      |L8.44|
000028  2720              MOVS     r7,#0x20              ;541
00002a  e037              B        |L8.156|
                  |L8.44|
00002c  4983              LDR      r1,|L8.572|
00002e  4288              CMP      r0,r1                 ;541
000030  d101              BNE      |L8.54|
000032  1547              ASRS     r7,r0,#21             ;541
000034  e032              B        |L8.156|
                  |L8.54|
000036  4982              LDR      r1,|L8.576|
000038  4288              CMP      r0,r1                 ;541
00003a  d102              BNE      |L8.66|
00003c  2701              MOVS     r7,#1                 ;541
00003e  037f              LSLS     r7,r7,#13             ;541
000040  e02c              B        |L8.156|
                  |L8.66|
000042  4980              LDR      r1,|L8.580|
000044  4288              CMP      r0,r1                 ;541
000046  d102              BNE      |L8.78|
000048  2701              MOVS     r7,#1                 ;541
00004a  047f              LSLS     r7,r7,#17             ;541
00004c  e026              B        |L8.156|
                  |L8.78|
00004e  497e              LDR      r1,|L8.584|
000050  4288              CMP      r0,r1                 ;541
000052  d102              BNE      |L8.90|
000054  2701              MOVS     r7,#1                 ;541
000056  057f              LSLS     r7,r7,#21             ;541
000058  e020              B        |L8.156|
                  |L8.90|
00005a  2701              MOVS     r7,#1                 ;541
00005c  067f              LSLS     r7,r7,#25             ;541
00005e  e01d              B        |L8.156|
                  |L8.96|
000060  4975              LDR      r1,|L8.568|
000062  4288              CMP      r0,r1
000064  d101              BNE      |L8.106|
000066  2740              MOVS     r7,#0x40
000068  e018              B        |L8.156|
                  |L8.106|
00006a  4974              LDR      r1,|L8.572|
00006c  4288              CMP      r0,r1
00006e  d101              BNE      |L8.116|
000070  1507              ASRS     r7,r0,#20
000072  e013              B        |L8.156|
                  |L8.116|
000074  4972              LDR      r1,|L8.576|
000076  4288              CMP      r0,r1
000078  d102              BNE      |L8.128|
00007a  2701              MOVS     r7,#1
00007c  03bf              LSLS     r7,r7,#14
00007e  e00d              B        |L8.156|
                  |L8.128|
000080  4970              LDR      r1,|L8.580|
000082  4288              CMP      r0,r1
000084  d102              BNE      |L8.140|
000086  2701              MOVS     r7,#1
000088  04bf              LSLS     r7,r7,#18
00008a  e007              B        |L8.156|
                  |L8.140|
00008c  496e              LDR      r1,|L8.584|
00008e  4288              CMP      r0,r1
000090  d102              BNE      |L8.152|
000092  2701              MOVS     r7,#1
000094  05bf              LSLS     r7,r7,#22
000096  e001              B        |L8.156|
                  |L8.152|
000098  2701              MOVS     r7,#1
00009a  06bf              LSLS     r7,r7,#26
                  |L8.156|
;;;547      }
;;;548    
;;;549      /* Get timeout */
;;;550      tickstart = HAL_GetTick();
00009c  f7fffffe          BL       HAL_GetTick
;;;551    
;;;552      while(__HAL_DMA_GET_FLAG(hdma, temp) == RESET)
0000a0  4d6a              LDR      r5,|L8.588|
0000a2  9000              STR      r0,[sp,#0]
0000a4  6828              LDR      r0,[r5,#0]
0000a6  4238              TST      r0,r7
0000a8  d16d              BNE      |L8.390|
                  |L8.170|
;;;553      {
;;;554        if((__HAL_DMA_GET_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma)) != RESET))
0000aa  6829              LDR      r1,[r5,#0]
0000ac  4a61              LDR      r2,|L8.564|
0000ae  6820              LDR      r0,[r4,#0]
0000b0  4290              CMP      r0,r2
0000b2  d101              BNE      |L8.184|
0000b4  2208              MOVS     r2,#8
0000b6  e01d              B        |L8.244|
                  |L8.184|
0000b8  4a5f              LDR      r2,|L8.568|
0000ba  4290              CMP      r0,r2
0000bc  d101              BNE      |L8.194|
0000be  2280              MOVS     r2,#0x80
0000c0  e018              B        |L8.244|
                  |L8.194|
0000c2  4a5e              LDR      r2,|L8.572|
0000c4  4290              CMP      r0,r2
0000c6  d101              BNE      |L8.204|
0000c8  14c2              ASRS     r2,r0,#19
0000ca  e013              B        |L8.244|
                  |L8.204|
0000cc  4a5c              LDR      r2,|L8.576|
0000ce  4290              CMP      r0,r2
0000d0  d102              BNE      |L8.216|
0000d2  2201              MOVS     r2,#1
0000d4  03d2              LSLS     r2,r2,#15
0000d6  e00d              B        |L8.244|
                  |L8.216|
0000d8  4a5a              LDR      r2,|L8.580|
0000da  4290              CMP      r0,r2
0000dc  d102              BNE      |L8.228|
0000de  2201              MOVS     r2,#1
0000e0  04d2              LSLS     r2,r2,#19
0000e2  e007              B        |L8.244|
                  |L8.228|
0000e4  4a58              LDR      r2,|L8.584|
0000e6  4290              CMP      r0,r2
0000e8  d102              BNE      |L8.240|
0000ea  2201              MOVS     r2,#1
0000ec  05d2              LSLS     r2,r2,#23
0000ee  e001              B        |L8.244|
                  |L8.240|
0000f0  2201              MOVS     r2,#1
0000f2  06d2              LSLS     r2,r2,#27
                  |L8.244|
0000f4  4211              TST      r1,r2
0000f6  d02e              BEQ      |L8.342|
;;;555        {      
;;;556          /* Clear the transfer error flags */
;;;557          __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TE_FLAG_INDEX(hdma));
0000f8  494e              LDR      r1,|L8.564|
0000fa  4288              CMP      r0,r1
0000fc  d101              BNE      |L8.258|
0000fe  2008              MOVS     r0,#8
000100  e01d              B        |L8.318|
                  |L8.258|
000102  494d              LDR      r1,|L8.568|
000104  4288              CMP      r0,r1
000106  d101              BNE      |L8.268|
000108  2080              MOVS     r0,#0x80
00010a  e018              B        |L8.318|
                  |L8.268|
00010c  494b              LDR      r1,|L8.572|
00010e  4288              CMP      r0,r1
000110  d101              BNE      |L8.278|
000112  14c0              ASRS     r0,r0,#19
000114  e013              B        |L8.318|
                  |L8.278|
000116  494a              LDR      r1,|L8.576|
000118  4288              CMP      r0,r1
00011a  d102              BNE      |L8.290|
00011c  2001              MOVS     r0,#1
00011e  03c0              LSLS     r0,r0,#15
000120  e00d              B        |L8.318|
                  |L8.290|
000122  4948              LDR      r1,|L8.580|
000124  4288              CMP      r0,r1
000126  d102              BNE      |L8.302|
000128  2001              MOVS     r0,#1
00012a  04c0              LSLS     r0,r0,#19
00012c  e007              B        |L8.318|
                  |L8.302|
00012e  4946              LDR      r1,|L8.584|
000130  4288              CMP      r0,r1
000132  d102              BNE      |L8.314|
000134  2001              MOVS     r0,#1
000136  05c0              LSLS     r0,r0,#23
000138  e001              B        |L8.318|
                  |L8.314|
00013a  2001              MOVS     r0,#1
00013c  06c0              LSLS     r0,r0,#27
                  |L8.318|
00013e  6068              STR      r0,[r5,#4]
;;;558          
;;;559          /* Update error code */
;;;560          SET_BIT(hdma->ErrorCode, HAL_DMA_ERROR_TE);
000140  6c20              LDR      r0,[r4,#0x40]
000142  2101              MOVS     r1,#1
000144  4308              ORRS     r0,r0,r1
000146  6420              STR      r0,[r4,#0x40]
;;;561          
;;;562          /* Change the DMA state */
;;;563          hdma->State= HAL_DMA_STATE_ERROR;       
000148  2004              MOVS     r0,#4
00014a  62a0              STR      r0,[r4,#0x28]
;;;564          
;;;565          /* Process Unlocked */
;;;566          __HAL_UNLOCK(hdma);
00014c  2000              MOVS     r0,#0
;;;567          
;;;568          return HAL_ERROR;      
00014e  6260              STR      r0,[r4,#0x24]
000150  4608              MOV      r0,r1
;;;569        }      
;;;570        /* Check for the Timeout */
;;;571        if(Timeout != HAL_MAX_DELAY)
;;;572        {
;;;573          if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
;;;574          {
;;;575            /* Update error code */
;;;576            SET_BIT(hdma->ErrorCode, HAL_DMA_ERROR_TIMEOUT);
;;;577            
;;;578            /* Change the DMA state */
;;;579            hdma->State= HAL_DMA_STATE_TIMEOUT;
;;;580            
;;;581            /* Process Unlocked */
;;;582            __HAL_UNLOCK(hdma);
;;;583          
;;;584            return HAL_TIMEOUT;
;;;585          }
;;;586        }
;;;587      }
;;;588    
;;;589      if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
;;;590      {
;;;591        /* Clear the transfer complete flag */
;;;592        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_TC_FLAG_INDEX(hdma));
;;;593    
;;;594        /* The selected Channelx EN bit is cleared (DMA is disabled and 
;;;595        all transfers are complete) */
;;;596        hdma->State = HAL_DMA_STATE_READY;
;;;597    
;;;598        /* Process unlocked */
;;;599        __HAL_UNLOCK(hdma);  
;;;600      }
;;;601      else
;;;602      { 
;;;603        /* Clear the half transfer complete flag */
;;;604        __HAL_DMA_CLEAR_FLAG(hdma, __HAL_DMA_GET_HT_FLAG_INDEX(hdma));
;;;605    
;;;606        /* The selected Channelx EN bit is cleared (DMA is disabled and 
;;;607        all transfers are complete) */
;;;608        hdma->State = HAL_DMA_STATE_READY_HALF;
;;;609        
;;;610        /* Process unlocked */
;;;611        __HAL_UNLOCK(hdma); 
;;;612      }
;;;613      
;;;614      return HAL_OK;
;;;615    }
000152  b005              ADD      sp,sp,#0x14
000154  bdf0              POP      {r4-r7,pc}
                  |L8.342|
000156  1c70              ADDS     r0,r6,#1              ;571
000158  d012              BEQ      |L8.384|
00015a  2e00              CMP      r6,#0                 ;573
00015c  d005              BEQ      |L8.362|
00015e  f7fffffe          BL       HAL_GetTick
000162  9900              LDR      r1,[sp,#0]            ;573
000164  1a40              SUBS     r0,r0,r1              ;573
000166  42b0              CMP      r0,r6                 ;573
000168  d90a              BLS      |L8.384|
                  |L8.362|
00016a  6c20              LDR      r0,[r4,#0x40]         ;576
00016c  2120              MOVS     r1,#0x20              ;576
00016e  4308              ORRS     r0,r0,r1              ;576
000170  6420              STR      r0,[r4,#0x40]         ;576
000172  2003              MOVS     r0,#3                 ;579
000174  62a0              STR      r0,[r4,#0x28]         ;579
000176  2000              MOVS     r0,#0                 ;582
000178  6260              STR      r0,[r4,#0x24]         ;584
00017a  2003              MOVS     r0,#3                 ;584
00017c  b005              ADD      sp,sp,#0x14
00017e  bdf0              POP      {r4-r7,pc}
                  |L8.384|
000180  6828              LDR      r0,[r5,#0]            ;584
000182  4238              TST      r0,r7                 ;584
000184  d091              BEQ      |L8.170|
                  |L8.390|
000186  9803              LDR      r0,[sp,#0xc]          ;589
000188  492a              LDR      r1,|L8.564|
00018a  2800              CMP      r0,#0                 ;589
00018c  6820              LDR      r0,[r4,#0]            ;589
00018e  d003              BEQ      |L8.408|
000190  4288              CMP      r0,r1                 ;604
000192  d129              BNE      |L8.488|
000194  2004              MOVS     r0,#4                 ;604
000196  e045              B        |L8.548|
                  |L8.408|
000198  4288              CMP      r0,r1                 ;592
00019a  d101              BNE      |L8.416|
00019c  2002              MOVS     r0,#2                 ;592
00019e  e01d              B        |L8.476|
                  |L8.416|
0001a0  4925              LDR      r1,|L8.568|
0001a2  4288              CMP      r0,r1                 ;592
0001a4  d101              BNE      |L8.426|
0001a6  2020              MOVS     r0,#0x20              ;592
0001a8  e018              B        |L8.476|
                  |L8.426|
0001aa  4924              LDR      r1,|L8.572|
0001ac  4288              CMP      r0,r1                 ;592
0001ae  d101              BNE      |L8.436|
0001b0  1540              ASRS     r0,r0,#21             ;592
0001b2  e013              B        |L8.476|
                  |L8.436|
0001b4  4922              LDR      r1,|L8.576|
0001b6  4288              CMP      r0,r1                 ;592
0001b8  d102              BNE      |L8.448|
0001ba  2001              MOVS     r0,#1                 ;592
0001bc  0340              LSLS     r0,r0,#13             ;592
0001be  e00d              B        |L8.476|
                  |L8.448|
0001c0  4920              LDR      r1,|L8.580|
0001c2  4288              CMP      r0,r1                 ;592
0001c4  d102              BNE      |L8.460|
0001c6  2001              MOVS     r0,#1                 ;592
0001c8  0440              LSLS     r0,r0,#17             ;592
0001ca  e007              B        |L8.476|
                  |L8.460|
0001cc  491e              LDR      r1,|L8.584|
0001ce  4288              CMP      r0,r1                 ;592
0001d0  d102              BNE      |L8.472|
0001d2  2001              MOVS     r0,#1                 ;592
0001d4  0540              LSLS     r0,r0,#21             ;592
0001d6  e001              B        |L8.476|
                  |L8.472|
0001d8  2001              MOVS     r0,#1                 ;592
0001da  0640              LSLS     r0,r0,#25             ;592
                  |L8.476|
0001dc  6068              STR      r0,[r5,#4]            ;592
0001de  2001              MOVS     r0,#1                 ;596
0001e0  62a0              STR      r0,[r4,#0x28]         ;596
0001e2  2000              MOVS     r0,#0                 ;599
0001e4  6260              STR      r0,[r4,#0x24]         ;599
0001e6  e022              B        |L8.558|
                  |L8.488|
0001e8  4913              LDR      r1,|L8.568|
0001ea  4288              CMP      r0,r1                 ;604
0001ec  d101              BNE      |L8.498|
0001ee  2040              MOVS     r0,#0x40              ;604
0001f0  e018              B        |L8.548|
                  |L8.498|
0001f2  4912              LDR      r1,|L8.572|
0001f4  4288              CMP      r0,r1                 ;604
0001f6  d101              BNE      |L8.508|
0001f8  1500              ASRS     r0,r0,#20             ;604
0001fa  e013              B        |L8.548|
                  |L8.508|
0001fc  4910              LDR      r1,|L8.576|
0001fe  4288              CMP      r0,r1                 ;604
000200  d102              BNE      |L8.520|
000202  2001              MOVS     r0,#1                 ;604
000204  0380              LSLS     r0,r0,#14             ;604
000206  e00d              B        |L8.548|
                  |L8.520|
000208  490e              LDR      r1,|L8.580|
00020a  4288              CMP      r0,r1                 ;604
00020c  d102              BNE      |L8.532|
00020e  2001              MOVS     r0,#1                 ;604
000210  0480              LSLS     r0,r0,#18             ;604
000212  e007              B        |L8.548|
                  |L8.532|
000214  490c              LDR      r1,|L8.584|
000216  4288              CMP      r0,r1                 ;604
000218  d102              BNE      |L8.544|
00021a  2001              MOVS     r0,#1                 ;604
00021c  0580              LSLS     r0,r0,#22             ;604
00021e  e001              B        |L8.548|
                  |L8.544|
000220  2001              MOVS     r0,#1                 ;604
000222  0680              LSLS     r0,r0,#26             ;604
                  |L8.548|
000224  6068              STR      r0,[r5,#4]            ;604
000226  2005              MOVS     r0,#5                 ;608
000228  62a0              STR      r0,[r4,#0x28]         ;608
00022a  2000              MOVS     r0,#0                 ;611
00022c  6260              STR      r0,[r4,#0x24]         ;611
                  |L8.558|
00022e  2000              MOVS     r0,#0                 ;614
000230  b005              ADD      sp,sp,#0x14
000232  bdf0              POP      {r4-r7,pc}
;;;616    /**
                          ENDP

                  |L8.564|
                          DCD      0x40020008
                  |L8.568|
                          DCD      0x4002001c
                  |L8.572|
                          DCD      0x40020030
                  |L8.576|
                          DCD      0x40020044
                  |L8.580|
                          DCD      0x40020058
                  |L8.584|
                          DCD      0x4002006c
                  |L8.588|
                          DCD      0x40020000

                          AREA ||i.HAL_DMA_Start||, CODE, READONLY, ALIGN=1

                  HAL_DMA_Start PROC
;;;373      */
;;;374    HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
000000  b470              PUSH     {r4-r6}
;;;375    { 
;;;376      /* Process locked */
;;;377      __HAL_LOCK(hdma);  
000002  6a44              LDR      r4,[r0,#0x24]
000004  2c01              CMP      r4,#1
000006  d017              BEQ      |L9.56|
000008  2401              MOVS     r4,#1
;;;378    
;;;379      /* Change DMA peripheral state */  
;;;380      hdma->State = HAL_DMA_STATE_BUSY;  
00000a  2502              MOVS     r5,#2
00000c  6285              STR      r5,[r0,#0x28]
00000e  6244              STR      r4,[r0,#0x24]
;;;381    
;;;382       /* Check the parameters */
;;;383      assert_param(IS_DMA_BUFFER_SIZE(DataLength));
;;;384      
;;;385      /* Disable the peripheral */
;;;386      __HAL_DMA_DISABLE(hdma);  
000010  6805              LDR      r5,[r0,#0]
000012  682e              LDR      r6,[r5,#0]
000014  43a6              BICS     r6,r6,r4
000016  602e              STR      r6,[r5,#0]
000018  6805              LDR      r5,[r0,#0]
00001a  606b              STR      r3,[r5,#4]
00001c  6883              LDR      r3,[r0,#8]
00001e  2b10              CMP      r3,#0x10
000020  6803              LDR      r3,[r0,#0]            ;377
000022  d00c              BEQ      |L9.62|
000024  6099              STR      r1,[r3,#8]            ;377
000026  6801              LDR      r1,[r0,#0]            ;377
000028  60ca              STR      r2,[r1,#0xc]          ;377
                  |L9.42|
;;;387      
;;;388      /* Configure the source, destination address and the data length */
;;;389      DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
;;;390    
;;;391      /* Enable the Peripheral */
;;;392      __HAL_DMA_ENABLE(hdma);  
00002a  6800              LDR      r0,[r0,#0]
00002c  6801              LDR      r1,[r0,#0]
00002e  4321              ORRS     r1,r1,r4
000030  6001              STR      r1,[r0,#0]
;;;393    
;;;394      return HAL_OK; 
;;;395    } 
000032  bc70              POP      {r4-r6}
000034  2000              MOVS     r0,#0                 ;394
000036  4770              BX       lr
                  |L9.56|
000038  bc70              POP      {r4-r6}
00003a  2002              MOVS     r0,#2                 ;377
00003c  4770              BX       lr
                  |L9.62|
00003e  609a              STR      r2,[r3,#8]
000040  6802              LDR      r2,[r0,#0]
000042  60d1              STR      r1,[r2,#0xc]
000044  e7f1              B        |L9.42|
;;;396    
                          ENDP


                          AREA ||i.HAL_DMA_Start_IT||, CODE, READONLY, ALIGN=1

                  HAL_DMA_Start_IT PROC
;;;405      */
;;;406    HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
000000  b4f0              PUSH     {r4-r7}
;;;407    {
;;;408      /* Process locked */
;;;409      __HAL_LOCK(hdma);
000002  6a44              LDR      r4,[r0,#0x24]
000004  2c01              CMP      r4,#1
000006  d025              BEQ      |L10.84|
000008  2401              MOVS     r4,#1
;;;410    
;;;411      /* Change DMA peripheral state */  
;;;412      hdma->State = HAL_DMA_STATE_BUSY;  
00000a  2502              MOVS     r5,#2
00000c  6285              STR      r5,[r0,#0x28]
00000e  6244              STR      r4,[r0,#0x24]
;;;413    
;;;414       /* Check the parameters */
;;;415      assert_param(IS_DMA_BUFFER_SIZE(DataLength));
;;;416      
;;;417      /* Disable the peripheral */
;;;418      __HAL_DMA_DISABLE(hdma);
000010  6806              LDR      r6,[r0,#0]
000012  6837              LDR      r7,[r6,#0]
000014  43a7              BICS     r7,r7,r4
000016  6037              STR      r7,[r6,#0]
000018  6806              LDR      r6,[r0,#0]
00001a  6073              STR      r3,[r6,#4]
00001c  6883              LDR      r3,[r0,#8]
00001e  2b10              CMP      r3,#0x10
000020  6803              LDR      r3,[r0,#0]            ;409
000022  d01a              BEQ      |L10.90|
000024  6099              STR      r1,[r3,#8]            ;409
000026  6801              LDR      r1,[r0,#0]            ;409
000028  60ca              STR      r2,[r1,#0xc]          ;409
                  |L10.42|
;;;419      
;;;420      /* Configure the source, destination address and the data length */  
;;;421      DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
;;;422      
;;;423      /* Enable the transfer complete interrupt */
;;;424      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_TC);
00002a  6801              LDR      r1,[r0,#0]
00002c  680a              LDR      r2,[r1,#0]
00002e  432a              ORRS     r2,r2,r5
000030  600a              STR      r2,[r1,#0]
;;;425    
;;;426      /* Enable the Half transfer complete interrupt */
;;;427      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_HT);  
000032  6801              LDR      r1,[r0,#0]
000034  680a              LDR      r2,[r1,#0]
000036  2304              MOVS     r3,#4
000038  431a              ORRS     r2,r2,r3
00003a  600a              STR      r2,[r1,#0]
;;;428    
;;;429      /* Enable the transfer Error interrupt */
;;;430      __HAL_DMA_ENABLE_IT(hdma, DMA_IT_TE);
00003c  6801              LDR      r1,[r0,#0]
00003e  680a              LDR      r2,[r1,#0]
000040  2308              MOVS     r3,#8
000042  431a              ORRS     r2,r2,r3
000044  600a              STR      r2,[r1,#0]
;;;431      
;;;432       /* Enable the Peripheral */
;;;433      __HAL_DMA_ENABLE(hdma);   
000046  6800              LDR      r0,[r0,#0]
000048  6801              LDR      r1,[r0,#0]
00004a  4321              ORRS     r1,r1,r4
00004c  6001              STR      r1,[r0,#0]
;;;434      
;;;435      return HAL_OK;    
;;;436    } 
00004e  bcf0              POP      {r4-r7}
000050  2000              MOVS     r0,#0                 ;435
000052  4770              BX       lr
                  |L10.84|
000054  bcf0              POP      {r4-r7}
000056  2002              MOVS     r0,#2                 ;409
000058  4770              BX       lr
                  |L10.90|
00005a  609a              STR      r2,[r3,#8]
00005c  6802              LDR      r2,[r0,#0]
00005e  60d1              STR      r1,[r2,#0xc]
000060  e7e3              B        |L10.42|
;;;437    
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_L0_V1.10.0\\Drivers\\STM32L0xx_HAL_Driver\\Src\\stm32l0xx_hal_dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32l0xx_hal_dma_c_c25f65ec____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_L0_V1.10.0\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___19_stm32l0xx_hal_dma_c_c25f65ec____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32l0xx_hal_dma_c_c25f65ec____REVSH|
#line 402
|__asm___19_stm32l0xx_hal_dma_c_c25f65ec____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
