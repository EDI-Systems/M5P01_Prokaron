; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\platform_cmx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\platform_cmx.d --cpu=Cortex-M0+ --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\STM32L0xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\CMSIS\Device\ST\STM32L0xx\Include -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\CMSIS\Include -I..\..\..\M0P0_Library\STM32Cube_FW_L0_V1.10.0\Drivers\STM32L0xx_HAL_Driver\Inc\Conf -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32L053C8T6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32L0xx_DFP\2.0.0\Drivers\CMSIS\Device\ST\STM32L0xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32L053xx -DSTM32L0xx -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\platform_cmx.crf ..\..\MProkaron\Platform\CortexM\platform_cmx.c]
                          THUMB

                          AREA ||i.RMP_Putchar||, CODE, READONLY, ALIGN=2

                  RMP_Putchar PROC
;;;91     ******************************************************************************/
;;;92     void RMP_Putchar(char Char)
000000  4902              LDR      r1,|L1.12|
;;;93     {
;;;94         RMP_CMX_PUTCHAR(Char);
000002  6288              STR      r0,[r1,#0x28]
                  |L1.4|
000004  69c8              LDR      r0,[r1,#0x1c]
000006  0640              LSLS     r0,r0,#25
000008  d5fc              BPL      |L1.4|
;;;95     }
00000a  4770              BX       lr
;;;96     /* End Function:RMP_Putchar **************************************************/
                          ENDP

                  |L1.12|
                          DCD      0x40013800

                          AREA ||i._RMP_Low_Level_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Low_Level_Init PROC
;;;65     ******************************************************************************/
;;;66     void _RMP_Low_Level_Init(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;67     {   
000002  b0b9              SUB      sp,sp,#0xe4
;;;68         RMP_CMX_LOW_LEVEL_INIT();
000004  2138              MOVS     r1,#0x38
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       RMP_Clear
00000c  2114              MOVS     r1,#0x14
00000e  a80e              ADD      r0,sp,#0x38
000010  f7fffffe          BL       RMP_Clear
000014  2114              MOVS     r1,#0x14
000016  a813              ADD      r0,sp,#0x4c
000018  f7fffffe          BL       RMP_Clear
00001c  2178              MOVS     r1,#0x78
00001e  a81a              ADD      r0,sp,#0x68
000020  f7fffffe          BL       RMP_Clear
000024  4d3d              LDR      r5,|L2.284|
000026  6ba8              LDR      r0,[r5,#0x38]
000028  0429              LSLS     r1,r5,#16
00002a  4308              ORRS     r0,r0,r1
00002c  63a8              STR      r0,[r5,#0x38]
00002e  483c              LDR      r0,|L2.288|
000030  6801              LDR      r1,[r0,#0]
000032  2203              MOVS     r2,#3
000034  02d2              LSLS     r2,r2,#11
000036  4391              BICS     r1,r1,r2
000038  14c2              ASRS     r2,r0,#19
00003a  1889              ADDS     r1,r1,r2
00003c  6001              STR      r1,[r0,#0]
00003e  01d0              LSLS     r0,r2,#7
000040  2701              MOVS     r7,#1
000042  900c              STR      r0,[sp,#0x30]
000044  9703              STR      r7,[sp,#0xc]
000046  0100              LSLS     r0,r0,#4
000048  900d              STR      r0,[sp,#0x34]
00004a  2602              MOVS     r6,#2
00004c  2400              MOVS     r4,#0
00004e  2010              MOVS     r0,#0x10
000050  9600              STR      r6,[sp,#0]
000052  9401              STR      r4,[sp,#4]
000054  9004              STR      r0,[sp,#0x10]
000056  960a              STR      r6,[sp,#0x28]
000058  940b              STR      r4,[sp,#0x2c]
00005a  4668              MOV      r0,sp
00005c  f7fffffe          BL       HAL_RCC_OscConfig
000060  200f              MOVS     r0,#0xf
000062  900e              STR      r0,[sp,#0x38]
000064  2003              MOVS     r0,#3
000066  900f              STR      r0,[sp,#0x3c]
000068  9410              STR      r4,[sp,#0x40]
00006a  9411              STR      r4,[sp,#0x44]
00006c  2101              MOVS     r1,#1
00006e  9412              STR      r4,[sp,#0x48]
000070  a80e              ADD      r0,sp,#0x38
000072  f7fffffe          BL       HAL_RCC_ClockConfig
000076  6ae8              LDR      r0,[r5,#0x2c]
000078  4338              ORRS     r0,r0,r7
00007a  62e8              STR      r0,[r5,#0x2c]
00007c  6ae8              LDR      r0,[r5,#0x2c]
00007e  4038              ANDS     r0,r0,r7
000080  9018              STR      r0,[sp,#0x60]
000082  6b68              LDR      r0,[r5,#0x34]
000084  0371              LSLS     r1,r6,#13
000086  4308              ORRS     r0,r0,r1
000088  6368              STR      r0,[r5,#0x34]
00008a  1148              ASRS     r0,r1,#5
00008c  9013              STR      r0,[sp,#0x4c]
00008e  2003              MOVS     r0,#3
000090  9016              STR      r0,[sp,#0x58]
000092  2004              MOVS     r0,#4
000094  9017              STR      r0,[sp,#0x5c]
000096  2005              MOVS     r0,#5
000098  9715              STR      r7,[sp,#0x54]
00009a  9614              STR      r6,[sp,#0x50]
00009c  a913              ADD      r1,sp,#0x4c
00009e  0700              LSLS     r0,r0,#28
0000a0  f7fffffe          BL       HAL_GPIO_Init
0000a4  20e1              MOVS     r0,#0xe1
0000a6  0240              LSLS     r0,r0,#9
0000a8  9420              STR      r4,[sp,#0x80]
0000aa  4d1e              LDR      r5,|L2.292|
0000ac  901b              STR      r0,[sp,#0x6c]
0000ae  951a              STR      r5,[sp,#0x68]
0000b0  2008              MOVS     r0,#8
0000b2  901f              STR      r0,[sp,#0x7c]
0000b4  941c              STR      r4,[sp,#0x70]
0000b6  941d              STR      r4,[sp,#0x74]
0000b8  941e              STR      r4,[sp,#0x78]
0000ba  a81a              ADD      r0,sp,#0x68
0000bc  f7fffffe          BL       HAL_UART_Init
0000c0  200d              MOVS     r0,#0xd
0000c2  62a8              STR      r0,[r5,#0x28]
                  |L2.196|
0000c4  69e8              LDR      r0,[r5,#0x1c]
0000c6  0640              LSLS     r0,r0,#25
0000c8  d5fc              BPL      |L2.196|
0000ca  200a              MOVS     r0,#0xa
0000cc  62a8              STR      r0,[r5,#0x28]
                  |L2.206|
0000ce  69e8              LDR      r0,[r5,#0x1c]
0000d0  0640              LSLS     r0,r0,#25
0000d2  d5fc              BPL      |L2.206|
0000d4  4814              LDR      r0,|L2.296|
0000d6  69c1              LDR      r1,[r0,#0x1c]
0000d8  2203              MOVS     r2,#3
0000da  0209              LSLS     r1,r1,#8
0000dc  0a09              LSRS     r1,r1,#8
0000de  0792              LSLS     r2,r2,#30
0000e0  1889              ADDS     r1,r1,r2
0000e2  61c1              STR      r1,[r0,#0x1c]
0000e4  6a01              LDR      r1,[r0,#0x20]
0000e6  23ff              MOVS     r3,#0xff
0000e8  041b              LSLS     r3,r3,#16
0000ea  4399              BICS     r1,r1,r3
0000ec  0a13              LSRS     r3,r2,#8
0000ee  18c9              ADDS     r1,r1,r3
0000f0  6201              STR      r1,[r0,#0x20]
0000f2  6a01              LDR      r1,[r0,#0x20]
0000f4  0209              LSLS     r1,r1,#8
0000f6  0a09              LSRS     r1,r1,#8
0000f8  1889              ADDS     r1,r1,r2
0000fa  6201              STR      r1,[r0,#0x20]
0000fc  490c              LDR      r1,|L2.304|
0000fe  4b0b              LDR      r3,|L2.300|
000100  614b              STR      r3,[r1,#0x14]
000102  6a03              LDR      r3,[r0,#0x20]
000104  021b              LSLS     r3,r3,#8
000106  0a1b              LSRS     r3,r3,#8
000108  189a              ADDS     r2,r3,r2
00010a  6202              STR      r2,[r0,#0x20]
00010c  618c              STR      r4,[r1,#0x18]
00010e  2007              MOVS     r0,#7
000110  6108              STR      r0,[r1,#0x10]
;;;69         
;;;70         RMP_Disable_Int();
000112  f7fffffe          BL       RMP_Disable_Int
;;;71     }
000116  b039              ADD      sp,sp,#0xe4
000118  bdf0              POP      {r4-r7,pc}
;;;72     /* End Function:_RMP_Low_Level_Init ******************************************/
                          ENDP

00011a  0000              DCW      0x0000
                  |L2.284|
                          DCD      0x40021000
                  |L2.288|
                          DCD      0x40007000
                  |L2.292|
                          DCD      0x40013800
                  |L2.296|
                          DCD      0xe000ed00
                  |L2.300|
                          DCD      0x00000e0f
                  |L2.304|
                          DCD      0xe000e000

                          AREA ||i._RMP_Plat_Hook||, CODE, READONLY, ALIGN=1

                  _RMP_Plat_Hook PROC
;;;79     ******************************************************************************/
;;;80     void _RMP_Plat_Hook(void)
000000  b510              PUSH     {r4,lr}
;;;81     {
;;;82         RMP_Enable_Int();
000002  f7fffffe          BL       RMP_Enable_Int
;;;83     }
000006  bd10              POP      {r4,pc}
;;;84     /* End Function:_RMP_Plat_Hook ***********************************************/
                          ENDP


                          AREA ||i._RMP_Stack_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Stack_Init PROC
;;;45     ******************************************************************************/
;;;46     void _RMP_Stack_Init(ptr_t Entry, ptr_t Stack, ptr_t Arg)
000000  2302              MOVS     r3,#2
;;;47     {
;;;48         /* The "9" here is because we also pushed other registers to PSP */
;;;49         /* This is the LR value indicating that we never used the FPU */
;;;50         ((ptr_t*)Stack)[0+8]=0xFFFFFFFD;    
000002  43db              MVNS     r3,r3
;;;51         /* CM3:Pass the parameter */                            
;;;52         ((ptr_t*)Stack)[0+9]=Arg;       
;;;53         /* CM3:for xPSR. fill the T bit,or an INVSTATE will happen */
;;;54         ((ptr_t*)Stack)[6+9]=Entry;
;;;55         /* CM3:Set the process entrance */                            
;;;56         ((ptr_t*)Stack)[7+9]=0x01000200;      
000004  620b              STR      r3,[r1,#0x20]
000006  624a              STR      r2,[r1,#0x24]
000008  63c8              STR      r0,[r1,#0x3c]
00000a  4801              LDR      r0,|L4.16|
00000c  6408              STR      r0,[r1,#0x40]
;;;57     }
00000e  4770              BX       lr
;;;58     /* End Function:_RMP_Stack_Init **********************************************/
                          ENDP

                  |L4.16|
                          DCD      0x01000200

;*** Start embedded assembler ***

#line 1 "..\\..\\MProkaron\\Platform\\CortexM\\platform_cmx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32Cube_FW_L0_V1.10.0\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___14_platform_cmx_c_203ac359____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____REVSH|
#line 402
|__asm___14_platform_cmx_c_203ac359____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
