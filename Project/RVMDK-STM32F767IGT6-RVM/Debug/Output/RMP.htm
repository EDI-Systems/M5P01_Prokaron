<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Debug\Output\RMP.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Debug\Output\RMP.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Sat Feb 10 20:22:02 2018
<BR><P>
<H3>Maximum Stack Usage =         56 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
RMP_Init &rArr; RMP_Init_Hook &rArr; RMP_Thd_Crt &rArr; RMP_Unlock_Sched
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[5]">_RMP_Entry</a>
 <LI><a href="#[6]">RMP_MSB_Get</a>
 <LI><a href="#[7]">_RMP_Hypercall</a>
 <LI><a href="#[8]">_RMP_Yield</a>
 <LI><a href="#[9]">_RMP_Start</a>
 <LI><a href="#[a]">PendSV_Handler</a>
 <LI><a href="#[b]">SysTick_Handler</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">RMP_Init</a> from kernel.o(i.RMP_Init) referenced from kernel.o(i.main)
 <LI><a href="#[2]">Test_Func_1</a> from test.o(i.Test_Func_1) referenced from test.o(i.RMP_Init_Hook)
 <LI><a href="#[3]">Test_Func_2</a> from test.o(i.Test_Func_2) referenced from test.o(i.RMP_Init_Hook)
 <LI><a href="#[5]">_RMP_Entry</a> from platform_cmx_rvm_asm.o(RESET) referenced from test.o(.constdata)
 <LI><a href="#[0]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from platform_cmx_rvm_asm.o(RESET)
 <LI><a href="#[1]">main</a> from kernel.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5]"></a>_RMP_Entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, platform_cmx_rvm_asm.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> test.o(.constdata)
</UL>
<P><STRONG><a name="[6]"></a>RMP_MSB_Get</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, platform_cmx_rvm_asm.o(RESET), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Get_High_Rdy
</UL>

<P><STRONG><a name="[7]"></a>_RMP_Hypercall</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, platform_cmx_rvm_asm.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[8]"></a>_RMP_Yield</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, platform_cmx_rvm_asm.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Tick_Handler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
</UL>

<P><STRONG><a name="[9]"></a>_RMP_Start</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, platform_cmx_rvm_asm.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, platform_cmx_rvm_asm.o(RESET), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = PendSV_Handler &rArr; _RMP_Get_High_Rdy &rArr; _RMP_Timer_Proc
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Get_High_Rdy
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Save_Ctx
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Load_Ctx
</UL>

<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, platform_cmx_rvm_asm.o(RESET), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = SysTick_Handler &rArr; _RMP_Tick_Handler &rArr; _RMP_Timer_Proc
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Tick_Handler
</UL>

<P><STRONG><a name="[0]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> platform_cmx_rvm_asm.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[10]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[12]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[26]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[27]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[28]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[29]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[2a]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[11]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>RMP_Clear</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, kernel.o(i.RMP_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RMP_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>RMP_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kernel.o(i.RMP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = RMP_Init &rArr; RMP_Init_Hook &rArr; RMP_Thd_Crt &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init_Idle
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init_Hook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kernel.o(i.main)
</UL>
<P><STRONG><a name="[13]"></a>RMP_Init_Hook</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, test.o(i.RMP_Init_Hook))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = RMP_Init_Hook &rArr; RMP_Thd_Crt &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init
</UL>

<P><STRONG><a name="[14]"></a>RMP_Init_Idle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, test.o(i.RMP_Init_Idle))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init
</UL>

<P><STRONG><a name="[19]"></a>RMP_List_Crt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kernel.o(i.RMP_List_Crt))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
</UL>

<P><STRONG><a name="[1f]"></a>RMP_List_Del</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kernel.o(i.RMP_List_Del))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Get_High_Rdy
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Timer_Proc
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Clr_Rdy
</UL>

<P><STRONG><a name="[21]"></a>RMP_List_Ins</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kernel.o(i.RMP_List_Ins))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Get_High_Rdy
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Timer_Proc
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Dly_Ins
</UL>

<P><STRONG><a name="[e]"></a>RMP_Load_Ctx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kernel.o(i.RMP_Load_Ctx), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[16]"></a>RMP_Lock_Sched</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kernel.o(i.RMP_Lock_Sched))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Delay
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
</UL>

<P><STRONG><a name="[c]"></a>RMP_Save_Ctx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kernel.o(i.RMP_Save_Ctx), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[15]"></a>RMP_Thd_Crt</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, kernel.o(i.RMP_Thd_Crt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = RMP_Thd_Crt &rArr; RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Stack_Init
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Lock_Sched
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Crt
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Init_Hook
</UL>

<P><STRONG><a name="[1b]"></a>RMP_Thd_Delay</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, kernel.o(i.RMP_Thd_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = RMP_Thd_Delay &rArr; _RMP_Dly_Ins
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Lock_Sched
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Dly_Ins
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Clr_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Func_2
</UL>

<P><STRONG><a name="[1e]"></a>RMP_Thd_Rcv</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, kernel.o(i.RMP_Thd_Rcv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = RMP_Thd_Rcv &rArr; _RMP_Dly_Ins
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Lock_Sched
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Del
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Dly_Ins
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Clr_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Func_1
</UL>

<P><STRONG><a name="[20]"></a>RMP_Thd_Snd</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, kernel.o(i.RMP_Thd_Snd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = RMP_Thd_Snd &rArr; _RMP_Dly_Ins
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Unlock_Sched
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Lock_Sched
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Ins
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Del
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Set_Rdy
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Dly_Ins
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Clr_Rdy
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Func_2
</UL>

<P><STRONG><a name="[17]"></a>RMP_Unlock_Sched</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, kernel.o(i.RMP_Unlock_Sched))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = RMP_Unlock_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Yield
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Delay
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
</UL>

<P><STRONG><a name="[2]"></a>Test_Func_1</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, test.o(i.Test_Func_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = Test_Func_1 &rArr; RMP_Thd_Rcv &rArr; _RMP_Dly_Ins
</UL>
<BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test.o(i.RMP_Init_Hook)
</UL>
<P><STRONG><a name="[3]"></a>Test_Func_2</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, test.o(i.Test_Func_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Test_Func_2 &rArr; RMP_Thd_Snd &rArr; _RMP_Dly_Ins
</UL>
<BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test.o(i.RMP_Init_Hook)
</UL>
<P><STRONG><a name="[d]"></a>_RMP_Get_High_Rdy</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, kernel.o(i._RMP_Get_High_Rdy), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _RMP_Get_High_Rdy &rArr; _RMP_Timer_Proc
</UL>
<BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_MSB_Get
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Ins
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Del
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Timer_Proc
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[23]"></a>_RMP_Low_Level_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, platform_cmx_rvm.o(i._RMP_Low_Level_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18]"></a>_RMP_Stack_Init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, platform_cmx_rvm.o(i._RMP_Stack_Init))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
</UL>

<P><STRONG><a name="[f]"></a>_RMP_Tick_Handler</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, kernel.o(i._RMP_Tick_Handler), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = _RMP_Tick_Handler &rArr; _RMP_Timer_Proc
</UL>
<BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Yield
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Timer_Proc
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1]"></a>main</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, kernel.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = main &rArr; RMP_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Start
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Low_Level_Init
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Ins
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Crt
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1c]"></a>_RMP_Clr_Rdy</STRONG> (Thumb, 70 bytes, Stack size 4 bytes, kernel.o(i._RMP_Clr_Rdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _RMP_Clr_Rdy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Del
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Delay
</UL>

<P><STRONG><a name="[1d]"></a>_RMP_Dly_Ins</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, kernel.o(i._RMP_Dly_Ins))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _RMP_Dly_Ins
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Ins
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Delay
</UL>

<P><STRONG><a name="[1a]"></a>_RMP_Set_Rdy</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, kernel.o(i._RMP_Set_Rdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RMP_Set_Rdy
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Ins
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Snd
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Rcv
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_Thd_Crt
</UL>

<P><STRONG><a name="[22]"></a>_RMP_Timer_Proc</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, kernel.o(i._RMP_Timer_Proc), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RMP_Timer_Proc
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Ins
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMP_List_Del
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Tick_Handler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RMP_Get_High_Rdy
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
