; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\system_stm32f7xx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\system_stm32f7xx.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32F7xx_HAL_Driver\Core -I..\..\..\M0P0_Library\STM32F7xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32F7xx_HAL_Driver\Inc\Conf -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F767IGT6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\system_stm32f7xx.crf ..\..\..\M0P0_Library\STM32F7xx_HAL_Driver\Core\system_stm32f7xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;220      */
;;;221    void SystemCoreClockUpdate(void)
000000  f8dfc078          LDR      r12,|L1.124|
;;;222    {
000004  b430              PUSH     {r4,r5}
;;;223      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
;;;224      
;;;225      /* Get SYSCLK source -------------------------------------------------------*/
;;;226      tmp = RCC->CFGR & RCC_CFGR_SWS;
;;;227    
;;;228      switch (tmp)
;;;229      {
;;;230        case 0x00:  /* HSI used as system clock source */
;;;231          SystemCoreClock = HSI_VALUE;
000006  4a1e              LDR      r2,|L1.128|
000008  481e              LDR      r0,|L1.132|
00000a  f8dc1000          LDR      r1,[r12,#0]           ;226
00000e  f011010c          ANDS     r1,r1,#0xc            ;226
000012  d006              BEQ      |L1.34|
;;;232          break;
;;;233        case 0x04:  /* HSE used as system clock source */
;;;234          SystemCoreClock = HSE_VALUE;
000014  4c1c              LDR      r4,|L1.136|
000016  2904              CMP      r1,#4                 ;228
000018  bf08              IT       EQ
00001a  6004              STREQ    r4,[r0,#0]  ; SystemCoreClock
00001c  d022              BEQ      |L1.100|
00001e  2908              CMP      r1,#8                 ;228
000020  d001              BEQ      |L1.38|
                  |L1.34|
000022  6002              STR      r2,[r0,#0]            ;232  ; SystemCoreClock
000024  e01e              B        |L1.100|
                  |L1.38|
;;;235          break;
;;;236        case 0x08:  /* PLL used as system clock source */
;;;237    
;;;238          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;239             SYSCLK = PLL_VCO / PLL_P
;;;240             */    
;;;241          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
000026  4919              LDR      r1,|L1.140|
000028  680d              LDR      r5,[r1,#0]
;;;242          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
00002a  680b              LDR      r3,[r1,#0]
00002c  f003033f          AND      r3,r3,#0x3f
000030  f3c55580          UBFX     r5,r5,#22,#1          ;241
;;;243          
;;;244          if (pllsource != 0)
000034  b13d              CBZ      r5,|L1.70|
;;;245          {
;;;246            /* HSE used as PLL clock source */
;;;247            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
000036  680a              LDR      r2,[r1,#0]
000038  fbb4f3f3          UDIV     r3,r4,r3
00003c  f3c21288          UBFX     r2,r2,#6,#9
000040  fb03f202          MUL      r2,r3,r2
000044  e006              B        |L1.84|
                  |L1.70|
;;;248          }
;;;249          else
;;;250          {
;;;251            /* HSI used as PLL clock source */
;;;252            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
000046  680c              LDR      r4,[r1,#0]
000048  fbb2f2f3          UDIV     r2,r2,r3
00004c  f3c41388          UBFX     r3,r4,#6,#9
000050  fb02f203          MUL      r2,r2,r3
                  |L1.84|
;;;253          }
;;;254    
;;;255          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
000054  6809              LDR      r1,[r1,#0]
000056  f3c14101          UBFX     r1,r1,#16,#2
00005a  1c49              ADDS     r1,r1,#1
00005c  0049              LSLS     r1,r1,#1
;;;256          SystemCoreClock = pllvco/pllp;
00005e  fbb2f1f1          UDIV     r1,r2,r1
000062  6001              STR      r1,[r0,#0]  ; SystemCoreClock
                  |L1.100|
;;;257          break;
;;;258        default:
;;;259          SystemCoreClock = HSI_VALUE;
;;;260          break;
;;;261      }
;;;262      /* Compute HCLK frequency --------------------------------------------------*/
;;;263      /* Get HCLK prescaler */
;;;264      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000064  f8dc1000          LDR      r1,[r12,#0]
000068  4b09              LDR      r3,|L1.144|
;;;265      /* HCLK frequency */
;;;266      SystemCoreClock >>= tmp;
00006a  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
00006c  f3c11103          UBFX     r1,r1,#4,#4           ;264
000070  5c59              LDRB     r1,[r3,r1]            ;264
000072  fa22f101          LSR      r1,r2,r1
000076  6001              STR      r1,[r0,#0]  ; SystemCoreClock
;;;267    }
000078  bc30              POP      {r4,r5}
00007a  4770              BX       lr
;;;268    
                          ENDP

                  |L1.124|
                          DCD      0x40023808
                  |L1.128|
                          DCD      0x00f42400
                  |L1.132|
                          DCD      ||.data||
                  |L1.136|
                          DCD      0x017d7840
                  |L1.140|
                          DCD      0x40023804
                  |L1.144|
                          DCD      ||.constdata||

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;151      */
;;;152    void SystemInit(void)
000000  4a12              LDR      r2,|L2.76|
;;;153    {
000002  b430              PUSH     {r4,r5}
;;;154      /* FPU settings ------------------------------------------------------------*/
;;;155      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;156        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
;;;157      #endif
;;;158      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;159      /* Set HSION bit */
;;;160      RCC->CR |= (uint32_t)0x00000001;
000004  4812              LDR      r0,|L2.80|
000006  6813              LDR      r3,[r2,#0]            ;156
;;;161    
;;;162      /* Reset CFGR register */
;;;163      RCC->CFGR = 0x00000000;
000008  2100              MOVS     r1,#0
00000a  f8dfc048          LDR      r12,|L2.84|
00000e  f4430370          ORR      r3,r3,#0xf00000       ;156
000012  6013              STR      r3,[r2,#0]            ;156
000014  6804              LDR      r4,[r0,#0]            ;160
;;;164    
;;;165      /* Reset HSEON, CSSON and PLLON bits */
;;;166      RCC->CR &= (uint32_t)0xFEF6FFFF;
;;;167    
;;;168      /* Reset PLLCFGR register */
;;;169      RCC->PLLCFGR = 0x24003010;
000016  1d03              ADDS     r3,r0,#4
000018  4a0f              LDR      r2,|L2.88|
00001a  f0440401          ORR      r4,r4,#1              ;160
00001e  6004              STR      r4,[r0,#0]            ;160
000020  f8cc1000          STR      r1,[r12,#0]           ;163
000024  6804              LDR      r4,[r0,#0]            ;166
;;;170    
;;;171      /* Reset HSEBYP bit */
;;;172      RCC->CR &= (uint32_t)0xFFFBFFFF;
;;;173    
;;;174      /* Disable all interrupts */
;;;175      RCC->CIR = 0x00000000;
000026  f10c0c04          ADD      r12,r12,#4
00002a  f4242510          BIC      r5,r4,#0x90000        ;166
;;;176    
;;;177      /* Configure the Vector Table location add offset address ------------------*/
;;;178    #ifdef VECT_TAB_SRAM
;;;179      SCB->VTOR = RAMDTCM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;180    #else
;;;181      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
00002e  05d4              LSLS     r4,r2,#23
000030  f0257580          BIC      r5,r5,#0x1000000      ;166
000034  6005              STR      r5,[r0,#0]            ;166
000036  601a              STR      r2,[r3,#0]            ;169
000038  6803              LDR      r3,[r0,#0]            ;172
00003a  4a08              LDR      r2,|L2.92|
00003c  f4232380          BIC      r3,r3,#0x40000        ;172
000040  6003              STR      r3,[r0,#0]            ;172
000042  f8cc1000          STR      r1,[r12,#0]           ;175
000046  6014              STR      r4,[r2,#0]
;;;182    #endif
;;;183    }
000048  bc30              POP      {r4,r5}
00004a  4770              BX       lr
;;;184    
                          ENDP

                  |L2.76|
                          DCD      0xe000ed88
                  |L2.80|
                          DCD      0x40023800
                  |L2.84|
                          DCD      0x40023808
                  |L2.88|
                          DCD      0x24003010
                  |L2.92|
                          DCD      0xe000ed08

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09

                          AREA ||area_number.6||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.6||, ||.constdata||
                  APBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  01020304          DCB      0x01,0x02,0x03,0x04

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00f42400

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\STM32F7xx_HAL_Driver\\Core\\system_stm32f7xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f7xx_c_5d646a67____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32F7xx_HAL_Driver\\Core\\cmsis_armcc.h"
|__asm___18_system_stm32f7xx_c_5d646a67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f7xx_c_5d646a67____REVSH|
#line 402
|__asm___18_system_stm32f7xx_c_5d646a67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f7xx_c_5d646a67____RRX|
#line 587
|__asm___18_system_stm32f7xx_c_5d646a67____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
