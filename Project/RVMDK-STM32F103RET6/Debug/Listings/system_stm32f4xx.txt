; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\debug\output\system_stm32f4xx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\system_stm32f4xx.d --cpu=Cortex-M4.fp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32F4xx_StdPeriph_Driver\inc -I..\..\..\M0P0_Library\STM32F4xx_StdPeriph_Driver\CMSIS\ST\STM32F4xx\Include -I..\..\..\M0P0_Library\STM32F4xx_StdPeriph_Driver\CMSIS\Include -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F405RGT6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F405xx -DSTM32F4XX -DUSE_STDPERIPH_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\system_stm32f4xx.crf ..\..\..\M0P0_Library\STM32F4xx_StdPeriph_Driver\CMSIS\ST\STM32F4xx\Source\Templates\system_stm32f4xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;285      */
;;;286    void SystemCoreClockUpdate(void)
000000  f8dfc06c          LDR      r12,|L1.112|
;;;287    {
000004  b430              PUSH     {r4,r5}
;;;288      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
;;;289      
;;;290      /* Get SYSCLK source -------------------------------------------------------*/
;;;291      tmp = RCC->CFGR & RCC_CFGR_SWS;
000006  f8dc0000          LDR      r0,[r12,#0]
;;;292    
;;;293      switch (tmp)
;;;294      {
;;;295        case 0x00:  /* HSI used as system clock source */
;;;296          SystemCoreClock = HSI_VALUE;
00000a  4b1a              LDR      r3,|L1.116|
00000c  f010010c          ANDS     r1,r0,#0xc            ;291
000010  4819              LDR      r0,|L1.120|
000012  d006              BEQ      |L1.34|
;;;297          break;
;;;298        case 0x04:  /* HSE used as system clock source */
;;;299          SystemCoreClock = HSE_VALUE;
000014  4c19              LDR      r4,|L1.124|
000016  2904              CMP      r1,#4                 ;293
000018  bf08              IT       EQ
00001a  6004              STREQ    r4,[r0,#0]  ; SystemCoreClock
00001c  d002              BEQ      |L1.36|
00001e  2908              CMP      r1,#8                 ;293
000020  d00c              BEQ      |L1.60|
                  |L1.34|
000022  6003              STR      r3,[r0,#0]            ;296  ; SystemCoreClock
                  |L1.36|
;;;300          break;
;;;301        case 0x08:  /* PLL used as system clock source */
;;;302    
;;;303          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;304             SYSCLK = PLL_VCO / PLL_P
;;;305             */    
;;;306          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
;;;307          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
;;;308          
;;;309          if (pllsource != 0)
;;;310          {
;;;311            /* HSE used as PLL clock source */
;;;312            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
;;;313          }
;;;314          else
;;;315          {
;;;316            /* HSI used as PLL clock source */
;;;317            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
;;;318          }
;;;319    
;;;320          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
;;;321          SystemCoreClock = pllvco/pllp;
;;;322          break;
;;;323        default:
;;;324          SystemCoreClock = HSI_VALUE;
;;;325          break;
;;;326      }
;;;327      /* Compute HCLK frequency --------------------------------------------------*/
;;;328      /* Get HCLK prescaler */
;;;329      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000024  f8dc1000          LDR      r1,[r12,#0]
000028  4a15              LDR      r2,|L1.128|
00002a  f3c11103          UBFX     r1,r1,#4,#4
00002e  5c51              LDRB     r1,[r2,r1]
;;;330      /* HCLK frequency */
;;;331      SystemCoreClock >>= tmp;
000030  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
000032  fa22f101          LSR      r1,r2,r1
;;;332    }
000036  6001              STR      r1,[r0,#0]  ; SystemCoreClock
000038  bc30              POP      {r4,r5}
00003a  4770              BX       lr
                  |L1.60|
00003c  4911              LDR      r1,|L1.132|
00003e  680a              LDR      r2,[r1,#0]            ;306
000040  f3c25580          UBFX     r5,r2,#22,#1          ;306
000044  680a              LDR      r2,[r1,#0]            ;307
000046  2d00              CMP      r5,#0                 ;309
000048  f002023f          AND      r2,r2,#0x3f           ;307
00004c  bf14              ITE      NE                    ;312
00004e  fbb4f2f2          UDIVNE   r2,r4,r2              ;312
000052  fbb3f2f2          UDIVEQ   r2,r3,r2              ;317
000056  680b              LDR      r3,[r1,#0]            ;317
000058  6809              LDR      r1,[r1,#0]            ;320
00005a  f3c31388          UBFX     r3,r3,#6,#9           ;317
00005e  435a              MULS     r2,r3,r2              ;317
000060  f3c14101          UBFX     r1,r1,#16,#2          ;320
000064  1c49              ADDS     r1,r1,#1              ;320
000066  0049              LSLS     r1,r1,#1              ;320
000068  fbb2f1f1          UDIV     r1,r2,r1              ;321
00006c  6001              STR      r1,[r0,#0]            ;309  ; SystemCoreClock
00006e  e7d9              B        |L1.36|
;;;333    
                          ENDP

                  |L1.112|
                          DCD      0x40023808
                  |L1.116|
                          DCD      0x00f42400
                  |L1.120|
                          DCD      ||.data||
                  |L1.124|
                          DCD      0x017d7840
                  |L1.128|
                          DCD      ||.data||+0x4
                  |L1.132|
                          DCD      0x40023804

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;207      */
;;;208    void SystemInit(void)
000000  4837              LDR      r0,|L2.224|
;;;209    {
000002  b082              SUB      sp,sp,#8
;;;210      /* FPU settings ------------------------------------------------------------*/
;;;211      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;212        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
000004  6801              LDR      r1,[r0,#0]
000006  f4410170          ORR      r1,r1,#0xf00000
00000a  6001              STR      r1,[r0,#0]
;;;213      #endif
;;;214    
;;;215      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;216      /* Set HSION bit */
;;;217      RCC->CR |= (uint32_t)0x00000001;
00000c  4835              LDR      r0,|L2.228|
00000e  6801              LDR      r1,[r0,#0]
000010  f0410101          ORR      r1,r1,#1
000014  6001              STR      r1,[r0,#0]
;;;218    
;;;219      /* Reset CFGR register */
;;;220      RCC->CFGR = 0x00000000;
000016  4934              LDR      r1,|L2.232|
000018  2300              MOVS     r3,#0
00001a  600b              STR      r3,[r1,#0]
;;;221    
;;;222      /* Reset HSEON, CSSON and PLLON bits */
;;;223      RCC->CR &= (uint32_t)0xFEF6FFFF;
00001c  6802              LDR      r2,[r0,#0]
00001e  f4222210          BIC      r2,r2,#0x90000
000022  f0227280          BIC      r2,r2,#0x1000000
000026  6002              STR      r2,[r0,#0]
;;;224    
;;;225      /* Reset PLLCFGR register */
;;;226      RCC->PLLCFGR = 0x24003010;
000028  f1000c04          ADD      r12,r0,#4
00002c  4a2f              LDR      r2,|L2.236|
00002e  f8cc2000          STR      r2,[r12,#0]
;;;227    
;;;228      /* Reset HSEBYP bit */
;;;229      RCC->CR &= (uint32_t)0xFFFBFFFF;
000032  6802              LDR      r2,[r0,#0]
000034  f4222280          BIC      r2,r2,#0x40000
000038  6002              STR      r2,[r0,#0]
;;;230    
;;;231      /* Disable all interrupts */
;;;232      RCC->CIR = 0x00000000;
00003a  1d0a              ADDS     r2,r1,#4
00003c  6013              STR      r3,[r2,#0]
00003e  9301              STR      r3,[sp,#4]
000040  9300              STR      r3,[sp,#0]
000042  6802              LDR      r2,[r0,#0]
000044  f4423280          ORR      r2,r2,#0x10000
000048  6002              STR      r2,[r0,#0]
                  |L2.74|
00004a  6802              LDR      r2,[r0,#0]
00004c  f4023200          AND      r2,r2,#0x20000
000050  9200              STR      r2,[sp,#0]
000052  9a01              LDR      r2,[sp,#4]
000054  1c52              ADDS     r2,r2,#1
000056  9201              STR      r2,[sp,#4]
000058  9a00              LDR      r2,[sp,#0]
00005a  b91a              CBNZ     r2,|L2.100|
00005c  9a01              LDR      r2,[sp,#4]
00005e  f5b26fa0          CMP      r2,#0x500
000062  d1f2              BNE      |L2.74|
                  |L2.100|
000064  6802              LDR      r2,[r0,#0]
000066  f4123f00          TST      r2,#0x20000
00006a  bf08              IT       EQ
00006c  9300              STREQ    r3,[sp,#0]
00006e  d031              BEQ      |L2.212|
000070  2201              MOVS     r2,#1
000072  9200              STR      r2,[sp,#0]
000074  4a1e              LDR      r2,|L2.240|
000076  6813              LDR      r3,[r2,#0]
000078  f0435380          ORR      r3,r3,#0x10000000
00007c  6013              STR      r3,[r2,#0]
00007e  4a1d              LDR      r2,|L2.244|
000080  6813              LDR      r3,[r2,#0]
000082  f4434380          ORR      r3,r3,#0x4000
000086  6013              STR      r3,[r2,#0]
000088  680a              LDR      r2,[r1,#0]
00008a  600a              STR      r2,[r1,#0]
00008c  680a              LDR      r2,[r1,#0]
00008e  f4424200          ORR      r2,r2,#0x8000
000092  600a              STR      r2,[r1,#0]
000094  680a              LDR      r2,[r1,#0]
000096  f44252a0          ORR      r2,r2,#0x1400
00009a  600a              STR      r2,[r1,#0]
00009c  4a16              LDR      r2,|L2.248|
00009e  f8cc2000          STR      r2,[r12,#0]
0000a2  6802              LDR      r2,[r0,#0]
0000a4  f0427280          ORR      r2,r2,#0x1000000
0000a8  6002              STR      r2,[r0,#0]
                  |L2.170|
0000aa  6802              LDR      r2,[r0,#0]
0000ac  f0127f00          TST      r2,#0x2000000
0000b0  d0fb              BEQ      |L2.170|
0000b2  4a12              LDR      r2,|L2.252|
0000b4  f2406005          MOV      r0,#0x605
0000b8  6010              STR      r0,[r2,#0]
0000ba  6808              LDR      r0,[r1,#0]
0000bc  f0200003          BIC      r0,r0,#3
0000c0  6008              STR      r0,[r1,#0]
0000c2  6808              LDR      r0,[r1,#0]
0000c4  f0400002          ORR      r0,r0,#2
0000c8  6008              STR      r0,[r1,#0]
                  |L2.202|
0000ca  6808              LDR      r0,[r1,#0]
0000cc  f000000c          AND      r0,r0,#0xc
0000d0  2808              CMP      r0,#8
0000d2  d1fa              BNE      |L2.202|
                  |L2.212|
;;;233    
;;;234    #ifdef DATA_IN_ExtSRAM
;;;235      SystemInit_ExtMemCtl(); 
;;;236    #endif /* DATA_IN_ExtSRAM */
;;;237             
;;;238      /* Configure the System clock source, PLL Multiplier and Divider factors, 
;;;239         AHB/APBx prescalers and Flash settings ----------------------------------*/
;;;240      SetSysClock();
;;;241    
;;;242      /* Configure the Vector Table location add offset address ------------------*/
;;;243    #ifdef VECT_TAB_SRAM
;;;244      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;245    #else
;;;246      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
0000d4  490a              LDR      r1,|L2.256|
0000d6  f04f6000          MOV      r0,#0x8000000
0000da  6008              STR      r0,[r1,#0]
;;;247    #endif
;;;248    }
0000dc  b002              ADD      sp,sp,#8
0000de  4770              BX       lr
;;;249    
                          ENDP

                  |L2.224|
                          DCD      0xe000ed88
                  |L2.228|
                          DCD      0x40023800
                  |L2.232|
                          DCD      0x40023808
                  |L2.236|
                          DCD      0x24003010
                  |L2.240|
                          DCD      0x40023840
                  |L2.244|
                          DCD      0x40007000
                  |L2.248|
                          DCD      0x07405419
                  |L2.252|
                          DCD      0x40023c00
                  |L2.256|
                          DCD      0xe000ed08

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x0a037a00
                  AHBPrescTable
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  01020304          DCB      0x01,0x02,0x03,0x04
000010  06070809          DCB      0x06,0x07,0x08,0x09

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\STM32F4xx_StdPeriph_Driver\\CMSIS\\ST\\STM32F4xx\\Source\\Templates\\system_stm32f4xx.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REV16|
#line 114 "..\\..\\..\\M0P0_Library\\STM32F4xx_StdPeriph_Driver\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_system_stm32f4xx_c_5d646a67____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REVSH|
#line 128
|__asm___18_system_stm32f4xx_c_5d646a67____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
