; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\system_stm32f10x.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\system_stm32f10x.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32F10x_StdPeriph_Lib_V3.3.0\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\M0P0_Library\STM32F10x_StdPeriph_Lib_V3.3.0\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\M0P0_Library\STM32F10x_StdPeriph_Lib_V3.3.0\Libraries\CMSIS -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F103RET6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --enum_is_int --signed_chars --omf_browse=.\debug\output\system_stm32f10x.crf ..\..\..\M0P0_Library\STM32F10x_StdPeriph_Lib_V3.3.0\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\system_stm32f10x.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;230      */
;;;231    void SystemCoreClockUpdate (void)
000000  4916              LDR      r1,|L1.92|
;;;232    {
;;;233      uint32_t tmp = 0, pllmull = 0, pllsource = 0;
;;;234    
;;;235    #ifdef  STM32F10X_CL
;;;236      uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
;;;237    #endif /* STM32F10X_CL */
;;;238    
;;;239    #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL)
;;;240      uint32_t prediv1factor = 0;
;;;241    #endif /* STM32F10X_LD_VL or STM32F10X_MD_VL */
;;;242        
;;;243      /* Get SYSCLK source -------------------------------------------------------*/
;;;244      tmp = RCC->CFGR & RCC_CFGR_SWS;
000002  6848              LDR      r0,[r1,#4]
;;;245      
;;;246      switch (tmp)
;;;247      {
;;;248        case 0x00:  /* HSI used as system clock */
;;;249          SystemCoreClock = HSI_Value;
000004  4a16              LDR      r2,|L1.96|
000006  f010030c          ANDS     r3,r0,#0xc            ;244
00000a  4816              LDR      r0,|L1.100|
00000c  bf18              IT       NE                    ;246
00000e  2b04              CMPNE    r3,#4                 ;246
000010  d001              BEQ      |L1.22|
000012  2b08              CMP      r3,#8                 ;246
000014  d001              BEQ      |L1.26|
                  |L1.22|
;;;250          break;
000016  6002              STR      r2,[r0,#0]  ; SystemCoreClock
000018  e015              B        |L1.70|
                  |L1.26|
;;;251        case 0x04:  /* HSE used as system clock */
;;;252          SystemCoreClock = HSE_Value;
;;;253          break;
;;;254        case 0x08:  /* PLL used as system clock */
;;;255    
;;;256          /* Get PLL clock source and multiplication factor ----------------------*/
;;;257          pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
00001a  684a              LDR      r2,[r1,#4]
;;;258          pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
00001c  684b              LDR      r3,[r1,#4]
00001e  f4021270          AND      r2,r2,#0x3c0000       ;257
;;;259          
;;;260    #ifndef STM32F10X_CL      
;;;261          pllmull = ( pllmull >> 18) + 2;
000022  f04f0c02          MOV      r12,#2
000026  f4133f80          TST      r3,#0x10000           ;258
00002a  eb0c4292          ADD      r2,r12,r2,LSR #18
;;;262          
;;;263          if (pllsource == 0x00)
00002e  d003              BEQ      |L1.56|
;;;264          {
;;;265            /* HSI oscillator clock divided by 2 selected as PLL clock entry */
;;;266            SystemCoreClock = (HSI_Value >> 1) * pllmull;
;;;267          }
;;;268          else
;;;269          {
;;;270     #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL)
;;;271           prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
;;;272           /* HSE oscillator clock selected as PREDIV1 clock entry */
;;;273           SystemCoreClock = (HSE_Value / prediv1factor) * pllmull; 
;;;274     #else
;;;275            /* HSE selected as PLL clock entry */
;;;276            if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
000030  684b              LDR      r3,[r1,#4]
000032  f4133f00          TST      r3,#0x20000
000036  d003              BEQ      |L1.64|
                  |L1.56|
;;;277            {/* HSE oscillator clock divided by 2 */
;;;278              SystemCoreClock = (HSE_Value >> 1) * pllmull;
000038  4b0b              LDR      r3,|L1.104|
00003a  435a              MULS     r2,r3,r2
00003c  6002              STR      r2,[r0,#0]  ; SystemCoreClock
00003e  e002              B        |L1.70|
                  |L1.64|
;;;279            }
;;;280            else
;;;281            {
;;;282              SystemCoreClock = HSE_Value * pllmull;
000040  4b07              LDR      r3,|L1.96|
000042  435a              MULS     r2,r3,r2
000044  6002              STR      r2,[r0,#0]  ; SystemCoreClock
                  |L1.70|
;;;283            }
;;;284     #endif
;;;285          }
;;;286    #else
;;;287          pllmull = pllmull >> 18;
;;;288          
;;;289          if (pllmull != 0x0D)        ]
;;;290          {
;;;291             pllmull += 2;
;;;292          }
;;;293          else
;;;294          { /* PLL multiplication factor = PLL input clock * 6.5 */
;;;295            pllmull = 13 / 2; 
;;;296          }
;;;297                
;;;298          if (pllsource == 0x00)
;;;299          {
;;;300            /* HSI oscillator clock divided by 2 selected as PLL clock entry */
;;;301            SystemCoreClock = (HSI_Value >> 1) * pllmull;
;;;302          }
;;;303          else
;;;304          {/* PREDIV1 selected as PLL clock entry */
;;;305            
;;;306            /* Get PREDIV1 clock source and division factor */
;;;307            prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
;;;308            prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
;;;309            
;;;310            if (prediv1source == 0)
;;;311            { 
;;;312              /* HSE oscillator clock selected as PREDIV1 clock entry */
;;;313              SystemCoreClock = (HSE_Value / prediv1factor) * pllmull;          
;;;314            }
;;;315            else
;;;316            {/* PLL2 clock selected as PREDIV1 clock entry */
;;;317              
;;;318              /* Get PREDIV2 division factor and PLL2 multiplication factor */
;;;319              prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4) + 1;
;;;320              pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8 ) + 2; 
;;;321              SystemCoreClock = (((HSE_Value / prediv2factor) * pll2mull) / prediv1factor) * pllmull;                         
;;;322            }
;;;323          }
;;;324    #endif /* STM32F10X_CL */ 
;;;325          break;
;;;326    
;;;327        default:
;;;328          SystemCoreClock = HSI_Value;
;;;329          break;
;;;330      }
;;;331      
;;;332      /* Compute HCLK clock frequency ----------------*/
;;;333      /* Get HCLK prescaler */
;;;334      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000046  6849              LDR      r1,[r1,#4]
000048  4a08              LDR      r2,|L1.108|
00004a  f3c11103          UBFX     r1,r1,#4,#4
00004e  5c51              LDRB     r1,[r2,r1]
;;;335      /* HCLK clock frequency */
;;;336      SystemCoreClock >>= tmp;  
000050  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
000052  fa22f101          LSR      r1,r2,r1
000056  6001              STR      r1,[r0,#0]  ; SystemCoreClock
;;;337    }
000058  4770              BX       lr
;;;338    
                          ENDP

00005a  0000              DCW      0x0000
                  |L1.92|
                          DCD      0x40021000
                  |L1.96|
                          DCD      0x007a1200
                  |L1.100|
                          DCD      ||.data||
                  |L1.104|
                          DCD      0x003d0900
                  |L1.108|
                          DCD      ||.data||+0x4

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;171      */
;;;172    void SystemInit (void)
000000  4835              LDR      r0,|L2.216|
;;;173    {
000002  b082              SUB      sp,sp,#8
;;;174      /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
;;;175      /* Set HSION bit */
;;;176      RCC->CR |= (uint32_t)0x00000001;
000004  6801              LDR      r1,[r0,#0]
000006  f0410101          ORR      r1,r1,#1
00000a  6001              STR      r1,[r0,#0]
;;;177    
;;;178      /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
;;;179    #ifndef STM32F10X_CL
;;;180      RCC->CFGR &= (uint32_t)0xF8FF0000;
00000c  6841              LDR      r1,[r0,#4]
00000e  4a33              LDR      r2,|L2.220|
000010  4011              ANDS     r1,r1,r2
000012  6041              STR      r1,[r0,#4]
;;;181    #else
;;;182      RCC->CFGR &= (uint32_t)0xF0FF0000;
;;;183    #endif /* STM32F10X_CL */   
;;;184      
;;;185      /* Reset HSEON, CSSON and PLLON bits */
;;;186      RCC->CR &= (uint32_t)0xFEF6FFFF;
000014  6801              LDR      r1,[r0,#0]
000016  f4212110          BIC      r1,r1,#0x90000
00001a  f0217180          BIC      r1,r1,#0x1000000
00001e  6001              STR      r1,[r0,#0]
;;;187    
;;;188      /* Reset HSEBYP bit */
;;;189      RCC->CR &= (uint32_t)0xFFFBFFFF;
000020  6801              LDR      r1,[r0,#0]
000022  f4212180          BIC      r1,r1,#0x40000
000026  6001              STR      r1,[r0,#0]
;;;190    
;;;191      /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
;;;192      RCC->CFGR &= (uint32_t)0xFF80FFFF;
000028  6841              LDR      r1,[r0,#4]
00002a  f42101fe          BIC      r1,r1,#0x7f0000
00002e  6041              STR      r1,[r0,#4]
;;;193    
;;;194    #ifdef STM32F10X_CL
;;;195      /* Reset PLL2ON and PLL3ON bits */
;;;196      RCC->CR &= (uint32_t)0xEBFFFFFF;
;;;197    
;;;198      /* Disable all interrupts and clear pending bits  */
;;;199      RCC->CIR = 0x00FF0000;
;;;200    
;;;201      /* Reset CFGR2 register */
;;;202      RCC->CFGR2 = 0x00000000;
;;;203    #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) 
;;;204      /* Disable all interrupts and clear pending bits  */
;;;205      RCC->CIR = 0x009F0000;
;;;206    
;;;207      /* Reset CFGR2 register */
;;;208      RCC->CFGR2 = 0x00000000;      
;;;209    #else
;;;210      /* Disable all interrupts and clear pending bits  */
;;;211      RCC->CIR = 0x009F0000;
000030  f44f011f          MOV      r1,#0x9f0000
000034  6081              STR      r1,[r0,#8]
000036  2200              MOVS     r2,#0
000038  9201              STR      r2,[sp,#4]
00003a  9200              STR      r2,[sp,#0]
00003c  6801              LDR      r1,[r0,#0]
00003e  f4413180          ORR      r1,r1,#0x10000
000042  6001              STR      r1,[r0,#0]
                  |L2.68|
000044  6801              LDR      r1,[r0,#0]
000046  f4013100          AND      r1,r1,#0x20000
00004a  9100              STR      r1,[sp,#0]
00004c  9901              LDR      r1,[sp,#4]
00004e  1c49              ADDS     r1,r1,#1
000050  9101              STR      r1,[sp,#4]
000052  9900              LDR      r1,[sp,#0]
000054  b919              CBNZ     r1,|L2.94|
000056  9901              LDR      r1,[sp,#4]
000058  f5b16fa0          CMP      r1,#0x500
00005c  d1f2              BNE      |L2.68|
                  |L2.94|
00005e  6801              LDR      r1,[r0,#0]
000060  f4113f00          TST      r1,#0x20000
000064  bf02              ITTT     EQ
000066  9200              STREQ    r2,[sp,#0]
;;;212    #endif /* STM32F10X_CL */
;;;213        
;;;214    #if defined (STM32F10X_HD) || (defined STM32F10X_XL)
;;;215      #ifdef DATA_IN_ExtSRAM
;;;216        SystemInit_ExtMemCtl(); 
;;;217      #endif /* DATA_IN_ExtSRAM */
;;;218    #endif 
;;;219    
;;;220      /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
;;;221      /* Configure the Flash Latency cycles and enable prefetch buffer */
;;;222      SetSysClock();
;;;223    }
000068  b002              ADDEQ    sp,sp,#8
00006a  4770              BXEQ     lr
00006c  2101              MOVS     r1,#1
00006e  9100              STR      r1,[sp,#0]
000070  491b              LDR      r1,|L2.224|
000072  680a              LDR      r2,[r1,#0]
000074  f0420210          ORR      r2,r2,#0x10
000078  600a              STR      r2,[r1,#0]
00007a  680a              LDR      r2,[r1,#0]
00007c  f0220203          BIC      r2,r2,#3
000080  600a              STR      r2,[r1,#0]
000082  680a              LDR      r2,[r1,#0]
000084  f0420202          ORR      r2,r2,#2
000088  600a              STR      r2,[r1,#0]
00008a  6841              LDR      r1,[r0,#4]
00008c  6041              STR      r1,[r0,#4]
00008e  6841              LDR      r1,[r0,#4]
000090  6041              STR      r1,[r0,#4]
000092  6841              LDR      r1,[r0,#4]
000094  f4416180          ORR      r1,r1,#0x400
000098  6041              STR      r1,[r0,#4]
00009a  6841              LDR      r1,[r0,#4]
00009c  f421117c          BIC      r1,r1,#0x3f0000
0000a0  6041              STR      r1,[r0,#4]
0000a2  6841              LDR      r1,[r0,#4]
0000a4  f44111e8          ORR      r1,r1,#0x1d0000
0000a8  6041              STR      r1,[r0,#4]
0000aa  6801              LDR      r1,[r0,#0]
0000ac  f0417180          ORR      r1,r1,#0x1000000
0000b0  6001              STR      r1,[r0,#0]
                  |L2.178|
0000b2  6801              LDR      r1,[r0,#0]
0000b4  f0117f00          TST      r1,#0x2000000
0000b8  d0fb              BEQ      |L2.178|
0000ba  6841              LDR      r1,[r0,#4]
0000bc  f0210103          BIC      r1,r1,#3
0000c0  6041              STR      r1,[r0,#4]
0000c2  6841              LDR      r1,[r0,#4]
0000c4  f0410102          ORR      r1,r1,#2
0000c8  6041              STR      r1,[r0,#4]
                  |L2.202|
0000ca  6841              LDR      r1,[r0,#4]
0000cc  f001010c          AND      r1,r1,#0xc
0000d0  2908              CMP      r1,#8
0000d2  d1fa              BNE      |L2.202|
0000d4  b002              ADD      sp,sp,#8
0000d6  4770              BX       lr
;;;224    
                          ENDP

                  |L2.216|
                          DCD      0x40021000
                  |L2.220|
                          DCD      0xf8ff0000
                  |L2.224|
                          DCD      0x40022000

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x044aa200
                  AHBPrescTable
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  01020304          DCB      0x01,0x02,0x03,0x04
000010  06070809          DCB      0x06,0x07,0x08,0x09

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\M0P0_Library\\STM32F10x_StdPeriph_Lib_V3.3.0\\Libraries\\CMSIS\\CM3\\DeviceSupport\\ST\\STM32F10x\\system_stm32f10x.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f10x_c_5d646a67____REV16|
#line 464 "D:\\Program_Files_x86\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.1.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_system_stm32f10x_c_5d646a67____REV16| PROC
#line 465

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f10x_c_5d646a67____REVSH|
#line 479
|__asm___18_system_stm32f10x_c_5d646a67____REVSH| PROC
#line 480

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f10x_c_5d646a67____RRX|
#line 666
|__asm___18_system_stm32f10x_c_5d646a67____RRX| PROC
#line 667

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
