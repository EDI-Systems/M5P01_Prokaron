; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\platform_cmx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\platform_cmx.d --cpu=Cortex-M3 --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32F10x_StdPeriph_Lib_V3.3.0\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\..\M0P0_Library\STM32F10x_StdPeriph_Lib_V3.3.0\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\..\M0P0_Library\STM32F10x_StdPeriph_Lib_V3.3.0\Libraries\CMSIS -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F103RET6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --enum_is_int --signed_chars --omf_browse=.\debug\output\platform_cmx.crf ..\..\MProkaron\Platform\CortexM\platform_cmx.c]
                          THUMB

                          AREA ||i.RMP_Putchar||, CODE, READONLY, ALIGN=2

                  RMP_Putchar PROC
;;;91     ******************************************************************************/
;;;92     void RMP_Putchar(char Char)
000000  4903              LDR      r1,|L1.16|
;;;93     {
;;;94         RMP_CMX_PUTCHAR(Char);
000002  8008              STRH     r0,[r1,#0]
000004  1f08              SUBS     r0,r1,#4
                  |L1.6|
000006  8801              LDRH     r1,[r0,#0]
000008  f0110f40          TST      r1,#0x40
00000c  d0fb              BEQ      |L1.6|
;;;95     }
00000e  4770              BX       lr
;;;96     /* End Function:RMP_Putchar **************************************************/
                          ENDP

                  |L1.16|
                          DCD      0x40013804

                          AREA ||i._RMP_Low_Level_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Low_Level_Init PROC
;;;65     ******************************************************************************/
;;;66     void _RMP_Low_Level_Init(void)
000000  b510              PUSH     {r4,lr}
;;;67     {   
000002  b088              SUB      sp,sp,#0x20
;;;68         RMP_CMX_LOW_LEVEL_INIT();
000004  2110              MOVS     r1,#0x10
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       RMP_Clear
00000c  210c              MOVS     r1,#0xc
00000e  a804              ADD      r0,sp,#0x10
000010  f7fffffe          BL       RMP_Clear
000014  2018              MOVS     r0,#0x18
000016  9006              STR      r0,[sp,#0x18]
000018  f44f7000          MOV      r0,#0x200
00001c  f8ad0010          STRH     r0,[sp,#0x10]
000020  2003              MOVS     r0,#3
000022  9005              STR      r0,[sp,#0x14]
000024  2101              MOVS     r1,#1
000026  2004              MOVS     r0,#4
000028  f7fffffe          BL       RCC_APB2PeriphClockCmd
00002c  a904              ADD      r1,sp,#0x10
00002e  4827              LDR      r0,|L2.204|
000030  f7fffffe          BL       GPIO_Init
000034  f44f30e1          MOV      r0,#0x1c200
000038  9000              STR      r0,[sp,#0]
00003a  2000              MOVS     r0,#0
00003c  f8ad0004          STRH     r0,[sp,#4]
000040  f8ad0006          STRH     r0,[sp,#6]
000044  f8ad0008          STRH     r0,[sp,#8]
000048  f8ad000c          STRH     r0,[sp,#0xc]
00004c  2008              MOVS     r0,#8
00004e  f8ad000a          STRH     r0,[sp,#0xa]
000052  2101              MOVS     r1,#1
000054  02c0              LSLS     r0,r0,#11
000056  f7fffffe          BL       RCC_APB2PeriphClockCmd
00005a  4c1d              LDR      r4,|L2.208|
00005c  4669              MOV      r1,sp
00005e  4620              MOV      r0,r4
000060  f7fffffe          BL       USART_Init
000064  2101              MOVS     r1,#1
000066  4620              MOV      r0,r4
000068  f7fffffe          BL       USART_Cmd
00006c  210d              MOVS     r1,#0xd
00006e  1d20              ADDS     r0,r4,#4
000070  8001              STRH     r1,[r0,#0]
                  |L2.114|
000072  8821              LDRH     r1,[r4,#0]
000074  f0110f40          TST      r1,#0x40
000078  d0fb              BEQ      |L2.114|
00007a  210a              MOVS     r1,#0xa
00007c  8001              STRH     r1,[r0,#0]
                  |L2.126|
00007e  8820              LDRH     r0,[r4,#0]
000080  f0100f40          TST      r0,#0x40
000084  d0fb              BEQ      |L2.126|
000086  4813              LDR      r0,|L2.212|
000088  6801              LDR      r1,[r0,#0]
00008a  f44121e0          ORR      r1,r1,#0x70000
00008e  6001              STR      r1,[r0,#0]
000090  4811              LDR      r0,|L2.216|
000092  6801              LDR      r1,[r0,#0]
000094  f64f02ff          MOV      r2,#0xf8ff
000098  4011              ANDS     r1,r1,r2
00009a  f44161a0          ORR      r1,r1,#0x500
00009e  f04171fd          ORR      r1,r1,#0x1fa0000
0000a2  f0416180          ORR      r1,r1,#0x4000000
0000a6  6001              STR      r1,[r0,#0]
0000a8  490c              LDR      r1,|L2.220|
0000aa  20f0              MOVS     r0,#0xf0
0000ac  7008              STRB     r0,[r1,#0]
0000ae  1cc9              ADDS     r1,r1,#3
0000b0  7008              STRB     r0,[r1,#0]
0000b2  1c49              ADDS     r1,r1,#1
0000b4  7008              STRB     r0,[r1,#0]
0000b6  490a              LDR      r1,|L2.224|
0000b8  7008              STRB     r0,[r1,#0]
0000ba  1c49              ADDS     r1,r1,#1
0000bc  7008              STRB     r0,[r1,#0]
0000be  1d89              ADDS     r1,r1,#6
0000c0  7008              STRB     r0,[r1,#0]
;;;69         
;;;70         RMP_Disable_Int();
0000c2  b008              ADD      sp,sp,#0x20
0000c4  e8bd4010          POP      {r4,lr}
0000c8  f7ffbffe          B.W      RMP_Disable_Int
;;;71     }
;;;72     /* End Function:_RMP_Low_Level_Init ******************************************/
                          ENDP

                  |L2.204|
                          DCD      0x40010800
                  |L2.208|
                          DCD      0x40013800
                  |L2.212|
                          DCD      0xe000ed24
                  |L2.216|
                          DCD      0xe000ed0c
                  |L2.220|
                          DCD      0xe000ed1f
                  |L2.224|
                          DCD      0xe000ed19

                          AREA ||i._RMP_Plat_Hook||, CODE, READONLY, ALIGN=1

                  _RMP_Plat_Hook PROC
;;;79     ******************************************************************************/
;;;80     void _RMP_Plat_Hook(void)
000000  f7ffbffe          B.W      RMP_Enable_Int
;;;81     {
;;;82         RMP_Enable_Int();
;;;83     }
;;;84     /* End Function:_RMP_Plat_Hook ***********************************************/
                          ENDP


                          AREA ||i._RMP_Stack_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Stack_Init PROC
;;;45     ******************************************************************************/
;;;46     void _RMP_Stack_Init(ptr_t Entry, ptr_t Stack, ptr_t Arg)
000000  63c8              STR      r0,[r1,#0x3c]
;;;47     {
;;;48         /* The "9" here is because we also pushed other registers to PSP */
;;;49         /* This is the LR value indicating that we never used the FPU */
;;;50         ((ptr_t*)Stack)[0+8]=0xFFFFFFFD;    
;;;51         /* CM3:Pass the parameter */                            
;;;52         ((ptr_t*)Stack)[0+9]=Arg;       
;;;53         /* CM3:for xPSR. fill the T bit,or an INVSTATE will happen */
;;;54         ((ptr_t*)Stack)[6+9]=Entry;
;;;55         /* CM3:Set the process entrance */                            
;;;56         ((ptr_t*)Stack)[7+9]=0x01000200;      
000002  4803              LDR      r0,|L4.16|
000004  f06f0302          MVN      r3,#2                 ;50
000008  6408              STR      r0,[r1,#0x40]
00000a  e9c13208          STRD     r3,r2,[r1,#0x20]
;;;57     }
00000e  4770              BX       lr
;;;58     /* End Function:_RMP_Stack_Init **********************************************/
                          ENDP

                  |L4.16|
                          DCD      0x01000200

;*** Start embedded assembler ***

#line 1 "..\\..\\MProkaron\\Platform\\CortexM\\platform_cmx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____REV16|
#line 464 "D:\\Program_Files_x86\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.1.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___14_platform_cmx_c_203ac359____REV16| PROC
#line 465

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____REVSH|
#line 479
|__asm___14_platform_cmx_c_203ac359____REVSH| PROC
#line 480

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____RRX|
#line 666
|__asm___14_platform_cmx_c_203ac359____RRX| PROC
#line 667

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
