; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\debug\output\platform_cmx.o --asm_dir=.\Debug\Listings\ --list_dir=.\Debug\Listings\ --depend=.\debug\output\platform_cmx.d --cpu=Cortex-M7.fp.dp --apcs=interwork -O3 -Otime --diag_suppress=9931 -I..\..\MProkaron\Include -I..\..\..\M0P0_Library\STM32F7xx_HAL_Driver\Core -I..\..\..\M0P0_Library\STM32F7xx_HAL_Driver\Inc -I..\..\..\M0P0_Library\STM32F7xx_HAL_Driver\Inc\Conf -IF:\Code_Library\MCU\Mutatus\M5P1_MuProkaron\Project\RVMDK-STM32F767IGT6\RTE -ID:\Program_Files_x86\Keil_v5\ARM\PACK\ARM\CMSIS\5.1.1\CMSIS\Include -ID:\Program_Files_x86\Keil_v5\ARM\PACK\Keil\STM32F7xx_DFP\2.9.0\Drivers\CMSIS\Device\ST\STM32F7xx\Include -D__MICROLIB -D__UVISION_VERSION=520 -D_RTE_ -DSTM32F767xx -DSTM32F767xx -DUSE_HAL_DRIVER --enum_is_int --signed_chars --omf_browse=.\debug\output\platform_cmx.crf ..\..\MProkaron\Platform\CortexM\platform_cmx.c]
                          THUMB

                          AREA ||i.RMP_Putchar||, CODE, READONLY, ALIGN=2

                  RMP_Putchar PROC
;;;91     ******************************************************************************/
;;;92     void RMP_Putchar(char Char)
000000  4903              LDR      r1,|L1.16|
;;;93     {
;;;94         RMP_CMX_PUTCHAR(Char);
000002  6288              STR      r0,[r1,#0x28]
                  |L1.4|
000004  69c8              LDR      r0,[r1,#0x1c]
000006  f0100f40          TST      r0,#0x40
00000a  d0fb              BEQ      |L1.4|
;;;95     }
00000c  4770              BX       lr
;;;96     /* End Function:RMP_Putchar **************************************************/
                          ENDP

00000e  0000              DCW      0x0000
                  |L1.16|
                          DCD      0x40011000

                          AREA ||i._RMP_Low_Level_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Low_Level_Init PROC
;;;65     ******************************************************************************/
;;;66     void _RMP_Low_Level_Init(void)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;67     {   
000004  b0b9              SUB      sp,sp,#0xe4
;;;68         RMP_CMX_LOW_LEVEL_INIT();
000006  2134              MOVS     r1,#0x34
000008  a81f              ADD      r0,sp,#0x7c
00000a  f7fffffe          BL       RMP_Clear
00000e  2114              MOVS     r1,#0x14
000010  a82c              ADD      r0,sp,#0xb0
000012  f7fffffe          BL       RMP_Clear
000016  2114              MOVS     r1,#0x14
000018  a831              ADD      r0,sp,#0xc4
00001a  f7fffffe          BL       RMP_Clear
00001e  2178              MOVS     r1,#0x78
000020  4668              MOV      r0,sp
000022  f7fffffe          BL       RMP_Clear
000026  488c              LDR      r0,|L2.600|
000028  6801              LDR      r1,[r0,#0]
00002a  f0415180          ORR      r1,r1,#0x10000000
00002e  6001              STR      r1,[r0,#0]
000030  6800              LDR      r0,[r0,#0]
000032  f0005080          AND      r0,r0,#0x10000000
000036  901e              STR      r0,[sp,#0x78]
000038  4888              LDR      r0,|L2.604|
00003a  6801              LDR      r1,[r0,#0]
00003c  f4414140          ORR      r1,r1,#0xc000
000040  6001              STR      r1,[r0,#0]
000042  6800              LDR      r0,[r0,#0]
000044  2502              MOVS     r5,#2
000046  2601              MOVS     r6,#1
000048  f04f0c09          MOV      r12,#9
00004c  f4004040          AND      r0,r0,#0xc000
000050  901e              STR      r0,[sp,#0x78]
000052  03e8              LSLS     r0,r5,#15
000054  2219              MOVS     r2,#0x19
000056  0181              LSLS     r1,r0,#6
000058  f44f73d8          MOV      r3,#0x1b0
00005c  e9cd5125          STRD     r5,r1,[sp,#0x94]
000060  a927              ADD      r1,sp,#0x9c
000062  e9cd601f          STRD     r6,r0,[sp,#0x7c]
000066  a81f              ADD      r0,sp,#0x7c
000068  e881102c          STM      r1,{r2,r3,r5,r12}
00006c  f7fffffe          BL       HAL_RCC_OscConfig
000070  2800              CMP      r0,#0
000072  d01b              BEQ      |L2.172|
000074  a07a              ADR      r0,|L2.608|
000076  f7fffffe          BL       RMP_Print_String
00007a  a083              ADR      r0,|L2.648|
00007c  f7fffffe          BL       RMP_Print_String
000080  a08d              ADR      r0,|L2.696|
000082  f7fffffe          BL       RMP_Print_String
000086  2044              MOVS     r0,#0x44
000088  f7fffffe          BL       RMP_Print_Int
00008c  a08d              ADR      r0,|L2.708|
00008e  f7fffffe          BL       RMP_Print_String
000092  a08d              ADR      r0,|L2.712|
000094  f7fffffe          BL       RMP_Print_String
000098  a08e              ADR      r0,|L2.724|
00009a  f7fffffe          BL       RMP_Print_String
00009e  a08e              ADR      r0,|L2.728|
0000a0  f7fffffe          BL       RMP_Print_String
0000a4  a087              ADR      r0,|L2.708|
0000a6  f7fffffe          BL       RMP_Print_String
                  |L2.170|
0000aa  e7fe              B        |L2.170|
                  |L2.172|
0000ac  f7fffffe          BL       HAL_PWREx_EnableOverDrive
0000b0  2800              CMP      r0,#0
0000b2  d01b              BEQ      |L2.236|
0000b4  a06a              ADR      r0,|L2.608|
0000b6  f7fffffe          BL       RMP_Print_String
0000ba  a073              ADR      r0,|L2.648|
0000bc  f7fffffe          BL       RMP_Print_String
0000c0  a07d              ADR      r0,|L2.696|
0000c2  f7fffffe          BL       RMP_Print_String
0000c6  2044              MOVS     r0,#0x44
0000c8  f7fffffe          BL       RMP_Print_Int
0000cc  a07d              ADR      r0,|L2.708|
0000ce  f7fffffe          BL       RMP_Print_String
0000d2  a07d              ADR      r0,|L2.712|
0000d4  f7fffffe          BL       RMP_Print_String
0000d8  a07e              ADR      r0,|L2.724|
0000da  f7fffffe          BL       RMP_Print_String
0000de  a07e              ADR      r0,|L2.728|
0000e0  f7fffffe          BL       RMP_Print_String
0000e4  a077              ADR      r0,|L2.708|
0000e6  f7fffffe          BL       RMP_Print_String
                  |L2.234|
0000ea  e7fe              B        |L2.234|
                  |L2.236|
0000ec  f44f5280          MOV      r2,#0x1000
0000f0  2400              MOVS     r4,#0
0000f2  942e              STR      r4,[sp,#0xb8]
0000f4  f44f51a0          MOV      r1,#0x1400
0000f8  e9cd122f          STRD     r1,r2,[sp,#0xbc]
0000fc  200f              MOVS     r0,#0xf
0000fe  e9cd052c          STRD     r0,r5,[sp,#0xb0]
000102  2107              MOVS     r1,#7
000104  a82c              ADD      r0,sp,#0xb0
000106  f7fffffe          BL       HAL_RCC_ClockConfig
00010a  2800              CMP      r0,#0
00010c  d01b              BEQ      |L2.326|
00010e  a054              ADR      r0,|L2.608|
000110  f7fffffe          BL       RMP_Print_String
000114  a05c              ADR      r0,|L2.648|
000116  f7fffffe          BL       RMP_Print_String
00011a  a067              ADR      r0,|L2.696|
00011c  f7fffffe          BL       RMP_Print_String
000120  2044              MOVS     r0,#0x44
000122  f7fffffe          BL       RMP_Print_Int
000126  a067              ADR      r0,|L2.708|
000128  f7fffffe          BL       RMP_Print_String
00012c  a066              ADR      r0,|L2.712|
00012e  f7fffffe          BL       RMP_Print_String
000132  a068              ADR      r0,|L2.724|
000134  f7fffffe          BL       RMP_Print_String
000138  a067              ADR      r0,|L2.728|
00013a  f7fffffe          BL       RMP_Print_String
00013e  a061              ADR      r0,|L2.708|
000140  f7fffffe          BL       RMP_Print_String
                  |L2.324|
000144  e7fe              B        |L2.324|
                  |L2.326|
000146  f3bf8f4f          DSB      
00014a  f3bf8f6f          ISB      
00014e  4866              LDR      r0,|L2.744|
000150  4f64              LDR      r7,|L2.740|
000152  6004              STR      r4,[r0,#0]
000154  6838              LDR      r0,[r7,#0]
000156  f4403000          ORR      r0,r0,#0x20000
00015a  6038              STR      r0,[r7,#0]
00015c  f3bf8f4f          DSB      
000160  f3bf8f6f          ISB      
000164  4861              LDR      r0,|L2.748|
000166  6004              STR      r4,[r0,#0]
000168  f3bf8f4f          DSB      
00016c  1f00              SUBS     r0,r0,#4
00016e  4960              LDR      r1,|L2.752|
000170  f64378ff          MOV      r8,#0x3fff
000174  6800              LDR      r0,[r0,#0]
000176  f3c0334e          UBFX     r3,r0,#13,#15
00017a  f3c00cc9          UBFX     r12,r0,#3,#10
                  |L2.382|
00017e  ea081243          AND      r2,r8,r3,LSL #5
000182  4660              MOV      r0,r12
                  |L2.388|
000184  ea427980          ORR      r9,r2,r0,LSL #30
000188  f8c19000          STR      r9,[r1,#0]
00018c  1e40              SUBS     r0,r0,#1
00018e  d2f9              BCS      |L2.388|
000190  1e5b              SUBS     r3,r3,#1
000192  d2f4              BCS      |L2.382|
000194  f3bf8f4f          DSB      
000198  6838              LDR      r0,[r7,#0]
00019a  f4403080          ORR      r0,r0,#0x10000
00019e  6038              STR      r0,[r7,#0]
0001a0  f3bf8f4f          DSB      
0001a4  f3bf8f6f          ISB      
0001a8  4852              LDR      r0,|L2.756|
0001aa  6801              LDR      r1,[r0,#0]
0001ac  f4417100          ORR      r1,r1,#0x200
0001b0  6001              STR      r1,[r0,#0]
0001b2  4851              LDR      r0,|L2.760|
0001b4  6801              LDR      r1,[r0,#0]
0001b6  f0410101          ORR      r1,r1,#1
0001ba  6001              STR      r1,[r0,#0]
0001bc  6800              LDR      r0,[r0,#0]
0001be  f0000001          AND      r0,r0,#1
0001c2  901e              STR      r0,[sp,#0x78]
0001c4  484d              LDR      r0,|L2.764|
0001c6  6801              LDR      r1,[r0,#0]
0001c8  f0410110          ORR      r1,r1,#0x10
0001cc  6001              STR      r1,[r0,#0]
0001ce  6800              LDR      r0,[r0,#0]
0001d0  2207              MOVS     r2,#7
0001d2  2103              MOVS     r1,#3
0001d4  9633              STR      r6,[sp,#0xcc]
0001d6  f0000010          AND      r0,r0,#0x10
0001da  901e              STR      r0,[sp,#0x78]
0001dc  e9cd1234          STRD     r1,r2,[sp,#0xd0]
0001e0  f44f7000          MOV      r0,#0x200
0001e4  e9cd0531          STRD     r0,r5,[sp,#0xc4]
0001e8  4845              LDR      r0,|L2.768|
0001ea  a931              ADD      r1,sp,#0xc4
0001ec  f7fffffe          BL       HAL_GPIO_Init
0001f0  4844              LDR      r0,|L2.772|
0001f2  f44f31e1          MOV      r1,#0x1c200
0001f6  9000              STR      r0,[sp,#0]
0001f8  2208              MOVS     r2,#8
0001fa  e9cd1401          STRD     r1,r4,[sp,#4]
0001fe  9403              STR      r4,[sp,#0xc]
000200  4668              MOV      r0,sp
000202  9404              STR      r4,[sp,#0x10]
000204  e9cd2405          STRD     r2,r4,[sp,#0x14]
000208  f7fffffe          BL       HAL_UART_Init
00020c  4a3e              LDR      r2,|L2.776|
00020e  493f              LDR      r1,|L2.780|
000210  6813              LDR      r3,[r2,#0]
000212  20f0              MOVS     r0,#0xf0
000214  f64f0cff          MOV      r12,#0xf8ff
000218  f44323e0          ORR      r3,r3,#0x70000
00021c  6013              STR      r3,[r2,#0]
00021e  680a              LDR      r2,[r1,#0]
000220  4c3b              LDR      r4,|L2.784|
000222  ea02020c          AND      r2,r2,r12
000226  f44262a0          ORR      r2,r2,#0x500
00022a  1ce3              ADDS     r3,r4,#3
00022c  f04272fd          ORR      r2,r2,#0x1fa0000
000230  f1030c01          ADD      r12,r3,#1
000234  f0426280          ORR      r2,r2,#0x4000000
000238  600a              STR      r2,[r1,#0]
00023a  1fa1              SUBS     r1,r4,#6
00023c  7020              STRB     r0,[r4,#0]
00023e  1c4a              ADDS     r2,r1,#1
000240  7018              STRB     r0,[r3,#0]
000242  1dcc              ADDS     r4,r1,#7
000244  f88c0000          STRB     r0,[r12,#0]
000248  7008              STRB     r0,[r1,#0]
00024a  7010              STRB     r0,[r2,#0]
00024c  7020              STRB     r0,[r4,#0]
;;;69         
;;;70         RMP_Disable_Int();
00024e  b039              ADD      sp,sp,#0xe4
000250  e8bd43f0          POP      {r4-r9,lr}
000254  f7ffbffe          B.W      RMP_Disable_Int
;;;71     }
;;;72     /* End Function:_RMP_Low_Level_Init ******************************************/
                          ENDP

                  |L2.600|
                          DCD      0x40023840
                  |L2.604|
                          DCD      0x40007000
                  |L2.608|
000260  0d0a2a2a          DCB      "\r\n***\r\nKernel panic - not syncing:\r\n",0
000264  2a0d0a4b
000268  65726e65
00026c  6c207061
000270  6e696320
000274  2d206e6f
000278  74207379
00027c  6e63696e
000280  673a0d0a
000284  00      
000285  00                DCB      0
000286  00                DCB      0
000287  00                DCB      0
                  |L2.648|
000288  2e2e5c2e          DCB      "..\\..\\MProkaron\\Platform\\CortexM\\platform_cmx.c",0
00028c  2e5c4d50
000290  726f6b61
000294  726f6e5c
000298  506c6174
00029c  666f726d
0002a0  5c436f72
0002a4  7465784d
0002a8  5c706c61
0002ac  74666f72
0002b0  6d5f636d
0002b4  782e6300
                  |L2.696|
0002b8  202c204c          DCB      " , Line ",0
0002bc  696e6520
0002c0  00      
0002c1  00                DCB      0
0002c2  00                DCB      0
0002c3  00                DCB      0
                  |L2.708|
0002c4  0d0a00            DCB      "\r\n",0
0002c7  00                DCB      0
                  |L2.712|
0002c8  46656220          DCB      "Feb 28 2018",0
0002cc  32382032
0002d0  30313800
                  |L2.724|
0002d4  202c2000          DCB      " , ",0
                  |L2.728|
0002d8  31343a31          DCB      "14:11:46",0
0002dc  313a3436
0002e0  00      
0002e1  00                DCB      0
0002e2  00                DCB      0
0002e3  00                DCB      0
                  |L2.740|
                          DCD      0xe000ed14
                  |L2.744|
                          DCD      0xe000ef50
                  |L2.748|
                          DCD      0xe000ed84
                  |L2.752|
                          DCD      0xe000ef60
                  |L2.756|
                          DCD      0x40023c00
                  |L2.760|
                          DCD      0x40023830
                  |L2.764|
                          DCD      0x40023844
                  |L2.768|
                          DCD      0x40020000
                  |L2.772|
                          DCD      0x40011000
                  |L2.776|
                          DCD      0xe000ed24
                  |L2.780|
                          DCD      0xe000ed0c
                  |L2.784|
                          DCD      0xe000ed1f

                          AREA ||i._RMP_Plat_Hook||, CODE, READONLY, ALIGN=1

                  _RMP_Plat_Hook PROC
;;;79     ******************************************************************************/
;;;80     void _RMP_Plat_Hook(void)
000000  f7ffbffe          B.W      RMP_Enable_Int
;;;81     {
;;;82         RMP_Enable_Int();
;;;83     }
;;;84     /* End Function:_RMP_Plat_Hook ***********************************************/
                          ENDP


                          AREA ||i._RMP_Stack_Init||, CODE, READONLY, ALIGN=2

                  _RMP_Stack_Init PROC
;;;45     ******************************************************************************/
;;;46     void _RMP_Stack_Init(ptr_t Entry, ptr_t Stack, ptr_t Arg)
000000  63c8              STR      r0,[r1,#0x3c]
;;;47     {
;;;48         /* The "9" here is because we also pushed other registers to PSP */
;;;49         /* This is the LR value indicating that we never used the FPU */
;;;50         ((ptr_t*)Stack)[0+8]=0xFFFFFFFD;    
000002  f06f0302          MVN      r3,#2
;;;51         /* CM3:Pass the parameter */                            
;;;52         ((ptr_t*)Stack)[0+9]=Arg;       
;;;53         /* CM3:for xPSR. fill the T bit,or an INVSTATE will happen */
;;;54         ((ptr_t*)Stack)[6+9]=Entry;
;;;55         /* CM3:Set the process entrance */                            
;;;56         ((ptr_t*)Stack)[7+9]=0x01000200;      
000006  4802              LDR      r0,|L4.16|
000008  6408              STR      r0,[r1,#0x40]
00000a  e9c13208          STRD     r3,r2,[r1,#0x20]
;;;57     }
00000e  4770              BX       lr
;;;58     /* End Function:_RMP_Stack_Init **********************************************/
                          ENDP

                  |L4.16|
                          DCD      0x01000200

;*** Start embedded assembler ***

#line 1 "..\\..\\MProkaron\\Platform\\CortexM\\platform_cmx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____REV16|
#line 388 "..\\..\\..\\M0P0_Library\\STM32F7xx_HAL_Driver\\Core\\cmsis_armcc.h"
|__asm___14_platform_cmx_c_203ac359____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____REVSH|
#line 402
|__asm___14_platform_cmx_c_203ac359____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___14_platform_cmx_c_203ac359____RRX|
#line 587
|__asm___14_platform_cmx_c_203ac359____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
